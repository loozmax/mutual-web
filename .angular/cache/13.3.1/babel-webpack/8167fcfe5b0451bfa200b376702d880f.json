{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { FormBaseViewModel } from \"src/libraries/form-base-view-model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/user.base.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/global-notification.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@taiga-ui/kit\";\nimport * as i6 from \"@taiga-ui/core\";\nimport * as i7 from \"@taiga-ui/core/components/button\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent extends FormBaseViewModel {\n    constructor(_userBaseService, _route, _notificationService) {\n      super();\n      this._userBaseService = _userBaseService;\n      this._route = _route;\n      this._notificationService = _notificationService;\n    }\n\n    toTeacherForm() {\n      this._route.navigate(['login', 'teacher']);\n    }\n\n    submitForm() {\n      const user = {\n        username: this.getFormValue('email'),\n        password: this.getFormValue('passwordValue')\n      };\n\n      this._userBaseService.login(user, 'ROLE_STUDENT\\\\' + user.username).subscribe({\n        next: success => {\n          if (success.role) {\n            this._route.navigate(['cabinet', 'main']);\n\n            localStorage.setItem('user', JSON.stringify({\n              username: this.getFormValue('email'),\n              password: this.getFormValue('passwordValue'),\n              role: success.role\n            }));\n\n            this._notificationService.subject$.next({\n              text: 'Успешный вход в аккаунт',\n              status: 'success'\n            });\n          }\n        },\n        error: () => {\n          this._notificationService.subject$.next({\n            text: 'Ошибка при входе в аккаунт',\n            status: 'error'\n          });\n        }\n      });\n    }\n\n    getControls() {\n      return new FormGroup({\n        email: new FormControl('', [Validators.required]),\n        passwordValue: new FormControl('', [Validators.required])\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserBaseService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GlobalNotificationService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"login-component\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"wrapper\"], [1, \"b-form\", 3, \"formGroup\"], [\"formControlName\", \"email\", 1, \"b-form__email_field\"], [\"tuiTextfield\", \"\", \"placeholder\", \"mail@mail.ru\", \"type\", \"email\"], [\"formControlName\", \"passwordValue\", 1, \"b-form__password_field\"], [\"tuiTextfield\", \"\", \"placeholder\", \"\", \"type\", \"password\"], [1, \"b-form__bottom_panel\"], [3, \"click\"], [\"tuiButton\", \"\", \"type\", \"button\", \"appearance\", \"primary\", 1, \"b-form__button_login\", 3, \"disabled\", \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\")(3, \"tui-input\", 2);\n        i0.ɵɵtext(4, \" \\u0410\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B \");\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"tui-input\", 4);\n        i0.ɵɵtext(8, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \");\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\");\n        i0.ɵɵtext(12, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_div_click_13_listener() {\n          return ctx.toTeacherForm();\n        });\n        i0.ɵɵtext(14, \"\\u042F \\u043F\\u0440\\u0435\\u043F\\u043E\\u0434\\u0430\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\")(16, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_16_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵtext(17, \" \\u0412\\u043E\\u0439\\u0442\\u0438 \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.controlsGroup);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", !ctx.controlsGroup.valid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.TuiInputComponent, i5.TuiInputDirective, i4.NgControlStatus, i4.FormControlName, i6.TuiTextfieldComponent, i7.TuiButtonComponent],\n    styles: [\".b-form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .b-form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2), .b-form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:last-child{display:flex;justify-content:center;flex-wrap:wrap}.wrapper[_ngcontent-%COMP%]{margin-top:109px}.b-form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin-bottom:18px}.b-form__email_field[_ngcontent-%COMP%], .b-form__password_field[_ngcontent-%COMP%]{width:100%;border-radius:0}.b-form__bottom_panel[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.b-form__bottom_panel[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{cursor:pointer}.b-form__button_login[_ngcontent-%COMP%]{border-radius:0;width:100%;margin-top:72px;background:#7256FD}\"],\n    changeDetection: 0\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}