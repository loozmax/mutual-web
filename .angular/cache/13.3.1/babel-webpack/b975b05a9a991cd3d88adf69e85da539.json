{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Input, Directive, Inject, forwardRef, HostBinding, Component, ChangeDetectionStrategy, InjectionToken, SkipSelf, ElementRef, ContentChildren, Optional, ViewChild, EventEmitter, Output, Injectable, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { startWith, map, distinctUntilChanged, switchMap, tap, mapTo } from 'rxjs/operators';\nimport { EMPTY_ARRAY, tuiDefaultProp, ALWAYS_TRUE_HANDLER, EMPTY_FUNCTION, EMPTY_QUERY, isPresent, TuiLetModule } from '@taiga-ui/cdk';\nimport { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { CommonModule } from '@angular/common';\nimport { TuiExpandModule, TuiButtonModule } from '@taiga-ui/core';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@taiga-ui/core';\nimport * as ɵngcc3 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc4 from '@taiga-ui/cdk';\n\nfunction TuiTreeItemContentComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function TuiTreeItemContentComponent_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onClick();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"t-button_expanded\", ctx_r0.isExpanded);\n  }\n}\n\nfunction TuiTreeItemContentComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TuiTreeItemComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nfunction TuiTreeItemComponent_tui_expand_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tui-expand\", 4);\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵprojection(4, 2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"expanded\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r2.expanded$));\n  }\n}\n\nfunction TuiTreeItemComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = [\"*\", [[\"tui-tree-item\"]], [[\"tui-tree\"]]];\n\nconst _c1 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    template: a1\n  };\n};\n\nconst _c2 = [\"*\", \"tui-tree-item\", \"tui-tree\"];\nconst _c3 = [\"value\", \"\"];\n\nconst _c4 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    node: a1\n  };\n};\n\nfunction TuiTreeComponent_tui_tree_item_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    const _r2 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r3.content)(\"context\", ɵngcc0.ɵɵpureFunction2(2, _c4, ctx_r3.value, _r2));\n  }\n}\n\nfunction TuiTreeComponent_tui_tree_item_0_tui_tree_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-tree\", 6);\n  }\n\n  if (rf & 2) {\n    const child_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"value\", child_r5)(\"content\", ctx_r4.content);\n  }\n}\n\nfunction TuiTreeComponent_tui_tree_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tui-tree-item\", 1, 2);\n    ɵngcc0.ɵɵtemplate(2, TuiTreeComponent_tui_tree_item_0_div_2_Template, 1, 5, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(3, TuiTreeComponent_tui_tree_item_0_tui_tree_3_Template, 1, 2, \"tui-tree\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const children_r1 = ctx.tuiLet;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"tuiTreeNode\", ctx_r0.value);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.value !== children_r1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", children_r1);\n  }\n}\n\nvar TuiTreeChildrenDirective_1;\nlet TuiTreeChildrenDirective = TuiTreeChildrenDirective_1 = class TuiTreeChildrenDirective {\n  constructor() {\n    this.childrenHandler = TuiTreeChildrenDirective_1.defaultHandler;\n  }\n\n  static defaultHandler(item) {\n    return Array.isArray(item) ? item : EMPTY_ARRAY;\n  }\n\n};\n\nTuiTreeChildrenDirective.ɵfac = function TuiTreeChildrenDirective_Factory(t) {\n  return new (t || TuiTreeChildrenDirective)();\n};\n\nTuiTreeChildrenDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTreeChildrenDirective,\n  selectors: [[\"tui-tree\", \"childrenHandler\", \"\"]],\n  inputs: {\n    childrenHandler: \"childrenHandler\"\n  }\n});\n\n__decorate([Input(), tuiDefaultProp()], TuiTreeChildrenDirective.prototype, \"childrenHandler\", void 0);\n\nlet TuiTreeItemContentComponent = /*#__PURE__*/(() => {\n  let TuiTreeItemContentComponent = class TuiTreeItemContentComponent {\n    constructor(context, controller) {\n      this.context = context;\n      this.controller = controller;\n    }\n\n    get isExpanded() {\n      return this.context.$implicit.isExpanded;\n    }\n\n    get isExpandable() {\n      return this.context.$implicit.isExpandable && this.controller !== TUI_DEFAULT_TREE_CONTROLLER;\n    }\n\n    onClick() {\n      this.controller.toggle(this.context.$implicit);\n    }\n\n  };\n\n  TuiTreeItemContentComponent.ɵfac = function TuiTreeItemContentComponent_Factory(t) {\n    return new (t || TuiTreeItemContentComponent)(ɵngcc0.ɵɵdirectiveInject(POLYMORPHEUS_CONTEXT), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => TUI_TREE_CONTROLLER)));\n  };\n\n  TuiTreeItemContentComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiTreeItemContentComponent,\n    selectors: [[\"tui-tree-item-content\"]],\n    hostVars: 2,\n    hostBindings: function TuiTreeItemContentComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_expandable\", ctx.isExpandable);\n      }\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"tuiIconButton\", \"\", \"size\", \"xs\", \"appearance\", \"flat\", \"icon\", \"tuiIconChevronRight\", \"shape\", \"rounded\", \"class\", \"t-button\", 3, \"t-button_expanded\", \"click\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [\"tuiIconButton\", \"\", \"size\", \"xs\", \"appearance\", \"flat\", \"icon\", \"tuiIconChevronRight\", \"shape\", \"rounded\", 1, \"t-button\", 3, \"click\"]],\n    template: function TuiTreeItemContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiTreeItemContentComponent_button_0_Template, 1, 2, \"button\", 0);\n        ɵngcc0.ɵɵtemplate(1, TuiTreeItemContentComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isExpandable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.context.template);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.TuiButtonComponent, ɵngcc1.NgTemplateOutlet],\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center}[_nghost-%COMP%]   tui-tree-item._expandable[_nghost-%COMP%]:not(._expandable), tui-tree-item._expandable   [_nghost-%COMP%]:not(._expandable){padding-left:2rem}.t-button[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;margin-right:.5rem}.t-button_expanded[_ngcontent-%COMP%]{transform:rotate(90deg)}\"],\n    changeDetection: 0\n  });\n\n  __decorate([HostBinding('class._expandable')], TuiTreeItemContentComponent.prototype, \"isExpandable\", null);\n\n  TuiTreeItemContentComponent = __decorate([__param(0, Inject(POLYMORPHEUS_CONTEXT)), __param(1, Inject(forwardRef(() => TUI_TREE_CONTROLLER)))], TuiTreeItemContentComponent);\n  return TuiTreeItemContentComponent;\n})();\nconst TUI_TREE_ITEM_CONTENT = new PolymorpheusComponent(TuiTreeItemContentComponent);\nconst TUI_DEFAULT_TREE_CONTROLLER = {\n  isExpanded: ALWAYS_TRUE_HANDLER,\n  toggle: EMPTY_FUNCTION\n};\nconst TUI_TREE_ACCESSOR = new InjectionToken('Controller for tracking value - TuiTreeItemComponent pairs');\nconst TUI_TREE_CONTROLLER = new InjectionToken('Controller for expanding the tree', {\n  factory: () => TUI_DEFAULT_TREE_CONTROLLER\n});\nconst TUI_TREE_NODE = new InjectionToken('A node of a tree view');\nconst TUI_TREE_LOADING = new InjectionToken('A tree node placeholder for loading', {\n  factory: () => ({})\n});\nconst TUI_TREE_START = new InjectionToken('A tree node starting point');\nconst TUI_TREE_LOADER = new InjectionToken('A service to load tree progressively');\nconst TUI_TREE_CONTENT = new InjectionToken('Content for a tree item', {\n  factory: () => TUI_TREE_ITEM_CONTENT\n});\nconst TUI_TREE_LEVEL = new InjectionToken('Nesting level of current TreeView node', {\n  factory: () => -1\n});\nconst TUI_TREE_ITEM_PROVIDERS = [{\n  provide: TUI_TREE_LEVEL,\n  deps: [[new SkipSelf(), TUI_TREE_LEVEL]],\n  useFactory: treeLevelFactory\n}, {\n  provide: TUI_TREE_NODE,\n  useExisting: forwardRef(() => TuiTreeItemComponent)\n}];\n\nfunction treeLevelFactory(level) {\n  return ++level;\n}\n\nlet TuiTreeItemComponent = /*#__PURE__*/(() => {\n  let TuiTreeItemComponent = class TuiTreeItemComponent {\n    constructor(elementRef, controller, level, content) {\n      this.elementRef = elementRef;\n      this.controller = controller;\n      this.level = level;\n      this.content = content;\n      this.nested = EMPTY_QUERY;\n      this.change$ = new Subject();\n      this.expanded$ = this.change$.pipe(startWith(null), map(() => this.isExpanded), distinctUntilChanged());\n      this.attached$ = this.change$.pipe(map(() => this.elementRef.nativeElement.isConnected), distinctUntilChanged());\n    }\n\n    get isExpandable() {\n      return !!this.nested.length;\n    }\n\n    get isExpanded() {\n      return this.controller.isExpanded(this);\n    }\n\n    ngDoCheck() {\n      this.change$.next();\n    }\n\n  };\n\n  TuiTreeItemComponent.ɵfac = function TuiTreeItemComponent_Factory(t) {\n    return new (t || TuiTreeItemComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => TUI_TREE_CONTROLLER)), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => TUI_TREE_LEVEL)), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => TUI_TREE_CONTENT)));\n  };\n\n  TuiTreeItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiTreeItemComponent,\n    selectors: [[\"tui-tree-item\"]],\n    contentQueries: function TuiTreeItemComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TUI_TREE_NODE, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nested = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"treeitem\"],\n    hostVars: 2,\n    hostBindings: function TuiTreeItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_expandable\", ctx.isExpandable);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature(TUI_TREE_ITEM_PROVIDERS)],\n    ngContentSelectors: _c2,\n    decls: 6,\n    vars: 9,\n    consts: [[\"template\", \"\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\"], [\"role\", \"group\", \"class\", \"t-children\", 3, \"expanded\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"group\", 1, \"t-children\", 3, \"expanded\"]],\n    template: function TuiTreeItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵtemplate(0, TuiTreeItemComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, TuiTreeItemComponent_tui_expand_3_Template, 5, 3, \"tui-expand\", 2);\n        ɵngcc0.ɵɵtemplate(4, TuiTreeItemComponent_ng_container_4_Template, 1, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵpipe(5, \"async\");\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"content\", ctx.content)(\"context\", ɵngcc0.ɵɵpureFunction2(6, _c1, ctx, _r0));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isExpandable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(5, 4, ctx.attached$));\n      }\n    },\n    directives: [ɵngcc3.PolymorpheusOutletComponent, ɵngcc1.NgIf, ɵngcc2.TuiExpandComponent],\n    pipes: [ɵngcc1.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:block}.t-children[_ngcontent-%COMP%]{position:relative;margin-left:var(--tui-tree-item-indent,1.5rem)}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ContentChildren(TUI_TREE_NODE)], TuiTreeItemComponent.prototype, \"nested\", void 0);\n\n  __decorate([HostBinding('class._expandable')], TuiTreeItemComponent.prototype, \"isExpandable\", null);\n\n  TuiTreeItemComponent = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(forwardRef(() => TUI_TREE_CONTROLLER))), __param(2, Inject(forwardRef(() => TUI_TREE_LEVEL))), __param(3, Inject(forwardRef(() => TUI_TREE_CONTENT)))], TuiTreeItemComponent);\n  return TuiTreeItemComponent;\n})();\nvar TuiTreeComponent_1;\nlet TuiTreeComponent = TuiTreeComponent_1 = class TuiTreeComponent {\n  constructor(directive) {\n    this.directive = directive;\n    this.check$ = new Subject();\n    this.children$ = this.check$.pipe(startWith(null), map(() => this.handler(this.value)), distinctUntilChanged());\n\n    this.content = ({\n      $implicit\n    }) => String($implicit);\n  }\n\n  ngDoCheck() {\n    var _a, _b;\n\n    this.check$.next();\n    (_a = this.item) === null || _a === void 0 ? void 0 : _a.ngDoCheck();\n    (_b = this.child) === null || _b === void 0 ? void 0 : _b.ngDoCheck();\n  }\n\n  get handler() {\n    var _a, _b;\n\n    return (_b = (_a = this.directive) === null || _a === void 0 ? void 0 : _a.childrenHandler) !== null && _b !== void 0 ? _b : TuiTreeChildrenDirective.defaultHandler;\n  }\n\n};\n\nTuiTreeComponent.ɵfac = function TuiTreeComponent_Factory(t) {\n  return new (t || TuiTreeComponent)(ɵngcc0.ɵɵdirectiveInject(TuiTreeChildrenDirective, 8));\n};\n\nTuiTreeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiTreeComponent,\n  selectors: [[\"tui-tree\", \"value\", \"\"]],\n  viewQuery: function TuiTreeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TuiTreeItemComponent, 5);\n      ɵngcc0.ɵɵviewQuery(TuiTreeComponent_1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.item = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.child = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"tree\"],\n  inputs: {\n    content: \"content\",\n    value: \"value\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TREE_NODE,\n    useExisting: TuiTreeComponent_1\n  }])],\n  attrs: _c3,\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"tuiTreeNode\", 4, \"tuiLet\"], [3, \"tuiTreeNode\"], [\"view\", \"\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\", 4, \"ngIf\"], [3, \"value\", \"content\", 4, \"ngFor\", \"ngForOf\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\"], [3, \"value\", \"content\"]],\n  template: function TuiTreeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TuiTreeComponent_tui_tree_item_0_Template, 4, 3, \"tui-tree-item\", 0);\n      ɵngcc0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"tuiLet\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.children$));\n    }\n  },\n  directives: function () {\n    return [ɵngcc4.TuiLetDirective, TuiTreeItemComponent, TuiTreeNodeDirective, ɵngcc1.NgIf, ɵngcc3.PolymorpheusOutletComponent, ɵngcc1.NgForOf, TuiTreeComponent];\n  },\n  pipes: function () {\n    return [ɵngcc1.AsyncPipe];\n  },\n  styles: [\"[_nghost-%COMP%]{position:relative;display:block}\"],\n  changeDetection: 0\n});\n\nTuiTreeComponent.ctorParameters = () => [{\n  type: TuiTreeChildrenDirective,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [TuiTreeChildrenDirective]\n  }]\n}];\n\n__decorate([Input()], TuiTreeComponent.prototype, \"value\", void 0);\n\n__decorate([ViewChild(TuiTreeItemComponent)], TuiTreeComponent.prototype, \"item\", void 0);\n\n__decorate([ViewChild(TuiTreeComponent_1)], TuiTreeComponent.prototype, \"child\", void 0);\n\n__decorate([Input()], TuiTreeComponent.prototype, \"content\", void 0);\n\nTuiTreeComponent = TuiTreeComponent_1 = __decorate([__param(0, Optional()), __param(0, Inject(TuiTreeChildrenDirective))], TuiTreeComponent);\nvar TuiTreeControllerDirective_1;\nlet TuiTreeControllerDirective = TuiTreeControllerDirective_1 = class TuiTreeControllerDirective {\n  constructor() {\n    this.fallback = true;\n    this.map = new Map();\n    this.toggled = new EventEmitter();\n    this.items = new Map();\n  }\n\n  register(item, value) {\n    this.items.set(item, value);\n  }\n\n  unregister(item) {\n    this.items.delete(item);\n  }\n\n  isExpanded(item) {\n    var _a;\n\n    const value = this.items.get(item);\n    return (_a = value && this.map.get(value)) !== null && _a !== void 0 ? _a : this.fallback;\n  }\n\n  toggle(item) {\n    const value = this.items.get(item);\n    const expanded = this.isExpanded(item);\n\n    if (!isPresent(value)) {\n      return;\n    }\n\n    this.toggled.emit(value);\n    this.map.set(value, !expanded);\n  }\n\n};\n\nTuiTreeControllerDirective.ɵfac = function TuiTreeControllerDirective_Factory(t) {\n  return new (t || TuiTreeControllerDirective)();\n};\n\nTuiTreeControllerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTreeControllerDirective,\n  selectors: [[\"\", \"tuiTreeController\", \"\", \"map\", \"\"]],\n  inputs: {\n    fallback: [\"tuiTreeController\", \"fallback\"],\n    map: \"map\"\n  },\n  outputs: {\n    toggled: \"toggled\"\n  },\n  exportAs: [\"tuiTreeController\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TREE_ACCESSOR,\n    useExisting: TuiTreeControllerDirective_1\n  }, {\n    provide: TUI_TREE_CONTROLLER,\n    useExisting: TuiTreeControllerDirective_1\n  }])]\n});\n\n__decorate([Input('tuiTreeController'), tuiDefaultProp()], TuiTreeControllerDirective.prototype, \"fallback\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiTreeControllerDirective.prototype, \"map\", void 0);\n\n__decorate([Output()], TuiTreeControllerDirective.prototype, \"toggled\", void 0);\n\nvar TuiTreeItemControllerDirective_1;\nlet TuiTreeItemControllerDirective = TuiTreeItemControllerDirective_1 = class TuiTreeItemControllerDirective {\n  constructor() {\n    this.map = new WeakMap();\n    this.fallback = true;\n  }\n\n  isExpanded(item) {\n    var _a;\n\n    return (_a = this.map.get(item)) !== null && _a !== void 0 ? _a : this.fallback;\n  }\n\n  toggle(item) {\n    this.map.set(item, !this.isExpanded(item));\n  }\n\n};\n\nTuiTreeItemControllerDirective.ɵfac = function TuiTreeItemControllerDirective_Factory(t) {\n  return new (t || TuiTreeItemControllerDirective)();\n};\n\nTuiTreeItemControllerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTreeItemControllerDirective,\n  selectors: [[\"\", \"tuiTreeController\", \"\", 3, \"map\", \"\"]],\n  inputs: {\n    fallback: [\"tuiTreeController\", \"fallback\"]\n  },\n  exportAs: [\"tuiTreeController\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TREE_CONTROLLER,\n    useExisting: TuiTreeItemControllerDirective_1\n  }])]\n});\n\n__decorate([Input('tuiTreeController'), tuiDefaultProp()], TuiTreeItemControllerDirective.prototype, \"fallback\", void 0);\n\nlet TuiTreeNodeDirective = /*#__PURE__*/(() => {\n  let TuiTreeNodeDirective = class TuiTreeNodeDirective {\n    constructor(directive, component) {\n      this.directive = directive;\n      this.component = component;\n    }\n\n    set value(value) {\n      var _a;\n\n      (_a = this.directive) === null || _a === void 0 ? void 0 : _a.register(this.component, value);\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.directive) === null || _a === void 0 ? void 0 : _a.unregister(this.component);\n    }\n\n  };\n\n  TuiTreeNodeDirective.ɵfac = function TuiTreeNodeDirective_Factory(t) {\n    return new (t || TuiTreeNodeDirective)(ɵngcc0.ɵɵdirectiveInject(TUI_TREE_ACCESSOR, 8), ɵngcc0.ɵɵdirectiveInject(TuiTreeItemComponent));\n  };\n\n  TuiTreeNodeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiTreeNodeDirective,\n    selectors: [[\"tui-tree-item\", \"tuiTreeNode\", \"\"]],\n    inputs: {\n      value: [\"tuiTreeNode\", \"value\"]\n    }\n  });\n\n  __decorate([Input('tuiTreeNode')], TuiTreeNodeDirective.prototype, \"value\", null);\n\n  TuiTreeNodeDirective = __decorate([__param(0, Optional()), __param(0, Inject(TUI_TREE_ACCESSOR)), __param(1, Inject(TuiTreeItemComponent))], TuiTreeNodeDirective); // @dynamic\n\n  return TuiTreeNodeDirective;\n})();\nlet TuiTreeService = /*#__PURE__*/(() => {\n  let TuiTreeService = class TuiTreeService {\n    constructor(loading, start, loader) {\n      this.loading = loading;\n      this.start = start;\n      this.loader = loader;\n      this.map = new Map([[this.loading, []]]);\n      this.load$ = new Subject();\n      this.data$ = this.load$.pipe(switchMap(item => this.loader.loadChildren(item).pipe(tap(children => this.map.set(item, children)), map(children => children.filter(item => !this.loader.hasChildren(item))), tap(children => children.forEach(child => this.map.set(child, []))))), startWith(null), mapTo(this.start));\n    }\n\n    getChildren(item) {\n      var _a;\n\n      return (_a = this.map.get(item)) !== null && _a !== void 0 ? _a : [this.loading];\n    }\n\n    loadChildren(item) {\n      if (this.map.get(item)) {\n        return;\n      }\n\n      this.map.set(item, [this.loading]);\n      this.load$.next(item);\n    }\n\n  };\n\n  TuiTreeService.ɵfac = function TuiTreeService_Factory(t) {\n    return new (t || TuiTreeService)(ɵngcc0.ɵɵinject(TUI_TREE_LOADING), ɵngcc0.ɵɵinject(TUI_TREE_START), ɵngcc0.ɵɵinject(TUI_TREE_LOADER));\n  };\n\n  TuiTreeService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: TuiTreeService,\n    factory: function (t) {\n      return TuiTreeService.ɵfac(t);\n    }\n  });\n  TuiTreeService = __decorate([__param(0, Inject(TUI_TREE_LOADING)), __param(1, Inject(TUI_TREE_START)), __param(2, Inject(TUI_TREE_LOADER))], TuiTreeService);\n  return TuiTreeService;\n})();\nlet TuiTreeModule = /*#__PURE__*/(() => {\n  let TuiTreeModule = class TuiTreeModule {};\n\n  TuiTreeModule.ɵfac = function TuiTreeModule_Factory(t) {\n    return new (t || TuiTreeModule)();\n  };\n\n  TuiTreeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiTreeModule\n  });\n  TuiTreeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiExpandModule, TuiLetModule, TuiButtonModule]]\n  });\n  return TuiTreeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiTreeModule, {\n    declarations: function () {\n      return [TuiTreeComponent, TuiTreeItemComponent, TuiTreeItemContentComponent, TuiTreeChildrenDirective, TuiTreeItemControllerDirective, TuiTreeControllerDirective, TuiTreeNodeDirective];\n    },\n    imports: function () {\n      return [CommonModule, PolymorpheusModule, TuiExpandModule, TuiLetModule, TuiButtonModule];\n    },\n    exports: function () {\n      return [TuiTreeComponent, TuiTreeItemComponent, TuiTreeChildrenDirective, TuiTreeItemControllerDirective, TuiTreeControllerDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TUI_DEFAULT_TREE_CONTROLLER, TUI_TREE_ACCESSOR, TUI_TREE_CONTENT, TUI_TREE_CONTROLLER, TUI_TREE_ITEM_CONTENT, TUI_TREE_ITEM_PROVIDERS, TUI_TREE_LEVEL, TUI_TREE_LOADER, TUI_TREE_LOADING, TUI_TREE_NODE, TUI_TREE_START, TuiTreeChildrenDirective, TuiTreeComponent, TuiTreeControllerDirective, TuiTreeItemComponent, TuiTreeItemContentComponent, TuiTreeItemControllerDirective, TuiTreeModule, TuiTreeNodeDirective, TuiTreeService, treeLevelFactory }; //# sourceMappingURL=taiga-ui-kit-components-tree.js.map","map":null,"metadata":{},"sourceType":"module"}