{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { InjectionToken, Inject, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { HISTORY } from '@ng-web-apis/common';\nimport { TUI_PARENT_ANIMATION } from '@taiga-ui/cdk/constants';\nimport { TUI_DIALOGS } from '@taiga-ui/cdk/tokens';\nimport { of, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { TuiLetModule } from '@taiga-ui/cdk/directives';\nimport { TuiFocusTrapModule } from '@taiga-ui/cdk/directives/focus-trap';\nimport { TuiOverscrollModule } from '@taiga-ui/cdk/directives/overscroll';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc3 from '@taiga-ui/cdk/directives/focus-trap';\nimport * as ɵngcc4 from '@taiga-ui/cdk/directives/overscroll';\nimport * as ɵngcc5 from '@taiga-ui/cdk/directives';\nimport * as ɵngcc6 from 'rxjs';\nimport * as ɵngcc7 from '@angular/platform-browser';\n\nfunction TuiDialogHostComponent_ng_container_0_section_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"section\", 3);\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"@tuiParentAnimation\", undefined)(\"content\", item_r4.component)(\"context\", item_r4);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", item_r4.id);\n  }\n}\n\nfunction TuiDialogHostComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"popstate\", function TuiDialogHostComponent_ng_container_0_div_2_Template_div_popstate_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8);\n      const isDialogClosesOnBack_r5 = restoredCtx.tuiLet;\n      const dialogs_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.closeLast(dialogs_r1, isDialogClosesOnBack_r5);\n    }, false, ɵngcc0.ɵɵresolveWindow)(\"transitionend\", function TuiDialogHostComponent_ng_container_0_div_2_Template_div_transitionend_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8);\n      const isDialogClosesOnBack_r5 = restoredCtx.tuiLet;\n      const dialogs_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onDialog($event, !!dialogs_r1.length, isDialogClosesOnBack_r5);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dialogs_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵclassProp(\"overlay_visible\", dialogs_r1.length);\n  }\n}\n\nfunction TuiDialogHostComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TuiDialogHostComponent_ng_container_0_section_1_Template, 1, 4, \"section\", 1);\n    ɵngcc0.ɵɵtemplate(2, TuiDialogHostComponent_ng_container_0_div_2_Template, 1, 2, \"div\", 2);\n    ɵngcc0.ɵɵpipe(3, \"async\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const dialogs_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", dialogs_r1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tuiLet\", ɵngcc0.ɵɵpipeBind1(3, 2, ctx_r0.isDialogClosesOnBack$));\n  }\n}\n\nconst TUI_DIALOG_CLOSES_ON_BACK = new InjectionToken('Is closing dialog on browser backward navigation enabled', {\n  factory: () => of(false)\n}); // TODO: remove in ivy compilation\n\nconst FAKE_HISTORY_STATE = {\n  label: 'ignoreMe'\n}; // TODO: remove in ivy compilation\n\nconst isFakeHistoryState = historyState => (historyState === null || historyState === void 0 ? void 0 : historyState.label) === FAKE_HISTORY_STATE.label; // @dynamic\n\n\nlet TuiDialogHostComponent = /*#__PURE__*/(() => {\n  let TuiDialogHostComponent = class TuiDialogHostComponent {\n    constructor(isDialogClosesOnBack$, dialogsByType, historyRef, titleService) {\n      this.isDialogClosesOnBack$ = isDialogClosesOnBack$;\n      this.dialogsByType = dialogsByType;\n      this.historyRef = historyRef;\n      this.titleService = titleService;\n      this.dialogs$ = combineLatest(this.dialogsByType).pipe(map(allTypesDialogs => new Array().concat(...allTypesDialogs).sort((a, b) => a.createdAt - b.createdAt)));\n    }\n\n    closeLast(dialogs, isDialogClosesOnBack) {\n      if (!isDialogClosesOnBack) {\n        return;\n      }\n\n      const [last] = dialogs.slice(-1);\n\n      if (!last) {\n        return;\n      }\n\n      if (dialogs.length > 1) {\n        this.historyRef.pushState(FAKE_HISTORY_STATE, this.titleService.getTitle());\n      }\n\n      last.$implicit.complete();\n    }\n\n    onDialog({\n      propertyName\n    }, popupOpened, isDialogClosesOnBack) {\n      if (!isDialogClosesOnBack || propertyName !== 'letter-spacing') {\n        return;\n      }\n\n      if (popupOpened) {\n        this.historyRef.pushState(FAKE_HISTORY_STATE, this.titleService.getTitle());\n      } else if (isFakeHistoryState(this.historyRef.state)) {\n        this.historyRef.back();\n      }\n    }\n\n  };\n\n  TuiDialogHostComponent.ɵfac = function TuiDialogHostComponent_Factory(t) {\n    return new (t || TuiDialogHostComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_DIALOG_CLOSES_ON_BACK), ɵngcc0.ɵɵdirectiveInject(TUI_DIALOGS), ɵngcc0.ɵɵdirectiveInject(HISTORY), ɵngcc0.ɵɵdirectiveInject(Title));\n  };\n\n  TuiDialogHostComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiDialogHostComponent,\n    selectors: [[\"tui-dialog-host\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [\"polymorpheus-outlet\", \"\", \"tuiFocusTrap\", \"\", \"tuiScrollRef\", \"\", \"tuiOverscroll\", \"all\", \"role\", \"dialog\", \"aria-modal\", \"true\", \"class\", \"dialog\", 3, \"content\", \"context\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"overlay\", 3, \"overlay_visible\", \"popstate\", \"transitionend\", 4, \"tuiLet\"], [\"polymorpheus-outlet\", \"\", \"tuiFocusTrap\", \"\", \"tuiScrollRef\", \"\", \"tuiOverscroll\", \"all\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"dialog\", 3, \"content\", \"context\"], [1, \"overlay\", 3, \"popstate\", \"transitionend\"]],\n    template: function TuiDialogHostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiDialogHostComponent_ng_container_0_Template, 4, 4, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.dialogs$));\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.PolymorpheusOutletComponent, ɵngcc3.TuiFocusTrapDirective, ɵngcc4.TuiOverscrollDirective, ɵngcc5.TuiLetDirective],\n    pipes: [ɵngcc1.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:fixed;left:0;bottom:0;width:100%;height:0}.dialog[_ngcontent-%COMP%], .overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;bottom:0;display:flex;align-items:flex-start;outline:0;overflow:auto;overflow:overlay}.dialog[_ngcontent-%COMP%]{bottom:auto;height:100%}.overlay[_ngcontent-%COMP%]{height:100vh;pointer-events:none;touch-action:none;opacity:0;letter-spacing:normal;transition:opacity var(--tui-duration),letter-spacing 10ms;background:rgba(0,0,0,.75)}.overlay_visible[_ngcontent-%COMP%]{opacity:1;letter-spacing:1px}.dialog[_ngcontent-%COMP%]:last-of-type{z-index:1}\"],\n    data: {\n      animation: [TUI_PARENT_ANIMATION]\n    },\n    changeDetection: 0\n  });\n  TuiDialogHostComponent = __decorate([__param(0, Inject(TUI_DIALOG_CLOSES_ON_BACK)), __param(1, Inject(TUI_DIALOGS)), __param(2, Inject(HISTORY)), __param(3, Inject(Title))], TuiDialogHostComponent);\n  return TuiDialogHostComponent;\n})();\nlet TuiDialogHostModule = /*#__PURE__*/(() => {\n  let TuiDialogHostModule = class TuiDialogHostModule {};\n\n  TuiDialogHostModule.ɵfac = function TuiDialogHostModule_Factory(t) {\n    return new (t || TuiDialogHostModule)();\n  };\n\n  TuiDialogHostModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiDialogHostModule\n  });\n  TuiDialogHostModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiOverscrollModule, TuiFocusTrapModule, TuiLetModule]]\n  });\n  return TuiDialogHostModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiDialogHostModule, {\n    declarations: function () {\n      return [TuiDialogHostComponent];\n    },\n    imports: function () {\n      return [CommonModule, PolymorpheusModule, TuiOverscrollModule, TuiFocusTrapModule, TuiLetModule];\n    },\n    exports: function () {\n      return [TuiDialogHostComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FAKE_HISTORY_STATE, TUI_DIALOG_CLOSES_ON_BACK, TuiDialogHostComponent, TuiDialogHostModule, isFakeHistoryState }; //# sourceMappingURL=taiga-ui-cdk-components-dialog-host.js.map","map":null,"metadata":{},"sourceType":"module"}