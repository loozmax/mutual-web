{"ast":null,"code":"import { InjectionToken, Inject, Input, HostBinding, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { __decorate, __param } from 'tslib';\nimport { tuiDefaultProp } from '@taiga-ui/cdk';\nimport { TuiSvgModule } from '@taiga-ui/core/components/svg';\nimport { TuiWrapperModule } from '@taiga-ui/core/directives/wrapper';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n/** Default values for the checkbox options. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core/directives/wrapper';\nimport * as ɵngcc2 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc3 from '@taiga-ui/core/components/svg';\n\nfunction TuiPrimitiveCheckboxComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-svg\", 2);\n  }\n\n  if (rf & 2) {\n    const icon_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mark_on\", !ctx_r0.empty);\n    ɵngcc0.ɵɵproperty(\"src\", icon_r1);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst _c1 = [\"*\"];\nconst TUI_CHECKBOX_DEFAULT_OPTIONS = {\n  size: 'm',\n  appearances: {\n    unchecked: \"outline\"\n    /* Outline */\n    ,\n    checked: \"primary\"\n    /* Primary */\n    ,\n    indeterminate: \"primary\"\n    /* Primary */\n\n  },\n  icons: {\n    checked({\n      $implicit\n    }) {\n      return $implicit === 'm' ? 'tuiIconCheck' : 'tuiIconCheckLarge';\n    },\n\n    indeterminate({\n      $implicit\n    }) {\n      return $implicit === 'm' ? 'tuiIconMinus' : 'tuiIconMinusLarge';\n    }\n\n  }\n};\nconst TUI_CHECKBOX_OPTIONS = new InjectionToken('Default parameters for checkbox component', {\n  factory: () => TUI_CHECKBOX_DEFAULT_OPTIONS\n});\n\nconst tuiCheckboxOptionsProvider = options => ({\n  provide: TUI_CHECKBOX_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_CHECKBOX_DEFAULT_OPTIONS), options)\n}); // @dynamic\n\n\nlet TuiPrimitiveCheckboxComponent = /*#__PURE__*/(() => {\n  let TuiPrimitiveCheckboxComponent = class TuiPrimitiveCheckboxComponent {\n    constructor(options) {\n      this.options = options;\n      this.size = this.options.size;\n      this.disabled = false;\n      this.focused = false;\n      this.hovered = false;\n      this.pressed = false;\n      this.invalid = false;\n      this.icon = this.options.icons.checked;\n      this.value = false;\n    }\n\n    set valueSetter(value) {\n      if (value !== false) {\n        this.setCurrentIcon(value);\n      }\n\n      this.value = value;\n    }\n\n    get appearance() {\n      switch (this.value) {\n        case false:\n          return this.options.appearances.unchecked;\n\n        case true:\n          return this.options.appearances.checked;\n\n        default:\n          return this.options.appearances.indeterminate;\n      }\n    }\n\n    get empty() {\n      return this.value === false;\n    }\n\n    setCurrentIcon(value) {\n      this.icon = value === null ? this.options.icons.indeterminate : this.options.icons.checked;\n    }\n\n  };\n\n  TuiPrimitiveCheckboxComponent.ɵfac = function TuiPrimitiveCheckboxComponent_Factory(t) {\n    return new (t || TuiPrimitiveCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_CHECKBOX_OPTIONS));\n  };\n\n  TuiPrimitiveCheckboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiPrimitiveCheckboxComponent,\n    selectors: [[\"tui-primitive-checkbox\"]],\n    hostVars: 1,\n    hostBindings: function TuiPrimitiveCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      disabled: \"disabled\",\n      focused: \"focused\",\n      hovered: \"hovered\",\n      pressed: \"pressed\",\n      invalid: \"invalid\",\n      valueSetter: [\"value\", \"valueSetter\"]\n    },\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 10,\n    consts: [[3, \"appearance\", \"disabled\", \"focused\", \"hovered\", \"pressed\", \"invalid\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\"], [1, \"mark\", 3, \"src\"]],\n    template: function TuiPrimitiveCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"tui-wrapper\", 0)(1, \"span\", 1);\n        ɵngcc0.ɵɵtemplate(2, TuiPrimitiveCheckboxComponent_ng_template_2_Template, 1, 3, \"ng-template\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"appearance\", ctx.appearance)(\"disabled\", ctx.disabled)(\"focused\", ctx.focused)(\"hovered\", ctx.hovered)(\"pressed\", ctx.pressed)(\"invalid\", ctx.invalid);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"content\", ctx.icon)(\"context\", ɵngcc0.ɵɵpureFunction1(8, _c0, ctx.size));\n      }\n    },\n    directives: [ɵngcc1.TuiWrapperDirective, ɵngcc2.PolymorpheusOutletComponent, ɵngcc3.TuiSvgComponent],\n    styles: [\"[_nghost-%COMP%]{display:block;font-size:0;flex-shrink:0}[data-size='m'][_nghost-%COMP%]{width:1rem;height:1rem;border-radius:var(--tui-radius-xs)}[data-size='l'][_nghost-%COMP%]{width:1.5rem;height:1.5rem;border-radius:var(--tui-radius-s)}.mark[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:block;width:100%;height:100%;transform:scale(0)}.mark_on[_ngcontent-%COMP%]{transform:scale(1)}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input(), HostBinding('attr.data-size'), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"size\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"focused\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"hovered\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"pressed\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"invalid\", void 0);\n\n  __decorate([Input('value'), tuiDefaultProp()], TuiPrimitiveCheckboxComponent.prototype, \"valueSetter\", null);\n\n  TuiPrimitiveCheckboxComponent = __decorate([__param(0, Inject(TUI_CHECKBOX_OPTIONS))], TuiPrimitiveCheckboxComponent);\n  return TuiPrimitiveCheckboxComponent;\n})();\nlet TuiPrimitiveCheckboxModule = /*#__PURE__*/(() => {\n  let TuiPrimitiveCheckboxModule = class TuiPrimitiveCheckboxModule {};\n\n  TuiPrimitiveCheckboxModule.ɵfac = function TuiPrimitiveCheckboxModule_Factory(t) {\n    return new (t || TuiPrimitiveCheckboxModule)();\n  };\n\n  TuiPrimitiveCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiPrimitiveCheckboxModule\n  });\n  TuiPrimitiveCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[TuiSvgModule, TuiWrapperModule, PolymorpheusModule]]\n  });\n  return TuiPrimitiveCheckboxModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiPrimitiveCheckboxModule, {\n    declarations: function () {\n      return [TuiPrimitiveCheckboxComponent];\n    },\n    imports: function () {\n      return [TuiSvgModule, TuiWrapperModule, PolymorpheusModule];\n    },\n    exports: function () {\n      return [TuiPrimitiveCheckboxComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TUI_CHECKBOX_DEFAULT_OPTIONS, TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxComponent, TuiPrimitiveCheckboxModule, tuiCheckboxOptionsProvider }; //# sourceMappingURL=taiga-ui-core-components-primitive-checkbox.js.map","map":null,"metadata":{},"sourceType":"module"}