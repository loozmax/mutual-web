{"ast":null,"code":"import { round } from '@taiga-ui/cdk';\nconst BYTES_PER_KB = 1000;\nconst BYTES_PER_MB = 1000 * BYTES_PER_KB;\n\nfunction formatSize(units, size) {\n  if (size === undefined) {\n    return null;\n  }\n\n  if (size < BYTES_PER_KB) {\n    return `${size} ${units[0]}`;\n  }\n\n  if (size < BYTES_PER_MB) {\n    return `${(size / BYTES_PER_KB).toFixed()} ${units[1]}`;\n  }\n\n  return `${round(size / BYTES_PER_MB, 2).toLocaleString('ru-RU')} ${units[2]}`;\n}\n\nfunction getAcceptArray(accept) {\n  return accept.toLowerCase().split(',').map(format => format.trim());\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { formatSize, getAcceptArray }; //# sourceMappingURL=taiga-ui-kit-utils-files.js.map","map":null,"metadata":{},"sourceType":"module"}