{"ast":null,"code":"import { DEFAULT_ICONS_PATH, tuiEditingKeys } from '@taiga-ui/core/constants';\n/** @deprecated */\n\nfunction colorFallback(color) {\n  switch (color) {\n    case 'secondary':\n      return 'var(--tui-info-fill)';\n\n    case 'error':\n      return 'var(--tui-error-fill)';\n\n    case 'success':\n      return 'var(--tui-success-fill)';\n\n    default:\n      return `var(--tui-${color || 'base-05'})`;\n  }\n}\n\nconst ITEM_SIZE = 1.5;\nconst CONTENT_SIZE = 2.5;\n\nfunction getBorder(hasIcon, hasCleaner = false, hasTooltip = false, hasContent = false) {\n  let border = 0;\n\n  if (hasIcon) {\n    border += ITEM_SIZE;\n  }\n\n  if (hasCleaner) {\n    border += ITEM_SIZE;\n  }\n\n  if (hasTooltip) {\n    border += ITEM_SIZE;\n  }\n\n  if (hasContent) {\n    border += CONTENT_SIZE;\n  }\n\n  return border;\n}\n\nfunction iconsPathFactory(staticPath) {\n  const base = staticPath[staticPath.length - 1] === '/' ? staticPath : `${staticPath}/`;\n  return name => {\n    if (name.startsWith('tuiIcon')) {\n      return `${base}${name}.svg#${name}`;\n    }\n\n    return DEFAULT_ICONS_PATH(name);\n  };\n}\n/**\n * Check if pressed key is interactive in terms of input field\n */\n\n\nfunction isEditingKey(key) {\n  return key.length === 1 || tuiEditingKeys.includes(key);\n}\n\nfunction isPresumedHTMLString(candidate) {\n  const trimmed = candidate.trim();\n  return trimmed.startsWith('<') && trimmed.endsWith('>');\n}\n\nconst SIZES = ['xs', 's', 'm', 'l', 'xl', 'xxl'];\n/**\n * Compares size constants to determine if first size is bigger than the second\n *\n * @param size size that we need to compare\n * @param biggerThanSize size to compare with, 's' by default\n */\n\nfunction sizeBigger(size, biggerThanSize = 's') {\n  return SIZES.indexOf(size) > SIZES.indexOf(biggerThanSize);\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { colorFallback, getBorder, iconsPathFactory, isEditingKey, isPresumedHTMLString, sizeBigger }; //# sourceMappingURL=taiga-ui-core-utils-miscellaneous.js.map","map":null,"metadata":{},"sourceType":"module"}