{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { InjectionToken, Input, Directive, forwardRef, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { TuiController, watch, TuiDestroyService } from '@taiga-ui/cdk';\nimport { merge, NEVER } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\n\nclass TuiTextfieldController {\n  constructor(change$, autocompleteDirective, cleanerDirective, customContentDirective, exampleTextDirective, inputModeDirective, labelOutsideDirective, maxLengthDirective, sizeDirective, typeDirective) {\n    this.change$ = change$;\n    this.autocompleteDirective = autocompleteDirective;\n    this.cleanerDirective = cleanerDirective;\n    this.customContentDirective = customContentDirective;\n    this.exampleTextDirective = exampleTextDirective;\n    this.inputModeDirective = inputModeDirective;\n    this.labelOutsideDirective = labelOutsideDirective;\n    this.maxLengthDirective = maxLengthDirective;\n    this.sizeDirective = sizeDirective;\n    this.typeDirective = typeDirective;\n  }\n\n  get autocomplete() {\n    return this.autocompleteDirective.autocomplete;\n  }\n\n  get cleaner() {\n    return this.cleanerDirective.cleaner;\n  }\n\n  get customContent() {\n    return this.customContentDirective.customContent || '';\n  }\n\n  get exampleText() {\n    return this.exampleTextDirective.exampleText;\n  }\n\n  get inputMode() {\n    return this.inputModeDirective.inputMode;\n  }\n\n  get labelOutside() {\n    return this.labelOutsideDirective.labelOutside;\n  }\n\n  get maxLength() {\n    return this.maxLengthDirective.maxLength;\n  }\n\n  get size() {\n    return this.sizeDirective.size;\n  }\n\n  get type() {\n    return this.typeDirective.type;\n  }\n\n}\n\nvar TuiTextfieldAutocompleteDirective_1;\nconst TUI_TEXTFIELD_AUTOCOMPLETE = new InjectionToken('tuiTextfieldAutocomplete', {\n  factory: autocompleteDirectiveFactory\n});\nlet TuiTextfieldAutocompleteDirective = TuiTextfieldAutocompleteDirective_1 = class TuiTextfieldAutocompleteDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.autocomplete = '';\n  }\n\n};\n\nTuiTextfieldAutocompleteDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldAutocompleteDirective_BaseFactory;\n  return function TuiTextfieldAutocompleteDirective_Factory(t) {\n    return (ɵTuiTextfieldAutocompleteDirective_BaseFactory || (ɵTuiTextfieldAutocompleteDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldAutocompleteDirective)))(t || TuiTextfieldAutocompleteDirective);\n  };\n}();\n\nTuiTextfieldAutocompleteDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldAutocompleteDirective,\n  selectors: [[\"\", \"tuiTextfieldAutocomplete\", \"\"]],\n  inputs: {\n    autocomplete: [\"tuiTextfieldAutocomplete\", \"autocomplete\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_AUTOCOMPLETE,\n    useExisting: forwardRef(() => TuiTextfieldAutocompleteDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldAutocomplete')], TuiTextfieldAutocompleteDirective.prototype, \"autocomplete\", void 0);\n\nfunction autocompleteDirectiveFactory() {\n  return new TuiTextfieldAutocompleteDirective();\n}\n\nvar TuiTextfieldCleanerDirective_1;\nconst TUI_TEXTFIELD_CLEANER = new InjectionToken('tuiTextfieldCleaner', {\n  factory: cleanerDirectiveFactory\n});\nlet TuiTextfieldCleanerDirective = TuiTextfieldCleanerDirective_1 = class TuiTextfieldCleanerDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.cleaner = false;\n  }\n\n};\n\nTuiTextfieldCleanerDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldCleanerDirective_BaseFactory;\n  return function TuiTextfieldCleanerDirective_Factory(t) {\n    return (ɵTuiTextfieldCleanerDirective_BaseFactory || (ɵTuiTextfieldCleanerDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldCleanerDirective)))(t || TuiTextfieldCleanerDirective);\n  };\n}();\n\nTuiTextfieldCleanerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldCleanerDirective,\n  selectors: [[\"\", \"tuiTextfieldCleaner\", \"\"]],\n  inputs: {\n    cleaner: [\"tuiTextfieldCleaner\", \"cleaner\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_CLEANER,\n    useExisting: forwardRef(() => TuiTextfieldCleanerDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldCleaner')], TuiTextfieldCleanerDirective.prototype, \"cleaner\", void 0);\n\nfunction cleanerDirectiveFactory() {\n  return new TuiTextfieldCleanerDirective();\n}\n\nvar TuiTextfieldCustomContentDirective_1;\nconst TUI_TEXTFIELD_CUSTOM_CONTENT = new InjectionToken('tuiTextfieldCustomContent', {\n  factory: customContentDirectiveFactory\n});\nlet TuiTextfieldCustomContentDirective = TuiTextfieldCustomContentDirective_1 = class TuiTextfieldCustomContentDirective extends TuiController {\n  constructor() {\n    super(...arguments); // TODO: Remove null in 3.0\n\n    this.customContent = null;\n  }\n\n};\n\nTuiTextfieldCustomContentDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldCustomContentDirective_BaseFactory;\n  return function TuiTextfieldCustomContentDirective_Factory(t) {\n    return (ɵTuiTextfieldCustomContentDirective_BaseFactory || (ɵTuiTextfieldCustomContentDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldCustomContentDirective)))(t || TuiTextfieldCustomContentDirective);\n  };\n}();\n\nTuiTextfieldCustomContentDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldCustomContentDirective,\n  selectors: [[\"\", \"tuiTextfieldCustomContent\", \"\"]],\n  inputs: {\n    customContent: [\"tuiTextfieldCustomContent\", \"customContent\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_CUSTOM_CONTENT,\n    useExisting: forwardRef(() => TuiTextfieldCustomContentDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldCustomContent')], TuiTextfieldCustomContentDirective.prototype, \"customContent\", void 0);\n\nfunction customContentDirectiveFactory() {\n  return new TuiTextfieldCustomContentDirective();\n}\n\nvar TuiTextfieldExampleTextDirective_1;\nconst TUI_TEXTFIELD_EXAMPLE_TEXT = new InjectionToken('tuiTextfieldExampleText', {\n  factory: exampleTextDirectiveFactory\n});\nlet TuiTextfieldExampleTextDirective = TuiTextfieldExampleTextDirective_1 = class TuiTextfieldExampleTextDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.exampleText = '';\n  }\n\n};\n\nTuiTextfieldExampleTextDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldExampleTextDirective_BaseFactory;\n  return function TuiTextfieldExampleTextDirective_Factory(t) {\n    return (ɵTuiTextfieldExampleTextDirective_BaseFactory || (ɵTuiTextfieldExampleTextDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldExampleTextDirective)))(t || TuiTextfieldExampleTextDirective);\n  };\n}();\n\nTuiTextfieldExampleTextDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldExampleTextDirective,\n  selectors: [[\"\", \"tuiTextfieldExampleText\", \"\"]],\n  inputs: {\n    exampleText: [\"tuiTextfieldExampleText\", \"exampleText\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_EXAMPLE_TEXT,\n    useExisting: forwardRef(() => TuiTextfieldExampleTextDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldExampleText')], TuiTextfieldExampleTextDirective.prototype, \"exampleText\", void 0);\n\nfunction exampleTextDirectiveFactory() {\n  return new TuiTextfieldExampleTextDirective();\n}\n\nvar TuiTextfieldInputModeDirective_1;\nconst TUI_TEXTFIELD_INPUT_MODE = new InjectionToken('tuiTextfieldInputMode', {\n  factory: inputModeDirectiveFactory\n});\nlet TuiTextfieldInputModeDirective = TuiTextfieldInputModeDirective_1 = class TuiTextfieldInputModeDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.inputMode = 'text';\n  }\n\n};\n\nTuiTextfieldInputModeDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldInputModeDirective_BaseFactory;\n  return function TuiTextfieldInputModeDirective_Factory(t) {\n    return (ɵTuiTextfieldInputModeDirective_BaseFactory || (ɵTuiTextfieldInputModeDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldInputModeDirective)))(t || TuiTextfieldInputModeDirective);\n  };\n}();\n\nTuiTextfieldInputModeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldInputModeDirective,\n  selectors: [[\"\", \"tuiTextfieldInputMode\", \"\"]],\n  inputs: {\n    inputMode: [\"tuiTextfieldInputMode\", \"inputMode\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_INPUT_MODE,\n    useExisting: forwardRef(() => TuiTextfieldInputModeDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldInputMode')], TuiTextfieldInputModeDirective.prototype, \"inputMode\", void 0);\n\nfunction inputModeDirectiveFactory() {\n  return new TuiTextfieldInputModeDirective();\n}\n\nvar TuiTextfieldLabelOutsideDirective_1;\nconst TUI_TEXTFIELD_LABEL_OUTSIDE = new InjectionToken('tuiTextfieldLabelOutside', {\n  factory: labelOutsideDirectiveFactory\n});\nlet TuiTextfieldLabelOutsideDirective = TuiTextfieldLabelOutsideDirective_1 = class TuiTextfieldLabelOutsideDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.labelOutside = false;\n  }\n\n};\n\nTuiTextfieldLabelOutsideDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldLabelOutsideDirective_BaseFactory;\n  return function TuiTextfieldLabelOutsideDirective_Factory(t) {\n    return (ɵTuiTextfieldLabelOutsideDirective_BaseFactory || (ɵTuiTextfieldLabelOutsideDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldLabelOutsideDirective)))(t || TuiTextfieldLabelOutsideDirective);\n  };\n}();\n\nTuiTextfieldLabelOutsideDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldLabelOutsideDirective,\n  selectors: [[\"\", \"tuiTextfieldLabelOutside\", \"\"]],\n  inputs: {\n    labelOutside: [\"tuiTextfieldLabelOutside\", \"labelOutside\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_LABEL_OUTSIDE,\n    useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldLabelOutside')], TuiTextfieldLabelOutsideDirective.prototype, \"labelOutside\", void 0);\n\nfunction labelOutsideDirectiveFactory() {\n  return new TuiTextfieldLabelOutsideDirective();\n}\n\nvar TuiTextfieldMaxLengthDirective_1;\nconst TUI_TEXTFIELD_MAX_LENGTH = new InjectionToken('tuiTextfieldMaxLength', {\n  factory: maxLengthDirectiveFactory\n});\nlet TuiTextfieldMaxLengthDirective = TuiTextfieldMaxLengthDirective_1 = class TuiTextfieldMaxLengthDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.maxLength = null;\n  }\n\n};\n\nTuiTextfieldMaxLengthDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldMaxLengthDirective_BaseFactory;\n  return function TuiTextfieldMaxLengthDirective_Factory(t) {\n    return (ɵTuiTextfieldMaxLengthDirective_BaseFactory || (ɵTuiTextfieldMaxLengthDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldMaxLengthDirective)))(t || TuiTextfieldMaxLengthDirective);\n  };\n}();\n\nTuiTextfieldMaxLengthDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldMaxLengthDirective,\n  selectors: [[\"\", \"tuiTextfieldMaxLength\", \"\"]],\n  inputs: {\n    maxLength: [\"tuiTextfieldMaxLength\", \"maxLength\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_MAX_LENGTH,\n    useExisting: forwardRef(() => TuiTextfieldMaxLengthDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldMaxLength')], TuiTextfieldMaxLengthDirective.prototype, \"maxLength\", void 0);\n\nfunction maxLengthDirectiveFactory() {\n  return new TuiTextfieldMaxLengthDirective();\n}\n\nvar TuiTextfieldSizeDirective_1;\nconst TUI_TEXTFIELD_SIZE = new InjectionToken('tuiTextfieldSize', {\n  factory: sizeDirectiveFactory\n});\nlet TuiTextfieldSizeDirective = TuiTextfieldSizeDirective_1 = class TuiTextfieldSizeDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.size = 'l';\n  }\n\n};\n\nTuiTextfieldSizeDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldSizeDirective_BaseFactory;\n  return function TuiTextfieldSizeDirective_Factory(t) {\n    return (ɵTuiTextfieldSizeDirective_BaseFactory || (ɵTuiTextfieldSizeDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldSizeDirective)))(t || TuiTextfieldSizeDirective);\n  };\n}();\n\nTuiTextfieldSizeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldSizeDirective,\n  selectors: [[\"\", \"tuiTextfieldSize\", \"\"]],\n  inputs: {\n    size: [\"tuiTextfieldSize\", \"size\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_SIZE,\n    useExisting: forwardRef(() => TuiTextfieldSizeDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldSize')], TuiTextfieldSizeDirective.prototype, \"size\", void 0);\n\nfunction sizeDirectiveFactory() {\n  return new TuiTextfieldSizeDirective();\n}\n\nvar TuiTextfieldTypeDirective_1;\nconst TUI_TEXTFIELD_TYPE = new InjectionToken('tuiTextfieldType', {\n  factory: typeDirectiveFactory\n});\nlet TuiTextfieldTypeDirective = TuiTextfieldTypeDirective_1 = class TuiTextfieldTypeDirective extends TuiController {\n  constructor() {\n    super(...arguments);\n    this.type = 'text';\n  }\n\n};\n\nTuiTextfieldTypeDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiTextfieldTypeDirective_BaseFactory;\n  return function TuiTextfieldTypeDirective_Factory(t) {\n    return (ɵTuiTextfieldTypeDirective_BaseFactory || (ɵTuiTextfieldTypeDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiTextfieldTypeDirective)))(t || TuiTextfieldTypeDirective);\n  };\n}();\n\nTuiTextfieldTypeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiTextfieldTypeDirective,\n  selectors: [[\"\", \"tuiTextfieldType\", \"\"]],\n  inputs: {\n    type: [\"tuiTextfieldType\", \"type\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_TYPE,\n    useExisting: forwardRef(() => TuiTextfieldTypeDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([Input('tuiTextfieldType')], TuiTextfieldTypeDirective.prototype, \"type\", void 0);\n\nfunction typeDirectiveFactory() {\n  return new TuiTextfieldTypeDirective();\n}\n\nlet TuiTextfieldControllerModule = /*#__PURE__*/(() => {\n  let TuiTextfieldControllerModule = class TuiTextfieldControllerModule {};\n\n  TuiTextfieldControllerModule.ɵfac = function TuiTextfieldControllerModule_Factory(t) {\n    return new (t || TuiTextfieldControllerModule)();\n  };\n\n  TuiTextfieldControllerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiTextfieldControllerModule\n  });\n  TuiTextfieldControllerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiTextfieldControllerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiTextfieldControllerModule, {\n    declarations: [TuiTextfieldAutocompleteDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldExampleTextDirective, TuiTextfieldInputModeDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldMaxLengthDirective, TuiTextfieldSizeDirective, TuiTextfieldTypeDirective],\n    exports: [TuiTextfieldAutocompleteDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldExampleTextDirective, TuiTextfieldInputModeDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldMaxLengthDirective, TuiTextfieldSizeDirective, TuiTextfieldTypeDirective]\n  });\n})();\n\nconst TUI_TEXTFIELD_WATCHED_CONTROLLER = new InjectionToken('watched textfield controller');\n\nfunction textfieldWatchedControllerFactory(changeDetectorRef, destroy$, ...controllers) {\n  const change$ = merge(...controllers.map(({\n    change$\n  }) => change$ || NEVER)).pipe(watch(changeDetectorRef), takeUntil(destroy$));\n  change$.subscribe();\n  return new TuiTextfieldController(change$, ...controllers);\n}\n\nconst TEXTFIELD_CONTROLLER_PROVIDER = [TuiDestroyService, {\n  provide: TUI_TEXTFIELD_WATCHED_CONTROLLER,\n  deps: [ChangeDetectorRef, TuiDestroyService, TUI_TEXTFIELD_AUTOCOMPLETE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_EXAMPLE_TEXT, TUI_TEXTFIELD_INPUT_MODE, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_MAX_LENGTH, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_TYPE],\n  useFactory: textfieldWatchedControllerFactory\n}];\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_AUTOCOMPLETE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_EXAMPLE_TEXT, TUI_TEXTFIELD_INPUT_MODE, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_MAX_LENGTH, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_TYPE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiTextfieldAutocompleteDirective, TuiTextfieldCleanerDirective, TuiTextfieldController, TuiTextfieldControllerModule, TuiTextfieldCustomContentDirective, TuiTextfieldExampleTextDirective, TuiTextfieldInputModeDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldMaxLengthDirective, TuiTextfieldSizeDirective, TuiTextfieldTypeDirective, autocompleteDirectiveFactory, cleanerDirectiveFactory, customContentDirectiveFactory, exampleTextDirectiveFactory, inputModeDirectiveFactory, labelOutsideDirectiveFactory, maxLengthDirectiveFactory, sizeDirectiveFactory, textfieldWatchedControllerFactory, typeDirectiveFactory }; //# sourceMappingURL=taiga-ui-core-directives-textfield-controller.js.map","map":null,"metadata":{},"sourceType":"module"}