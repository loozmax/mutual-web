{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProjectFileManagerService = /*#__PURE__*/(() => {\n  class ProjectFileManagerService {\n    constructor(_httpRequestService) {\n      this._httpRequestService = _httpRequestService;\n    }\n    /**\n     * метод для загрузки файла\n     * если проект (работа студента) еще не была загружена то сначала вызываем этот метод\n     * а затем создаем проект\n     * @param fileToUpload файл\n     * @returns наименования файла на бэке\n     */\n\n\n    uploadStudentWork(fileToUpload) {\n      const formData = new FormData();\n      formData.append('files', fileToUpload, fileToUpload.name);\n      return this._httpRequestService.post('/api/attachments/upload', formData);\n    }\n\n    createProject(taskId, file) {\n      return this._httpRequestService.post(`/api/task/${taskId}/project`, {\n        title: 'Работа студента',\n        description: 'Работа студента',\n        attachments: file\n      });\n    }\n\n    getSelfProjectByTaskId(taskId) {\n      return this._httpRequestService.get(`/api/task/${taskId}/project/self`).pipe(map(attachment => Array.isArray(attachment) ? attachment : [attachment]));\n    }\n\n    openFile(filename) {\n      return this._httpRequestService.get('/api/attachments/open', {\n        params: {\n          filename\n        },\n        responseType: 'blob'\n      });\n    }\n\n  }\n\n  ProjectFileManagerService.ɵfac = function ProjectFileManagerService_Factory(t) {\n    return new (t || ProjectFileManagerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProjectFileManagerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectFileManagerService,\n    factory: ProjectFileManagerService.ɵfac\n  });\n  return ProjectFileManagerService;\n})();","map":null,"metadata":{},"sourceType":"module"}