{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ElementRef, Inject, Output, HostListener, Directive, NgModule } from '@angular/core';\nimport { USER_AGENT } from '@ng-web-apis/common';\nimport { isFirefox, isCurrentTarget, TuiDirectiveStylesService } from '@taiga-ui/cdk';\nimport { Subject } from 'rxjs';\nimport { startWith, distinctUntilChanged, skip } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/cdk';\nconst STYLE = `\n@keyframes tuiPresent {\n    from {\n        content: '1';\n    }\n\n    to {\n        content: '2';\n    }\n}\n\n.tui-present {\n    animation: tuiPresent 1000s infinite;\n}`;\nlet TuiPresentDirective = /*#__PURE__*/(() => {\n  let TuiPresentDirective = class TuiPresentDirective {\n    constructor({\n      nativeElement\n    }, directiveStyles, userAgent) {\n      this.visibility$ = new Subject();\n      directiveStyles.addStyle(STYLE, 'TuiPresentDirective');\n      this.tuiPresentChange = this.visibility$.pipe(startWith(false), distinctUntilChanged(), skip(1));\n\n      if (isFirefox(userAgent)) {\n        return;\n      }\n\n      this.observer = new MutationObserver(() => {\n        if (!nativeElement.offsetParent && nativeElement.offsetWidth === 0 && nativeElement.offsetHeight === 0) {\n          this.visibility$.next(false);\n        }\n      });\n      this.observer.observe(nativeElement, {\n        attributes: true,\n        attributeFilter: ['style', 'class']\n      });\n    }\n    /**\n     * Someday animationcancel would work and mutation observer would not be needed:\n     * https://drafts.csswg.org/css-animations/#eventdef-animationevent-animationcancel\n     * It would also trigger on CSS like display: none on parent nodes which is awesome\n     * but currently only works in Firefox\n     */\n\n\n    onAnimation(event, visibility) {\n      if (isCurrentTarget(event)) {\n        this.visibility$.next(visibility);\n      }\n    }\n\n    ngOnDestroy() {\n      this.visibility$.next(false);\n    }\n\n  };\n\n  TuiPresentDirective.ɵfac = function TuiPresentDirective_Factory(t) {\n    return new (t || TuiPresentDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TuiDirectiveStylesService), ɵngcc0.ɵɵdirectiveInject(USER_AGENT));\n  };\n\n  TuiPresentDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiPresentDirective,\n    selectors: [[\"\", \"tuiPresentChange\", \"\"]],\n    hostAttrs: [1, \"tui-present\"],\n    hostBindings: function TuiPresentDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"animationcancel\", function TuiPresentDirective_animationcancel_HostBindingHandler($event) {\n          return ctx.onAnimation($event, false);\n        })(\"animationstart\", function TuiPresentDirective_animationstart_HostBindingHandler($event) {\n          return ctx.onAnimation($event, true);\n        });\n      }\n    },\n    outputs: {\n      tuiPresentChange: \"tuiPresentChange\"\n    }\n  });\n\n  __decorate([Output()], TuiPresentDirective.prototype, \"tuiPresentChange\", void 0);\n\n  __decorate([HostListener('animationcancel', ['$event', 'false']), HostListener('animationstart', ['$event', 'true'])], TuiPresentDirective.prototype, \"onAnimation\", null);\n\n  TuiPresentDirective = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(TuiDirectiveStylesService)), __param(2, Inject(USER_AGENT))], TuiPresentDirective);\n  return TuiPresentDirective;\n})();\nlet TuiPresentModule = /*#__PURE__*/(() => {\n  let TuiPresentModule = class TuiPresentModule {};\n\n  TuiPresentModule.ɵfac = function TuiPresentModule_Factory(t) {\n    return new (t || TuiPresentModule)();\n  };\n\n  TuiPresentModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiPresentModule\n  });\n  TuiPresentModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiPresentModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiPresentModule, {\n    declarations: [TuiPresentDirective],\n    exports: [TuiPresentDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiPresentDirective, TuiPresentModule }; //# sourceMappingURL=taiga-ui-kit-directives-present.js.map","map":null,"metadata":{},"sourceType":"module"}