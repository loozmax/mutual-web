{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Directive, EventEmitter, ElementRef, Inject, ContentChild, ViewChild, Input, Output, HostBinding, HostListener, Component, ChangeDetectionStrategy, forwardRef, NgModule } from '@angular/core';\nimport { isNativeKeyboardFocusable, getClosestFocusable, isNativeFocusedIn, isElementEditable, setNativeFocused, tuiDefaultProp, TUI_FOCUSABLE_ITEM_ACCESSOR, TuiObscuredModule, TuiActiveZoneModule } from '@taiga-ui/cdk';\nimport { TuiDropdownDirective, TuiDropdownModule } from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownControllerDirective, TUI_DROPDOWN_WATCHED_CONTROLLER, DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/core/directives/dropdown-controller';\nimport { isEditingKey } from '@taiga-ui/core/utils/miscellaneous';\nimport { CommonModule } from '@angular/common';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core/directives/dropdown';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nimport * as ɵngcc3 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc4 from '@taiga-ui/core/directives/dropdown-controller';\nconst _c0 = [\"wrapper\"];\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction TuiHostedDropdownComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"keydown.esc\", function TuiHostedDropdownComponent_ng_template_3_Template_div_keydown_esc_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onKeyDownEsc($event);\n    })(\"keydown\", function TuiHostedDropdownComponent_ng_template_3_Template_div_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onKeydown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(2, \"div\");\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r2.content)(\"context\", ɵngcc0.ɵɵpureFunction1(2, _c1, _r0));\n  }\n}\n\nconst _c2 = [\"*\"];\nlet TuiHostedDropdownConnectorDirective = /*#__PURE__*/(() => {\n  let TuiHostedDropdownConnectorDirective = class TuiHostedDropdownConnectorDirective {};\n\n  TuiHostedDropdownConnectorDirective.ɵfac = function TuiHostedDropdownConnectorDirective_Factory(t) {\n    return new (t || TuiHostedDropdownConnectorDirective)();\n  };\n\n  TuiHostedDropdownConnectorDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiHostedDropdownConnectorDirective,\n    selectors: [[\"\", \"tuiHostedDropdownHost\", \"\"]]\n  });\n  return TuiHostedDropdownConnectorDirective;\n})();\nvar TuiHostedDropdownComponent_1;\nlet TuiHostedDropdownComponent = TuiHostedDropdownComponent_1 = class TuiHostedDropdownComponent {\n  constructor(elementRef, controller) {\n    this.elementRef = elementRef;\n    this.controller = controller;\n    this.content = '';\n    this.canOpen = true;\n    this.open = false;\n    this.openChange = new EventEmitter();\n    this.focusedChange = new EventEmitter();\n  }\n\n  get host() {\n    return this.dropdownHost ? this.dropdownHost.nativeElement : this.elementRef.nativeElement;\n  }\n\n  get dropdown() {\n    return !this.dropdownDirective || this.dropdownDirective.dropdownBoxRef === null ? null : this.dropdownDirective.dropdownBoxRef.location.nativeElement;\n  }\n\n  get nativeFocusableElement() {\n    return isNativeKeyboardFocusable(this.host) ? this.host : getClosestFocusable(this.host, false, this.elementRef.nativeElement);\n  }\n\n  get focused() {\n    return isNativeFocusedIn(this.host) || this.open && !!this.wrapper && isNativeFocusedIn(this.wrapper.nativeElement);\n  }\n\n  onFocusIn(target) {\n    const host = this.dropdownHost ? this.dropdownHost.nativeElement : this.nativeFocusableElement || this.elementRef.nativeElement;\n\n    if (!host.contains(target)) {\n      this.updateOpen(false);\n    }\n  }\n\n  onClick(target) {\n    const host = this.nativeFocusableElement || this.host;\n    const dropdownHost = this.dropdownHost ? this.dropdownHost.nativeElement : host;\n\n    if (!this.hostEditable && dropdownHost.contains(target)) {\n      this.updateOpen(!this.open);\n    }\n  }\n\n  onKeyDownEsc(event) {\n    if (!this.canOpen || !this.open) {\n      return;\n    }\n\n    event.stopPropagation();\n    this.closeDropdown();\n  }\n\n  onArrow(event, down) {\n    this.focusDropdown(event, down);\n  }\n\n  onKeydown({\n    key,\n    target,\n    defaultPrevented\n  }) {\n    if (!defaultPrevented && isEditingKey(key) && this.hostEditable && // TODO: iframe warning\n    target instanceof HTMLElement && !isElementEditable(target)) {\n      this.focusHost();\n    }\n  }\n\n  onActiveZone(active) {\n    this.updateFocused(active);\n\n    if (!active) {\n      this.updateOpen(false);\n    }\n  }\n\n  onHostObscured(obscured) {\n    if (obscured) {\n      this.closeDropdown();\n    }\n  }\n\n  updateOpen(open) {\n    if (open && !this.canOpen) {\n      return;\n    }\n\n    this.open = open;\n    this.openChange.emit(open);\n  }\n\n  get hostEditable() {\n    const host = this.nativeFocusableElement || this.host; // TODO: iframe warning\n\n    return host instanceof HTMLElement && isElementEditable(host);\n  }\n\n  focusDropdown(event, first) {\n    const host = this.nativeFocusableElement; // TODO: iframe warning\n\n    if (!host || !(host instanceof HTMLElement) || !(event.target instanceof Node) || !host.contains(event.target)) {\n      return;\n    }\n\n    if (!this.wrapper || !this.open || this.dropdown === null || // TODO: iframe warning\n    !(this.wrapper.nativeElement.nextElementSibling instanceof HTMLElement)) {\n      this.updateOpen(true);\n\n      if (!isElementEditable(host)) {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const initial = first ? this.wrapper.nativeElement : this.wrapper.nativeElement.nextElementSibling;\n    const focusable = getClosestFocusable(initial, !first, this.wrapper.nativeElement);\n\n    if (focusable === null) {\n      return;\n    }\n\n    setNativeFocused(focusable);\n    event.preventDefault();\n  }\n\n  closeDropdown() {\n    if (this.focused) {\n      this.focusHost();\n    }\n\n    this.updateOpen(false);\n  }\n\n  focusHost() {\n    const host = this.nativeFocusableElement;\n\n    if (host !== null) {\n      setNativeFocused(host, true, true);\n    }\n  }\n\n  updateFocused(focused) {\n    this.focusedChange.emit(focused);\n  }\n\n};\n\nTuiHostedDropdownComponent.ɵfac = function TuiHostedDropdownComponent_Factory(t) {\n  return new (t || TuiHostedDropdownComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TUI_DROPDOWN_WATCHED_CONTROLLER));\n};\n\nTuiHostedDropdownComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiHostedDropdownComponent,\n  selectors: [[\"tui-hosted-dropdown\"]],\n  contentQueries: function TuiHostedDropdownComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TuiHostedDropdownConnectorDirective, 5, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownHost = _t.first);\n    }\n  },\n  viewQuery: function TuiHostedDropdownComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5, ElementRef);\n      ɵngcc0.ɵɵviewQuery(TuiDropdownDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownDirective = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TuiHostedDropdownComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focusin\", function TuiHostedDropdownComponent_focusin_HostBindingHandler($event) {\n        return ctx.onFocusIn($event.target);\n      })(\"click\", function TuiHostedDropdownComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event.target);\n      })(\"keydown.esc\", function TuiHostedDropdownComponent_keydown_esc_HostBindingHandler($event) {\n        return ctx.onKeyDownEsc($event);\n      })(\"keydown.arrowDown\", function TuiHostedDropdownComponent_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.onArrow($event, true);\n      })(\"keydown.arrowUp\", function TuiHostedDropdownComponent_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.onArrow($event, false);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"_hosted_dropdown_focused\", ctx.focused);\n    }\n  },\n  inputs: {\n    content: \"content\",\n    canOpen: \"canOpen\",\n    open: \"open\"\n  },\n  outputs: {\n    openChange: \"openChange\",\n    focusedChange: \"focusedChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => TuiHostedDropdownComponent_1)\n  }, DROPDOWN_CONTROLLER_PROVIDER])],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 10,\n  consts: [[1, \"wrapper\", 3, \"tuiDropdownAlign\", \"tuiDropdownDirection\", \"tuiDropdownHost\", \"tuiDropdownLimitWidth\", \"tuiDropdownMinHeight\", \"tuiDropdownMaxHeight\", \"tuiDropdownSided\", \"tuiDropdownContent\", \"tuiDropdown\", \"tuiObscuredEnabled\", \"tuiObscured\", \"tuiActiveZoneChange\"], [\"activeZone\", \"tuiActiveZone\"], [\"polymorpheus\", \"\"], [\"dropdown\", \"polymorpheus\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\", \"keydown.esc\", \"keydown\"], [\"wrapper\", \"\"]],\n  template: function TuiHostedDropdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"tuiObscured\", function TuiHostedDropdownComponent_Template_div_tuiObscured_0_listener($event) {\n        return ctx.onHostObscured($event);\n      })(\"tuiActiveZoneChange\", function TuiHostedDropdownComponent_Template_div_tuiActiveZoneChange_0_listener($event) {\n        return ctx.onActiveZone($event);\n      });\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵtemplate(3, TuiHostedDropdownComponent_ng_template_3_Template, 3, 4, \"ng-template\", 2, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r1 = ɵngcc0.ɵɵreference(4);\n\n      ɵngcc0.ɵɵproperty(\"tuiDropdownAlign\", ctx.controller.align)(\"tuiDropdownDirection\", ctx.controller.direction)(\"tuiDropdownHost\", ctx.nativeFocusableElement)(\"tuiDropdownLimitWidth\", ctx.controller.limitWidth)(\"tuiDropdownMinHeight\", ctx.controller.minHeight)(\"tuiDropdownMaxHeight\", ctx.controller.maxHeight)(\"tuiDropdownSided\", ctx.controller.sided)(\"tuiDropdownContent\", _r1)(\"tuiDropdown\", ctx.open && ctx.canOpen)(\"tuiObscuredEnabled\", ctx.open);\n    }\n  },\n  directives: [ɵngcc1.TuiDropdownDirective, ɵngcc2.TuiObscuredDirective, ɵngcc2.TuiActiveZoneDirective, ɵngcc3.PolymorpheusTemplate, ɵngcc3.PolymorpheusOutletComponent],\n  styles: [\"[_nghost-%COMP%]{display:inline-flex}.wrapper[_ngcontent-%COMP%]{border-radius:inherit;height:inherit;flex:1 1 auto;width:100%}.content[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-height:0}\"],\n  changeDetection: 0\n});\n\nTuiHostedDropdownComponent.ctorParameters = () => [{\n  type: ElementRef,\n  decorators: [{\n    type: Inject,\n    args: [ElementRef]\n  }]\n}, {\n  type: TuiDropdownControllerDirective,\n  decorators: [{\n    type: Inject,\n    args: [TUI_DROPDOWN_WATCHED_CONTROLLER]\n  }]\n}];\n\n__decorate([ContentChild(TuiHostedDropdownConnectorDirective, {\n  read: ElementRef\n})], TuiHostedDropdownComponent.prototype, \"dropdownHost\", void 0);\n\n__decorate([ViewChild('wrapper', {\n  read: ElementRef\n})], TuiHostedDropdownComponent.prototype, \"wrapper\", void 0);\n\n__decorate([ViewChild(TuiDropdownDirective)], TuiHostedDropdownComponent.prototype, \"dropdownDirective\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiHostedDropdownComponent.prototype, \"content\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiHostedDropdownComponent.prototype, \"canOpen\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiHostedDropdownComponent.prototype, \"open\", void 0);\n\n__decorate([Output()], TuiHostedDropdownComponent.prototype, \"openChange\", void 0);\n\n__decorate([Output()], TuiHostedDropdownComponent.prototype, \"focusedChange\", void 0);\n\n__decorate([HostBinding('class._hosted_dropdown_focused')], TuiHostedDropdownComponent.prototype, \"focused\", null);\n\n__decorate([HostListener('focusin', ['$event.target'])], TuiHostedDropdownComponent.prototype, \"onFocusIn\", null);\n\n__decorate([HostListener('click', ['$event.target'])], TuiHostedDropdownComponent.prototype, \"onClick\", null);\n\n__decorate([HostListener('keydown.esc', ['$event'])], TuiHostedDropdownComponent.prototype, \"onKeyDownEsc\", null);\n\n__decorate([HostListener('keydown.arrowDown', ['$event', 'true']), HostListener('keydown.arrowUp', ['$event', 'false'])], TuiHostedDropdownComponent.prototype, \"onArrow\", null);\n\nTuiHostedDropdownComponent = TuiHostedDropdownComponent_1 = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(TUI_DROPDOWN_WATCHED_CONTROLLER))], TuiHostedDropdownComponent);\nlet TuiHostedDropdownModule = /*#__PURE__*/(() => {\n  let TuiHostedDropdownModule = class TuiHostedDropdownModule {};\n\n  TuiHostedDropdownModule.ɵfac = function TuiHostedDropdownModule_Factory(t) {\n    return new (t || TuiHostedDropdownModule)();\n  };\n\n  TuiHostedDropdownModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiHostedDropdownModule\n  });\n  TuiHostedDropdownModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiObscuredModule, PolymorpheusModule, TuiActiveZoneModule, TuiDropdownModule]]\n  });\n  return TuiHostedDropdownModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiHostedDropdownModule, {\n    declarations: function () {\n      return [TuiHostedDropdownComponent, TuiHostedDropdownConnectorDirective];\n    },\n    imports: function () {\n      return [CommonModule, TuiObscuredModule, PolymorpheusModule, TuiActiveZoneModule, TuiDropdownModule];\n    },\n    exports: function () {\n      return [TuiHostedDropdownComponent, TuiHostedDropdownConnectorDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiHostedDropdownComponent, TuiHostedDropdownConnectorDirective, TuiHostedDropdownModule }; //# sourceMappingURL=taiga-ui-core-components-hosted-dropdown.js.map","map":null,"metadata":{},"sourceType":"module"}