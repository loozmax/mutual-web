{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Optional, Self, Inject, ChangeDetectorRef, ElementRef, ViewChildren, Input, HostBinding, Component, ChangeDetectionStrategy, forwardRef, NgModule } from '@angular/core';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, EMPTY_QUERY, TUI_DEFAULT_IDENTITY_MATCHER, ALWAYS_FALSE_HANDLER, isNativeFocusedIn, tuiDefaultProp, TUI_FOCUSABLE_ITEM_ACCESSOR } from '@taiga-ui/cdk';\nimport { TuiRadioLabeledComponent, TuiRadioLabeledModule } from '@taiga-ui/kit/components/radio-labeled';\nimport { CommonModule } from '@angular/common';\nimport { TuiRadioGroupModule } from '@taiga-ui/kit/components/radio-group';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/kit/components/radio-group';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@taiga-ui/kit/components/radio-labeled';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@tinkoff/ng-polymorpheus';\n\nfunction TuiRadioListComponent_tui_radio_labeled_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tui-radio-labeled\", 2);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function TuiRadioListComponent_tui_radio_labeled_1_Template_tui_radio_labeled_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onModelChange($event);\n    });\n    ɵngcc0.ɵɵelement(1, \"div\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"readOnly\", ctx_r0.readOnly)(\"nativeId\", ctx_r0.computeId(index_r2))(\"disabled\", ctx_r0.disabled)(\"item\", item_r1)(\"size\", ctx_r0.size)(\"pseudoInvalid\", ctx_r0.computedInvalid)(\"pseudoDisabled\", ctx_r0.itemIsDisabled(item_r1))(\"ngModel\", ctx_r0.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r0.itemContent)(\"context\", ctx_r0.getContentContext(item_r1, index_r2, ctx_r0.itemIsActive(item_r1)));\n  }\n}\n\nvar TuiRadioListComponent_1;\nlet TuiRadioListComponent = TuiRadioListComponent_1 = class TuiRadioListComponent extends AbstractTuiNullableControl {\n  constructor(control, changeDetectorRef, elementRef) {\n    super(control, changeDetectorRef);\n    this.elementRef = elementRef;\n    this.radioButtons = EMPTY_QUERY;\n    this.items = [];\n    this.size = 'm';\n    this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;\n    this.orientation = 'vertical';\n    this.disabledItemHandler = ALWAYS_FALSE_HANDLER; // @bad TODO: Remove & { index: number }\n\n    this.itemContent = ({\n      $implicit\n    }) => String($implicit);\n  }\n\n  get nativeFocusableElement() {\n    const focusableRadioButton = this.radioButtons.find(radioButton => radioButton.nativeFocusableElement !== null);\n    return focusableRadioButton ? focusableRadioButton.nativeFocusableElement : null;\n  }\n\n  get focused() {\n    return isNativeFocusedIn(this.elementRef.nativeElement);\n  }\n\n  computeId(index) {\n    return `${this.id}-${index}`;\n  }\n\n  itemIsDisabled(item) {\n    return this.disabledItemHandler(item);\n  }\n\n  getContentContext(item, index, active) {\n    return {\n      $implicit: item,\n      index,\n      active\n    };\n  }\n\n  onModelChange(value) {\n    this.updateValue(value);\n  }\n\n  itemIsActive(item) {\n    return this.value === null ? item === null : this.identityMatcher(this.value, item);\n  }\n\n};\n\nTuiRadioListComponent.ɵfac = function TuiRadioListComponent_Factory(t) {\n  return new (t || TuiRadioListComponent)(ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef));\n};\n\nTuiRadioListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiRadioListComponent,\n  selectors: [[\"tui-radio-list\"]],\n  viewQuery: function TuiRadioListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TuiRadioLabeledComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radioButtons = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TuiRadioListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"data-size\", ctx.size)(\"data-tui-host-orientation\", ctx.orientation);\n    }\n  },\n  inputs: {\n    items: \"items\",\n    size: \"size\",\n    identityMatcher: \"identityMatcher\",\n    orientation: \"orientation\",\n    disabledItemHandler: \"disabledItemHandler\",\n    itemContent: \"itemContent\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => TuiRadioListComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"group\"], [\"class\", \"item\", 3, \"readOnly\", \"nativeId\", \"disabled\", \"item\", \"size\", \"pseudoInvalid\", \"pseudoDisabled\", \"ngModel\", \"ngModelChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"item\", 3, \"readOnly\", \"nativeId\", \"disabled\", \"item\", \"size\", \"pseudoInvalid\", \"pseudoDisabled\", \"ngModel\", \"ngModelChange\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\"]],\n  template: function TuiRadioListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"tui-radio-group\", 0);\n      ɵngcc0.ɵɵtemplate(1, TuiRadioListComponent_tui_radio_labeled_1_Template, 2, 10, \"tui-radio-labeled\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  directives: [ɵngcc1.TuiRadioGroupComponent, ɵngcc2.NgForOf, ɵngcc3.TuiRadioLabeledComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc5.PolymorpheusOutletComponent],\n  styles: [\"[_nghost-%COMP%]{display:block}._readonly[_nghost-%COMP%]{pointer-events:none}[data-tui-host-orientation=horizontal][_nghost-%COMP%]   .group[_ngcontent-%COMP%]{display:flex;justify-content:inherit}[data-tui-host-orientation=horizontal][_nghost-%COMP%]   .item[_ngcontent-%COMP%]:nth-child(n+2){margin-left:1.5rem}[data-tui-host-orientation=vertical][_nghost-%COMP%]   .item[_ngcontent-%COMP%]:nth-child(n+2){margin-top:.75rem}[data-size='l'][data-tui-host-orientation=horizontal][_nghost-%COMP%]   .item[_ngcontent-%COMP%]:nth-child(n+2){margin-left:2.5rem}[data-size='l'][data-tui-host-orientation=vertical][_nghost-%COMP%]   .item[_ngcontent-%COMP%]:nth-child(n+2){margin-top:1rem}\"],\n  changeDetection: 0\n});\n\nTuiRadioListComponent.ctorParameters = () => [{\n  type: NgControl,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }, {\n    type: Inject,\n    args: [NgControl]\n  }]\n}, {\n  type: ChangeDetectorRef,\n  decorators: [{\n    type: Inject,\n    args: [ChangeDetectorRef]\n  }]\n}, {\n  type: ElementRef,\n  decorators: [{\n    type: Inject,\n    args: [ElementRef]\n  }]\n}];\n\n__decorate([ViewChildren(TuiRadioLabeledComponent)], TuiRadioListComponent.prototype, \"radioButtons\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiRadioListComponent.prototype, \"items\", void 0);\n\n__decorate([Input(), HostBinding('attr.data-size'), tuiDefaultProp()], TuiRadioListComponent.prototype, \"size\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiRadioListComponent.prototype, \"identityMatcher\", void 0);\n\n__decorate([Input(), HostBinding('attr.data-tui-host-orientation'), tuiDefaultProp()], TuiRadioListComponent.prototype, \"orientation\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiRadioListComponent.prototype, \"disabledItemHandler\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiRadioListComponent.prototype, \"itemContent\", void 0);\n\nTuiRadioListComponent = TuiRadioListComponent_1 = __decorate([__param(0, Optional()), __param(0, Self()), __param(0, Inject(NgControl)), __param(1, Inject(ChangeDetectorRef)), __param(2, Inject(ElementRef))], TuiRadioListComponent);\nlet TuiRadioListModule = /*#__PURE__*/(() => {\n  let TuiRadioListModule = class TuiRadioListModule {};\n\n  TuiRadioListModule.ɵfac = function TuiRadioListModule_Factory(t) {\n    return new (t || TuiRadioListModule)();\n  };\n\n  TuiRadioListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiRadioListModule\n  });\n  TuiRadioListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiRadioGroupModule, TuiRadioLabeledModule]]\n  });\n  return TuiRadioListModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiRadioListModule, {\n    declarations: function () {\n      return [TuiRadioListComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, PolymorpheusModule, TuiRadioGroupModule, TuiRadioLabeledModule];\n    },\n    exports: function () {\n      return [TuiRadioListComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiRadioListComponent, TuiRadioListModule }; //# sourceMappingURL=taiga-ui-kit-components-radio-list.js.map","map":null,"metadata":{},"sourceType":"module"}