{"ast":null,"code":"import { trigger, transition, style, animate, query, stagger } from '@angular/animations';\nconst TRANSITION = '{{duration}}ms ease-in-out';\nconst DURATION = {\n  params: {\n    duration: 300\n  }\n};\nconst STAGGER = 300;\nconst tuiHeightCollapse = trigger('tuiHeightCollapse', [transition(':enter', [style({\n  height: 0\n}), animate(TRANSITION, style({\n  height: '*'\n}))], DURATION), transition(':leave', [style({\n  height: '*'\n}), animate(TRANSITION, style({\n  height: 0\n}))], DURATION)]);\nconst tuiHeightCollapseList = trigger('tuiHeightCollapseList', [transition('* => *', [query(':enter', [style({\n  height: 0\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  height: '*'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  height: '*'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  height: 0\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiWidthCollapse = trigger('tuiWidthCollapse', [transition(':enter', [style({\n  width: 0\n}), animate(TRANSITION, style({\n  width: '*'\n}))], DURATION), transition(':leave', [style({\n  width: '*'\n}), animate(TRANSITION, style({\n  width: 0\n}))], DURATION)]);\nconst tuiWidthCollapseList = trigger('tuiWidthCollapseList', [transition('* => *', [query(':enter', [style({\n  width: 0\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  width: '*'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  width: '*'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  width: 0\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiFadeIn = trigger('tuiFadeIn', [transition(':enter', [style({\n  opacity: 0\n}), animate(TRANSITION, style({\n  opacity: 1\n}))], DURATION), transition(':leave', [style({\n  opacity: 1\n}), animate(TRANSITION, style({\n  opacity: 0\n}))], DURATION)]);\nconst tuiFadeInList = trigger('tuiFadeInList', [transition('* => *', [query(':enter', [style({\n  opacity: 0\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  opacity: 1\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  opacity: 1\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  opacity: 0\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiFadeInTop = trigger('tuiFadeInTop', [transition(':enter', [style({\n  transform: 'translateY(-10px)',\n  opacity: 0\n}), animate(TRANSITION, style({\n  transform: 'translateY(0)',\n  opacity: 1\n}))], DURATION), transition(':leave', [style({\n  transform: 'translateY(0)',\n  opacity: 1\n}), animate(TRANSITION, style({\n  transform: 'translateY(-10px)',\n  opacity: 0\n}))], DURATION)]);\nconst tuiFadeInBottom = trigger('tuiFadeInBottom', [transition(':enter', [style({\n  transform: 'translateY(10px)',\n  opacity: 0\n}), animate(TRANSITION, style({\n  transform: 'translateY(0)',\n  opacity: 1\n}))], DURATION), transition(':leave', [style({\n  transform: 'translateY(0)',\n  opacity: 1\n}), animate(TRANSITION, style({\n  transform: 'translateY(10px)',\n  opacity: 0\n}))], DURATION)]);\nconst tuiDropdownAnimation = trigger('tuiDropdownAnimation', [transition(`* => ${\"fadeInTop\"\n/* FadeInTop */\n}`, [style({\n  transform: 'translateY(-10px)',\n  opacity: 0\n}), animate(TRANSITION, style({\n  transform: 'translateY(0)',\n  opacity: 1\n}))], DURATION), transition(`* => ${\"fadeInBottom\"\n/* FadeInBottom */\n}`, [style({\n  transform: 'translateY(10px)',\n  opacity: 0\n}), animate(TRANSITION, style({\n  transform: 'translateY(0)',\n  opacity: 1\n}))], DURATION), transition(`${\"fadeInBottom\"\n/* FadeInBottom */\n} => *`, [style({\n  transform: 'translateY(0)',\n  opacity: 1\n}), animate(TRANSITION, style({\n  transform: 'translateY(10px)',\n  opacity: 0\n}))], DURATION), transition(`${\"fadeInTop\"\n/* FadeInTop */\n} => *`, [style({\n  transform: 'translateY(0)',\n  opacity: 1\n}), animate(TRANSITION, style({\n  transform: 'translateY(-10px)',\n  opacity: 0\n}))], DURATION)]);\nconst tuiScaleIn = trigger('tuiScaleIn', [transition(':enter', [style({\n  transform: 'scale(0)'\n}), animate(TRANSITION, style({\n  transform: 'scale(1)'\n}))], DURATION), transition(':leave', [style({\n  transform: 'scale(1)'\n}), animate(TRANSITION, style({\n  transform: 'scale(0)'\n}))], DURATION)]);\nconst tuiScaleInList = trigger('tuiScaleInList', [transition('* => *', [query(':enter', [style({\n  transform: 'scale(0)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'scale(1)'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  transform: 'scale(1)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'scale(0)'\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiSlideIn = trigger('tuiSlideIn', [transition(`* => left`, [style({\n  transform: 'translateX(-100%)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(0)'\n}))], DURATION), transition('left => *', [style({\n  transform: 'translateX(0)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(-100%)'\n}))], DURATION), transition('* => right', [style({\n  transform: 'translateX(100%)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(0)'\n}))], DURATION), transition('right => *', [style({\n  transform: 'translateX(0)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(100%)'\n}))], DURATION)]);\nconst tuiSlideInLeft = trigger('tuiSlideInLeft', [transition(':enter', [style({\n  transform: 'translateX(-100%)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(0)'\n}))], DURATION), transition(':leave', [style({\n  transform: 'translateX(0)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(-100%)'\n}))], DURATION)]);\nconst tuiSlideInLeftList = trigger('tuiSlideInLeftList', [transition('* => *', [query(':enter', [style({\n  transform: 'translateX(-100%)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateX(0)'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  transform: 'translateX(0)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateX(-100%)'\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiSlideInRight = trigger('tuiSlideInRight', [transition(':enter', [style({\n  transform: 'translateX(100%)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(0)'\n}))], DURATION), transition(':leave', [style({\n  transform: 'translateX(0)'\n}), animate(TRANSITION, style({\n  transform: 'translateX(100%)'\n}))], DURATION)]);\nconst tuiSlideInRightList = trigger('tuiSlideInRightList', [transition('* => *', [query(':enter', [style({\n  transform: 'translateX(100%)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateX(0)'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  transform: 'translateX(0)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateX(100%)'\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiSlideInTop = trigger('tuiSlideInTop', [transition(':enter', [style({\n  transform: 'translate3d(0,{{start}},0)'\n}), animate(TRANSITION, style({\n  transform: 'translate3d(0,{{end}},0)'\n}))], {\n  params: {\n    end: 0,\n    start: '100%',\n    duration: 300\n  }\n}), transition(':leave', [style({\n  transform: 'translate3d(0,{{end}},0)'\n}), animate(TRANSITION, style({\n  transform: 'translate3d(0,{{start}},0)'\n}))], {\n  params: {\n    end: 0,\n    start: '100%',\n    duration: 300\n  }\n})]);\nconst tuiSlideInTopList = trigger('tuiSlideInTopList', [transition('* => *', [query(':enter', [style({\n  transform: 'translateY(100%)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateY(0)'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  transform: 'translateY(0)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateY(100%)'\n}))])], {\n  optional: true\n})], DURATION)]);\nconst tuiSlideInBottom = trigger('tuiSlideInBottom', [transition(':enter', [style({\n  transform: 'translateY(-100%)'\n}), animate(TRANSITION, style({\n  transform: 'translateY(0)'\n}))], DURATION), transition(':leave', [style({\n  transform: 'translateY(0)'\n}), animate(TRANSITION, style({\n  transform: 'translateY(-100%)'\n}))], DURATION)]);\nconst tuiSlideInBottomList = trigger('tuiSlideInBottomList', [transition('* => *', [query(':enter', [style({\n  transform: 'translateY(-100%)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateY(0)'\n}))])], {\n  optional: true\n}), query(':leave', [style({\n  transform: 'translateY(0)'\n}), stagger(STAGGER, [animate(TRANSITION, style({\n  transform: 'translateY(-100%)'\n}))])], {\n  optional: true\n})], DURATION)]);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiDropdownAnimation, tuiFadeIn, tuiFadeInBottom, tuiFadeInList, tuiFadeInTop, tuiHeightCollapse, tuiHeightCollapseList, tuiScaleIn, tuiScaleInList, tuiSlideIn, tuiSlideInBottom, tuiSlideInBottomList, tuiSlideInLeft, tuiSlideInLeftList, tuiSlideInRight, tuiSlideInRightList, tuiSlideInTop, tuiSlideInTopList, tuiWidthCollapse, tuiWidthCollapseList }; //# sourceMappingURL=taiga-ui-core-animations.js.map","map":null,"metadata":{},"sourceType":"module"}