{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/room.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction MyWorksComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const project_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", project_r3.title, \" \");\n  }\n}\n\nfunction MyWorksComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, MyWorksComponent_div_0_div_2_Template, 2, 1, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.id, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", task_r1.tasks);\n  }\n}\n\nexport let MyWorksComponent = /*#__PURE__*/(() => {\n  class MyWorksComponent {\n    constructor(_roomService) {\n      this._roomService = _roomService;\n      this.tasks = [];\n    }\n\n    ngOnInit() {\n      this._roomService.getRooms(0, 1000).pipe(map(item => item.map(room => room.id))).subscribe({\n        next: ids => {\n          ids.forEach(c => {\n            this._roomService.getTasks(c).subscribe({\n              next: response => {\n                const task = {};\n                task.id = c;\n                task.tasks = response;\n                this.tasks.push(task);\n              }\n            });\n          });\n        }\n      });\n    }\n\n  }\n\n  MyWorksComponent.ɵfac = function MyWorksComponent_Factory(t) {\n    return new (t || MyWorksComponent)(i0.ɵɵdirectiveInject(i1.RoomService));\n  };\n\n  MyWorksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MyWorksComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function MyWorksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MyWorksComponent_div_0_Template, 3, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    directives: [i2.NgForOf],\n    encapsulation: 2\n  });\n  return MyWorksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}