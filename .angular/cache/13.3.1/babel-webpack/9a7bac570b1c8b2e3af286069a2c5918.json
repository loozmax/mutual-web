{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { switchMap } from \"rxjs\";\nimport { FormBaseViewModel } from \"src/libraries/form-base-view-model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/room.service\";\nimport * as i2 from \"src/app/services/user.base.service\";\nimport * as i3 from \"src/app/services/global-notification.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@taiga-ui/kit\";\nimport * as i6 from \"@taiga-ui/core\";\nimport * as i7 from \"@taiga-ui/core/components/button\";\nexport let AddTaskComponent = /*#__PURE__*/(() => {\n  class AddTaskComponent extends FormBaseViewModel {\n    constructor(_roomService, _userBaseService, _notificationService) {\n      super();\n      this._roomService = _roomService;\n      this._userBaseService = _userBaseService;\n      this._notificationService = _notificationService;\n      this.addedTask = new EventEmitter();\n    }\n\n    createTask() {\n      this._userBaseService.getUser().pipe(switchMap(user => {\n        return this._roomService.createTask({\n          \"Название задания\": this.getFormValue('name'),\n          \"Описание задания\": this.getFormValue('description'),\n          \"Дата старта\": new Date(),\n          \"Дедлайн\": new Date(this.getFormValue('deadline').toString()),\n          \"ИД комнаты\": parseInt(this.id),\n          \"Минимальное количество оценок\": parseInt(this.getFormValue('countMarks')),\n          \"Ступени оценивания\": [{}],\n          \"Создатель\": user.email.toString()\n        });\n      })).subscribe({\n        next: () => {\n          this._notificationService.subject$.next({\n            status: 'success',\n            text: 'Задание успешно создано'\n          });\n\n          this.addedTask.emit();\n        }\n      });\n    }\n\n    getControls() {\n      return new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        description: new FormControl('', [Validators.required]),\n        deadline: new FormControl('', [Validators.required]),\n        countMarks: new FormControl('', [Validators.required]),\n        descriptionMark: new FormControl('', [Validators.required])\n      });\n    }\n\n  }\n\n  AddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.RoomService), i0.ɵɵdirectiveInject(i2.UserBaseService), i0.ɵɵdirectiveInject(i3.GlobalNotificationService));\n  };\n\n  AddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"add-task\"]],\n    inputs: {\n      id: \"id\"\n    },\n    outputs: {\n      addedTask: \"addedTask\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 20,\n    vars: 2,\n    consts: [[1, \"container\", 3, \"formGroup\"], [\"formControlName\", \"name\", 1, \"container__name_field\"], [\"tuiTextfield\", \"\", \"placeholder\", \"\", \"type\", \"text\"], [\"formControlName\", \"description\", 1, \"container__description_field\"], [\"formControlName\", \"deadline\", 1, \"container__deadline_field\"], [\"formControlName\", \"countMarks\", 1, \"container__count_mark_field\"], [\"formControlName\", \"descriptionMark\", 1, \"container__description_mark_field\"], [\"tuiButton\", \"\", \"type\", \"button\", \"appearance\", \"accent\", 1, \"container__button\", 3, \"disabled\", \"click\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"tui-input\", 1);\n        i0.ɵɵtext(4, \" \\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F \");\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"tui-input\", 3);\n        i0.ɵɵtext(7, \" \\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F \");\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"tui-input\", 4);\n        i0.ɵɵtext(10, \" \\u0421\\u0440\\u043E\\u043A \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F \");\n        i0.ɵɵelement(11, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"tui-input\", 5);\n        i0.ɵɵtext(13, \" \\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0446\\u0435\\u043D\\u043E\\u043A \");\n        i0.ɵɵelement(14, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"tui-input\", 6);\n        i0.ɵɵtext(16, \" \\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043E\\u0446\\u0435\\u043D\\u043A\\u0438 \");\n        i0.ɵɵelement(17, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_button_click_18_listener() {\n          return ctx.createTask();\n        });\n        i0.ɵɵtext(19, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.controlsGroup);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"disabled\", !ctx.controlsGroup.valid);\n      }\n    },\n    directives: [i4.NgControlStatusGroup, i4.FormGroupDirective, i5.TuiInputComponent, i5.TuiInputDirective, i4.NgControlStatus, i4.FormControlName, i6.TuiTextfieldComponent, i7.TuiButtonComponent],\n    styles: [\".container[_ngcontent-%COMP%]{margin:12px auto;width:80%}.container__name_field[_ngcontent-%COMP%], .container__description_field[_ngcontent-%COMP%], .container__deadline_field[_ngcontent-%COMP%], .container__count_mark_field[_ngcontent-%COMP%], .container__description_mark_field[_ngcontent-%COMP%]{border-radius:0;margin-bottom:18px}.container__button[_ngcontent-%COMP%]{width:100%;border-radius:0}\"]\n  });\n  return AddTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}