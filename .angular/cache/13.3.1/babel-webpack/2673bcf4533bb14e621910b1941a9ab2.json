{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { InjectionToken, Attribute, Directive, Inject, Optional, ElementRef, Injectable, NgModule, inject } from '@angular/core';\nimport { WINDOW } from '@ng-web-apis/common';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nconst INTERSECTION_ROOT = new InjectionToken('Root element for IntersectionObserver');\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\nconst INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';\n/** @type {?} */\n\nconst INTERSECTION_ROOT_MARGIN = new InjectionToken('rootMargin for IntersectionObserver', {\n  providedIn: 'root',\n  factory: () => INTERSECTION_ROOT_MARGIN_DEFAULT\n});\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} rootMargin\r\n * @return {?}\r\n */\n\nfunction rootMarginFactory(rootMargin) {\n  return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\n\nconst INTERSECTION_THRESHOLD_DEFAULT = 0;\n/** @type {?} */\n\nconst INTERSECTION_THRESHOLD = new InjectionToken('threshold for IntersectionObserver', {\n  providedIn: 'root',\n  factory: () => INTERSECTION_THRESHOLD_DEFAULT\n});\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} threshold\r\n * @return {?}\r\n */\n\nfunction thresholdFactory(threshold) {\n  return threshold ? threshold.split(',').map(parseFloat) : INTERSECTION_THRESHOLD_DEFAULT;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet IntersectionObserverDirective = /*#__PURE__*/(() => {\n  class IntersectionObserverDirective extends IntersectionObserver {\n    /**\r\n     * @param {?} root\r\n     * @param {?} rootMargin\r\n     * @param {?} threshold\r\n     */\n    constructor(root, rootMargin, threshold) {\n      super(entries => {\n        this.callbacks.forEach((callback, element) => {\n          /** @type {?} */\n          const filtered = entries.filter(({\n            target\n          }) => target === element);\n          return filtered.length && callback(filtered, this);\n        });\n      }, {\n        root: root && root.nativeElement,\n        rootMargin: rootMarginFactory(rootMargin),\n        threshold: thresholdFactory(threshold)\n      });\n      this.callbacks = new Map();\n    }\n    /**\r\n     * @param {?} target\r\n     * @param {?=} callback\r\n     * @return {?}\r\n     */\n\n\n    observe(target, callback = () => {}) {\n      super.observe(target);\n      this.callbacks.set(target, callback);\n    }\n    /**\r\n     * @param {?} target\r\n     * @return {?}\r\n     */\n\n\n    unobserve(target) {\n      super.unobserve(target);\n      this.callbacks.delete(target);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngOnDestroy() {\n      this.disconnect();\n    }\n\n  }\n\n  IntersectionObserverDirective.ɵfac = function IntersectionObserverDirective_Factory(t) {\n    return new (t || IntersectionObserverDirective)(ɵngcc0.ɵɵdirectiveInject(INTERSECTION_ROOT, 8), ɵngcc0.ɵɵinjectAttribute('waIntersectionRootMargin'), ɵngcc0.ɵɵinjectAttribute('waIntersectionThreshold'));\n  };\n\n  IntersectionObserverDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: IntersectionObserverDirective,\n    selectors: [[\"\", \"waIntersectionObserver\", \"\"]],\n    exportAs: [\"IntersectionObserver\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  return IntersectionObserverDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet IntersectionObserveeService = /*#__PURE__*/(() => {\n  class IntersectionObserveeService extends Observable {\n    /**\r\n     * @param {?} __0\r\n     * @param {?} observer\r\n     */\n    constructor({\n      nativeElement\n    }, observer) {\n      super(subscriber => {\n        observer.observe(nativeElement, entries => {\n          subscriber.next(entries);\n        });\n        return () => {\n          observer.unobserve(nativeElement);\n        };\n      });\n      return this.pipe(share());\n    }\n\n  }\n\n  IntersectionObserveeService.ɵfac = function IntersectionObserveeService_Factory(t) {\n    return new (t || IntersectionObserveeService)(ɵngcc0.ɵɵinject(ElementRef), ɵngcc0.ɵɵinject(IntersectionObserverDirective));\n  };\n\n  IntersectionObserveeService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: IntersectionObserveeService,\n    factory: IntersectionObserveeService.ɵfac\n  });\n  /** @nocollapse */\n\n  return IntersectionObserveeService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n// @dynamic\n\n\nlet IntersectionObserveeDirective = /*#__PURE__*/(() => {\n  class IntersectionObserveeDirective {\n    /**\r\n     * @param {?} waIntersectionObservee\r\n     */\n    constructor(waIntersectionObservee) {\n      this.waIntersectionObservee = waIntersectionObservee;\n    }\n\n  }\n\n  IntersectionObserveeDirective.ɵfac = function IntersectionObserveeDirective_Factory(t) {\n    return new (t || IntersectionObserveeDirective)(ɵngcc0.ɵɵdirectiveInject(IntersectionObserveeService));\n  };\n\n  IntersectionObserveeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: IntersectionObserveeDirective,\n    selectors: [[\"\", \"waIntersectionObservee\", \"\"]],\n    outputs: {\n      waIntersectionObservee: \"waIntersectionObservee\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([IntersectionObserveeService])]\n  });\n  /** @nocollapse */\n\n  return IntersectionObserveeDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet IntersectionRootDirective = /*#__PURE__*/(() => {\n  class IntersectionRootDirective {}\n\n  IntersectionRootDirective.ɵfac = function IntersectionRootDirective_Factory(t) {\n    return new (t || IntersectionRootDirective)();\n  };\n\n  IntersectionRootDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: IntersectionRootDirective,\n    selectors: [[\"\", \"waIntersectionRoot\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: INTERSECTION_ROOT,\n      useExisting: ElementRef\n    }])]\n  });\n  return IntersectionRootDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet IntersectionObserverModule = /*#__PURE__*/(() => {\n  class IntersectionObserverModule {}\n\n  IntersectionObserverModule.ɵfac = function IntersectionObserverModule_Factory(t) {\n    return new (t || IntersectionObserverModule)();\n  };\n\n  IntersectionObserverModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: IntersectionObserverModule\n  });\n  IntersectionObserverModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return IntersectionObserverModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IntersectionObserverModule, {\n    declarations: [IntersectionObserverDirective, IntersectionObserveeDirective, IntersectionRootDirective],\n    exports: [IntersectionObserverDirective, IntersectionObserveeDirective, IntersectionRootDirective]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\n\nconst INTERSECTION_OBSERVER_SUPPORT = new InjectionToken('Intersection Observer API support', {\n  providedIn: 'root',\n  factory: () => !!inject(WINDOW).IntersectionObserver\n});\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nlet IntersectionObserverService = /*#__PURE__*/(() => {\n  class IntersectionObserverService extends Observable {\n    /**\r\n     * @param {?} __0\r\n     * @param {?} support\r\n     * @param {?} rootMargin\r\n     * @param {?} threshold\r\n     * @param {?} root\r\n     */\n    constructor({\n      nativeElement\n    }, support, rootMargin, threshold, root) {\n      super(subscriber => {\n        if (!support) {\n          subscriber.error('IntersectionObserver is not supported in your browser');\n          return;\n        }\n        /** @type {?} */\n\n\n        const observer = new IntersectionObserver(entries => {\n          subscriber.next(entries);\n        }, {\n          root: root && root.nativeElement,\n          rootMargin,\n          threshold\n        });\n        observer.observe(nativeElement);\n        return () => {\n          observer.disconnect();\n        };\n      });\n      return this.pipe(share());\n    }\n\n  }\n\n  IntersectionObserverService.ɵfac = function IntersectionObserverService_Factory(t) {\n    return new (t || IntersectionObserverService)(ɵngcc0.ɵɵinject(ElementRef), ɵngcc0.ɵɵinject(INTERSECTION_OBSERVER_SUPPORT), ɵngcc0.ɵɵinject(INTERSECTION_ROOT_MARGIN), ɵngcc0.ɵɵinject(INTERSECTION_THRESHOLD), ɵngcc0.ɵɵinject(INTERSECTION_ROOT, 8));\n  };\n\n  IntersectionObserverService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: IntersectionObserverService,\n    factory: IntersectionObserverService.ɵfac\n  });\n  /** @nocollapse */\n\n  return IntersectionObserverService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { IntersectionObserveeDirective, IntersectionObserverDirective, IntersectionRootDirective, IntersectionObserverModule, IntersectionObserveeService, IntersectionObserverService, INTERSECTION_ROOT, INTERSECTION_ROOT_MARGIN_DEFAULT, INTERSECTION_ROOT_MARGIN, INTERSECTION_THRESHOLD_DEFAULT, INTERSECTION_THRESHOLD, INTERSECTION_OBSERVER_SUPPORT }; //# sourceMappingURL=ng-web-apis-intersection-observer.js.map","map":null,"metadata":{},"sourceType":"module"}