{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { EventEmitter, ChangeDetectorRef, Inject, ElementRef, Input, HostBinding, Output, ContentChildren, TemplateRef, HostListener, Component, ChangeDetectionStrategy, Directive, NgModule } from '@angular/core';\nimport { INTERSECTION_ROOT, IntersectionObserverModule } from '@ng-web-apis/intersection-observer';\nimport { EMPTY_QUERY, clamp, TUI_IS_MOBILE, tuiDefaultProp, TuiItemDirective, tuiPure, typedFromEvent, TuiPanModule, TuiSwipeModule, TuiItemModule } from '@taiga-ui/cdk';\nimport { PAGE_VISIBILITY } from '@ng-web-apis/common';\nimport { Observable, BehaviorSubject, merge, combineLatest, interval, EMPTY } from 'rxjs';\nimport { mapTo, switchMap, filter, throttleTime, map, tap } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { TUI_BUTTON_OPTIONS } from '@taiga-ui/core'; // @dynamic\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@ng-web-apis/intersection-observer';\nimport * as ɵngcc3 from '@taiga-ui/cdk';\nimport * as ɵngcc4 from 'rxjs';\n\nfunction TuiCarouselComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TuiCarouselComponent_fieldset_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"fieldset\", 5);\n    ɵngcc0.ɵɵlistener(\"waIntersectionObservee\", function TuiCarouselComponent_fieldset_5_Template_fieldset_waIntersectionObservee_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onIntersection($event[0], i_r3);\n    });\n    ɵngcc0.ɵɵelementContainer(1, 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.isDisabled(i_r3))(\"ngStyle\", ctx_r1.getStyle(ctx_r1.itemsCount));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", item_r2);\n  }\n}\n\nlet TuiCarouselComponent = /*#__PURE__*/(() => {\n  let TuiCarouselComponent = class TuiCarouselComponent {\n    constructor(changeDetectorRef, elementRef, isMobile) {\n      this.changeDetectorRef = changeDetectorRef;\n      this.elementRef = elementRef;\n      this.isMobile = isMobile;\n      this.translate = 0;\n      this.draggable = false;\n      this.itemsCount = 1;\n      this.index = 0;\n      this.indexChange = new EventEmitter();\n      this.items = EMPTY_QUERY;\n      this.transitioned = true;\n    }\n\n    get transform() {\n      const x = this.transitioned ? this.computedTranslate : this.translate;\n      return `translateX(${100 * x}%)`;\n    }\n\n    onTransitioned(transitioned) {\n      this.transitioned = transitioned;\n\n      if (!transitioned) {\n        this.translate = this.computedTranslate;\n      }\n    }\n\n    getStyle(itemsCount) {\n      const percent = `${100 / itemsCount}%`;\n      return {\n        flexBasis: percent,\n        minWidth: percent,\n        maxWidth: percent\n      };\n    }\n\n    next() {\n      this.updateIndex(this.index + 1);\n    }\n\n    prev() {\n      this.updateIndex(this.index - 1);\n    }\n\n    isDisabled(index) {\n      return index < this.index || index > this.index + this.itemsCount;\n    }\n\n    onIntersection({\n      intersectionRatio\n    }, index) {\n      if (intersectionRatio && intersectionRatio !== 1 && !this.transitioned) {\n        this.updateIndex(index - Math.floor(this.itemsCount / 2));\n      }\n    }\n\n    onScroll(delta) {\n      if (!this.isMobile) {\n        this.updateIndex(this.index + delta);\n      }\n    }\n\n    onPan(x) {\n      if (!this.computedDraggable) {\n        return;\n      }\n\n      const {\n        clientWidth\n      } = this.elementRef.nativeElement;\n      const min = 1 - this.items.length / this.itemsCount;\n      this.translate = clamp(x / clientWidth + this.translate, min, 0);\n    }\n\n    onSwipe(direction) {\n      if (Math.round(this.translate) !== -this.index || !this.computedDraggable) {\n        return;\n      } else if (direction === 'left') {\n        this.next();\n      } else if (direction === 'right') {\n        this.prev();\n      }\n    }\n\n    onAutoscroll() {\n      this.updateIndex(this.index === this.items.length - 1 ? 0 : this.index + 1);\n    }\n\n    get computedTranslate() {\n      return -this.index / this.itemsCount;\n    }\n\n    get computedDraggable() {\n      return this.isMobile || this.draggable;\n    }\n\n    updateIndex(index) {\n      this.index = clamp(index, 0, this.items.length - 1);\n      this.indexChange.emit(this.index);\n      this.changeDetectorRef.markForCheck();\n    }\n\n  };\n\n  TuiCarouselComponent.ɵfac = function TuiCarouselComponent_Factory(t) {\n    return new (t || TuiCarouselComponent)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TUI_IS_MOBILE));\n  };\n\n  TuiCarouselComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiCarouselComponent,\n    selectors: [[\"tui-carousel\"]],\n    contentQueries: function TuiCarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TuiItemDirective, 4, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function TuiCarouselComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"touchstart\", function TuiCarouselComponent_touchstart_HostBindingHandler() {\n          return ctx.onTransitioned(false);\n        })(\"touchend\", function TuiCarouselComponent_touchend_HostBindingHandler() {\n          return ctx.onTransitioned(true);\n        })(\"mousedown\", function TuiCarouselComponent_mousedown_HostBindingHandler() {\n          return ctx.onTransitioned(false);\n        })(\"mouseup.silent\", function TuiCarouselComponent_mouseup_silent_HostBindingHandler() {\n          return ctx.onTransitioned(true);\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_draggable\", ctx.draggable)(\"_transitioned\", ctx.transitioned);\n      }\n    },\n    inputs: {\n      draggable: \"draggable\",\n      itemsCount: \"itemsCount\",\n      index: \"index\"\n    },\n    outputs: {\n      indexChange: \"indexChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: INTERSECTION_ROOT,\n      useExisting: ElementRef\n    }])],\n    decls: 6,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [1, \"t-scroller\", 3, \"tuiCarouselScroll\"], [1, \"t-wrapper\"], [\"waIntersectionObserver\", \"\", \"waIntersectionThreshold\", \"0,1\", \"waIntersectionRootMargin\", \"100px 100000px 100px -51%\", 1, \"t-items\", 3, \"tuiPan\", \"tuiSwipe\", \"tuiCarouselAutoscroll\"], [\"class\", \"t-item\", 3, \"disabled\", \"ngStyle\", \"waIntersectionObservee\", 4, \"ngFor\", \"ngForOf\"], [1, \"t-item\", 3, \"disabled\", \"ngStyle\", \"waIntersectionObservee\"], [3, \"ngTemplateOutlet\"]],\n    template: function TuiCarouselComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiCarouselComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵlistener(\"tuiCarouselScroll\", function TuiCarouselComponent_Template_div_tuiCarouselScroll_2_listener($event) {\n          return ctx.onScroll($event);\n        });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n        ɵngcc0.ɵɵlistener(\"tuiPan\", function TuiCarouselComponent_Template_div_tuiPan_4_listener($event) {\n          return ctx.onPan($event[0]);\n        })(\"tuiSwipe\", function TuiCarouselComponent_Template_div_tuiSwipe_4_listener($event) {\n          return ctx.onSwipe($event.direction);\n        })(\"tuiCarouselAutoscroll\", function TuiCarouselComponent_Template_div_tuiCarouselAutoscroll_4_listener() {\n          return ctx.onAutoscroll();\n        });\n        ɵngcc0.ɵɵtemplate(5, TuiCarouselComponent_fieldset_5_Template, 2, 3, \"fieldset\", 4);\n        ɵngcc0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 4, ctx.items.changes));\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵstyleProp(\"transform\", ctx.transform);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: function () {\n      return [ɵngcc1.NgIf, TuiCarouselScrollDirective, ɵngcc2.IntersectionObserverDirective, ɵngcc3.TuiPanDirective, ɵngcc3.TuiSwipeDirective, TuiCarouselAutoscrollDirective, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc2.IntersectionObserveeDirective, ɵngcc1.NgTemplateOutlet];\n    },\n    pipes: function () {\n      return [ɵngcc1.AsyncPipe];\n    },\n    styles: [\"[_nghost-%COMP%]{position:relative;display:block;overflow:hidden}._draggable[_nghost-%COMP%]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}._draggable[_nghost-%COMP%]:hover{cursor:-webkit-grab;cursor:grab}._draggable[_nghost-%COMP%]:active{cursor:-webkit-grabbing;cursor:grabbing}.t-items[_ngcontent-%COMP%]{display:flex;align-items:center}._transitioned[_nghost-%COMP%]   .t-items[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out}.t-item[_ngcontent-%COMP%]{padding:0 1.25rem;flex:1;min-width:100%;max-width:100%;box-sizing:border-box;border:none;margin:0}.t-wrapper[_ngcontent-%COMP%]{position:-webkit-sticky;position:sticky;left:0;right:0;min-width:100%;overflow:hidden}.t-scroller[_ngcontent-%COMP%]{scrollbar-width:none;-ms-overflow-style:none;display:flex;overflow:auto;overscroll-behavior-x:none;padding-bottom:2rem;margin-bottom:-2rem}.t-scroller[_ngcontent-%COMP%]::-webkit-scrollbar, .t-scroller[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:0 0;width:0;height:0}.t-scroller[_ngcontent-%COMP%]:after, .t-scroller[_ngcontent-%COMP%]:before{content:'';display:block;min-width:1rem}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input(), HostBinding('class._draggable'), tuiDefaultProp()], TuiCarouselComponent.prototype, \"draggable\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiCarouselComponent.prototype, \"itemsCount\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiCarouselComponent.prototype, \"index\", void 0);\n\n  __decorate([Output()], TuiCarouselComponent.prototype, \"indexChange\", void 0);\n\n  __decorate([ContentChildren(TuiItemDirective, {\n    read: TemplateRef\n  })], TuiCarouselComponent.prototype, \"items\", void 0);\n\n  __decorate([HostBinding('class._transitioned')], TuiCarouselComponent.prototype, \"transitioned\", void 0);\n\n  __decorate([HostListener('touchstart', ['false']), HostListener('touchend', ['true']), HostListener('mousedown', ['false']), HostListener('document:mouseup.silent', ['true'])], TuiCarouselComponent.prototype, \"onTransitioned\", null);\n\n  __decorate([tuiPure], TuiCarouselComponent.prototype, \"getStyle\", null);\n\n  TuiCarouselComponent = __decorate([__param(0, Inject(ChangeDetectorRef)), __param(1, Inject(ElementRef)), __param(2, Inject(TUI_IS_MOBILE))], TuiCarouselComponent);\n  return TuiCarouselComponent;\n})();\nlet TuiCarouselDirective = /*#__PURE__*/(() => {\n  let TuiCarouselDirective = class TuiCarouselDirective extends Observable {\n    constructor(elementRef, visible$) {\n      super(subscriber => this.output$.subscribe(subscriber));\n      this.elementRef = elementRef;\n      this.visible$ = visible$;\n      this.duration$ = new BehaviorSubject(0);\n      this.running$ = merge(typedFromEvent(this.elementRef.nativeElement, 'mouseenter').pipe(mapTo(false)), typedFromEvent(this.elementRef.nativeElement, 'touchstart').pipe(mapTo(false)), typedFromEvent(this.elementRef.nativeElement, 'touchend').pipe(mapTo(true)), typedFromEvent(this.elementRef.nativeElement, 'mouseleave').pipe(mapTo(true)), this.visible$);\n      this.output$ = combineLatest([this.duration$, this.running$]).pipe(switchMap(([duration, running]) => duration && running ? interval(duration) : EMPTY));\n    }\n\n    set duration(duration) {\n      this.duration$.next(duration);\n    }\n\n  };\n\n  TuiCarouselDirective.ɵfac = function TuiCarouselDirective_Factory(t) {\n    return new (t || TuiCarouselDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(PAGE_VISIBILITY));\n  };\n\n  TuiCarouselDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiCarouselDirective,\n    selectors: [[\"tui-carousel\"]],\n    inputs: {\n      duration: \"duration\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input()], TuiCarouselDirective.prototype, \"duration\", null);\n\n  TuiCarouselDirective = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(PAGE_VISIBILITY))], TuiCarouselDirective);\n  return TuiCarouselDirective;\n})();\nlet TuiCarouselAutoscrollDirective = /*#__PURE__*/(() => {\n  let TuiCarouselAutoscrollDirective = class TuiCarouselAutoscrollDirective {\n    constructor(tuiCarouselAutoscroll) {\n      this.tuiCarouselAutoscroll = tuiCarouselAutoscroll;\n    }\n\n  };\n\n  TuiCarouselAutoscrollDirective.ɵfac = function TuiCarouselAutoscrollDirective_Factory(t) {\n    return new (t || TuiCarouselAutoscrollDirective)(ɵngcc0.ɵɵdirectiveInject(TuiCarouselDirective));\n  };\n\n  TuiCarouselAutoscrollDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiCarouselAutoscrollDirective,\n    selectors: [[\"\", \"tuiCarouselAutoscroll\", \"\"]],\n    outputs: {\n      tuiCarouselAutoscroll: \"tuiCarouselAutoscroll\"\n    }\n  });\n  TuiCarouselAutoscrollDirective = __decorate([__param(0, Inject(TuiCarouselDirective))], TuiCarouselAutoscrollDirective); // TODO: remove in ivy compilation\n\n  return TuiCarouselAutoscrollDirective;\n})();\nconst CAROUSEL_BUTTON_OPTIONS = {\n  appearance: \"secondary\"\n  /* Secondary */\n  ,\n  shape: 'rounded',\n  size: 'm'\n};\nlet TuiCarouselButtonsDirective = /*#__PURE__*/(() => {\n  let TuiCarouselButtonsDirective = class TuiCarouselButtonsDirective {};\n\n  TuiCarouselButtonsDirective.ɵfac = function TuiCarouselButtonsDirective_Factory(t) {\n    return new (t || TuiCarouselButtonsDirective)();\n  };\n\n  TuiCarouselButtonsDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiCarouselButtonsDirective,\n    selectors: [[\"\", \"tuiCarouselButtons\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: TUI_BUTTON_OPTIONS,\n      useValue: CAROUSEL_BUTTON_OPTIONS\n    }])]\n  });\n  return TuiCarouselButtonsDirective;\n})();\nlet TuiCarouselScrollDirective = /*#__PURE__*/(() => {\n  let TuiCarouselScrollDirective = class TuiCarouselScrollDirective {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.tuiCarouselScroll = typedFromEvent(this.elementRef.nativeElement, 'wheel').pipe(filter(({\n        deltaX\n      }) => Math.abs(deltaX) > 20), throttleTime(500), map(({\n        deltaX\n      }) => Math.sign(deltaX)), tap(() => {\n        // So we always have space to scroll and overflow-behavior saves us from back nav\n        this.elementRef.nativeElement.scrollLeft = 10;\n      }));\n    }\n\n  };\n\n  TuiCarouselScrollDirective.ɵfac = function TuiCarouselScrollDirective_Factory(t) {\n    return new (t || TuiCarouselScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef));\n  };\n\n  TuiCarouselScrollDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiCarouselScrollDirective,\n    selectors: [[\"\", \"tuiCarouselScroll\", \"\"]],\n    outputs: {\n      tuiCarouselScroll: \"tuiCarouselScroll\"\n    }\n  });\n\n  __decorate([Output()], TuiCarouselScrollDirective.prototype, \"tuiCarouselScroll\", void 0);\n\n  TuiCarouselScrollDirective = __decorate([__param(0, Inject(ElementRef))], TuiCarouselScrollDirective);\n  return TuiCarouselScrollDirective;\n})();\nlet TuiCarouselModule = /*#__PURE__*/(() => {\n  let TuiCarouselModule = class TuiCarouselModule {};\n\n  TuiCarouselModule.ɵfac = function TuiCarouselModule_Factory(t) {\n    return new (t || TuiCarouselModule)();\n  };\n\n  TuiCarouselModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiCarouselModule\n  });\n  TuiCarouselModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, IntersectionObserverModule, TuiPanModule, TuiSwipeModule, TuiItemModule]]\n  });\n  return TuiCarouselModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiCarouselModule, {\n    declarations: function () {\n      return [TuiCarouselComponent, TuiCarouselDirective, TuiCarouselButtonsDirective, TuiCarouselAutoscrollDirective, TuiCarouselScrollDirective];\n    },\n    imports: function () {\n      return [CommonModule, IntersectionObserverModule, TuiPanModule, TuiSwipeModule, TuiItemModule];\n    },\n    exports: function () {\n      return [TuiCarouselComponent, TuiCarouselDirective, TuiCarouselButtonsDirective, TuiItemDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CAROUSEL_BUTTON_OPTIONS, TuiCarouselAutoscrollDirective, TuiCarouselButtonsDirective, TuiCarouselComponent, TuiCarouselDirective, TuiCarouselModule, TuiCarouselScrollDirective }; //# sourceMappingURL=taiga-ui-kit-components-carousel.js.map","map":null,"metadata":{},"sourceType":"module"}