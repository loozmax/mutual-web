{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ViewContainerRef, Inject, TemplateRef, Input, Directive, NgModule } from '@angular/core';\n/**\n * @internal\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nclass TuiLetContext {\n  constructor(internalDirectiveInstance) {\n    this.internalDirectiveInstance = internalDirectiveInstance;\n  }\n\n  get $implicit() {\n    return this.internalDirectiveInstance.tuiLet;\n  }\n\n  get tuiLet() {\n    return this.internalDirectiveInstance.tuiLet;\n  }\n\n}\n/**\n * Works like *ngIf but does not have a condition — use it to declare\n * the result of pipes calculation (i.e. async pipe)\n */\n\n\nlet TuiLetDirective = /*#__PURE__*/(() => {\n  let TuiLetDirective = class TuiLetDirective {\n    constructor(viewContainer, templateRef) {\n      viewContainer.createEmbeddedView(templateRef, new TuiLetContext(this));\n    }\n    /**\n     * Asserts the correct type of the context for the template that `TuiLet` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `TuiLet` structural directive renders its template with a specific context type.\n     */\n\n\n    static ngTemplateContextGuard(_dir, _ctx) {\n      return true;\n    }\n\n  };\n\n  TuiLetDirective.ɵfac = function TuiLetDirective_Factory(t) {\n    return new (t || TuiLetDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n  };\n\n  TuiLetDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiLetDirective,\n    selectors: [[\"\", \"tuiLet\", \"\"]],\n    inputs: {\n      tuiLet: \"tuiLet\"\n    }\n  });\n\n  __decorate([Input()], TuiLetDirective.prototype, \"tuiLet\", void 0);\n\n  TuiLetDirective = __decorate([__param(0, Inject(ViewContainerRef)), __param(1, Inject(TemplateRef))], TuiLetDirective);\n  return TuiLetDirective;\n})();\nlet TuiLetModule = /*#__PURE__*/(() => {\n  let TuiLetModule = class TuiLetModule {};\n\n  TuiLetModule.ɵfac = function TuiLetModule_Factory(t) {\n    return new (t || TuiLetModule)();\n  };\n\n  TuiLetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiLetModule\n  });\n  TuiLetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiLetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiLetModule, {\n    declarations: [TuiLetDirective],\n    exports: [TuiLetDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiLetContext, TuiLetDirective, TuiLetModule }; //# sourceMappingURL=taiga-ui-cdk-directives-let.js.map","map":null,"metadata":{},"sourceType":"module"}