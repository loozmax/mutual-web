{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Optional, Inject, Self, Input, Output, Directive, NgModule } from '@angular/core';\nimport { tuiRequiredSetter } from '@taiga-ui/cdk/decorators';\nimport { TuiActiveZoneDirective } from '@taiga-ui/cdk/directives/active-zone';\nimport { TuiObscuredService, TuiParentsScrollService, TuiDestroyService } from '@taiga-ui/cdk/services';\nimport { Subject, EMPTY } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n/**\n * Directive that monitors element visibility\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/cdk/directives/active-zone';\nimport * as ɵngcc2 from '@taiga-ui/cdk/services';\nlet TuiObscuredDirective = /*#__PURE__*/(() => {\n  let TuiObscuredDirective = class TuiObscuredDirective {\n    constructor(activeZone, obscured$) {\n      this.enabled$ = new Subject();\n      const mapped$ = obscured$.pipe(map(obscuredBy => !!obscuredBy && (!activeZone || !obscuredBy.length || obscuredBy.every(element => !activeZone.contains(element)))));\n      this.tuiObscured = this.enabled$.pipe(switchMap(enabled => enabled ? mapped$ : EMPTY));\n    }\n\n    set tuiObscuredEnabled(enabled) {\n      this.enabled$.next(enabled);\n    }\n\n  };\n\n  TuiObscuredDirective.ɵfac = function TuiObscuredDirective_Factory(t) {\n    return new (t || TuiObscuredDirective)(ɵngcc0.ɵɵdirectiveInject(TuiActiveZoneDirective, 8), ɵngcc0.ɵɵdirectiveInject(TuiObscuredService, 2));\n  };\n\n  TuiObscuredDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiObscuredDirective,\n    selectors: [[\"\", \"tuiObscured\", \"\"]],\n    inputs: {\n      tuiObscuredEnabled: \"tuiObscuredEnabled\"\n    },\n    outputs: {\n      tuiObscured: \"tuiObscured\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TuiObscuredService, TuiParentsScrollService, TuiDestroyService])]\n  });\n\n  __decorate([Input(), tuiRequiredSetter()], TuiObscuredDirective.prototype, \"tuiObscuredEnabled\", null);\n\n  __decorate([Output()], TuiObscuredDirective.prototype, \"tuiObscured\", void 0);\n\n  TuiObscuredDirective = __decorate([__param(0, Optional()), __param(0, Inject(TuiActiveZoneDirective)), __param(1, Self()), __param(1, Inject(TuiObscuredService))], TuiObscuredDirective);\n  return TuiObscuredDirective;\n})();\nlet TuiObscuredModule = /*#__PURE__*/(() => {\n  let TuiObscuredModule = class TuiObscuredModule {};\n\n  TuiObscuredModule.ɵfac = function TuiObscuredModule_Factory(t) {\n    return new (t || TuiObscuredModule)();\n  };\n\n  TuiObscuredModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiObscuredModule\n  });\n  TuiObscuredModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiObscuredModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiObscuredModule, {\n    declarations: [TuiObscuredDirective],\n    exports: [TuiObscuredDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiObscuredDirective, TuiObscuredModule }; //# sourceMappingURL=taiga-ui-cdk-directives-obscured.js.map","map":null,"metadata":{},"sourceType":"module"}