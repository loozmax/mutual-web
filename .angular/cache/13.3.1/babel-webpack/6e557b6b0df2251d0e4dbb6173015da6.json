{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { forwardRef, Optional, Self, Inject, ChangeDetectorRef, ViewChild, Input, ContentChild, TemplateRef, Component, ChangeDetectionStrategy, Directive, NgModule } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { TUI_FOCUSABLE_ITEM_ACCESSOR, AbstractTuiControl, isNativeFocused, setNativeFocused, tuiDefaultProp, TuiActiveZoneModule } from '@taiga-ui/cdk';\nimport { TUI_DATA_LIST_HOST, TuiHostedDropdownComponent, TuiPrimitiveTextfieldComponent, TuiDataListDirective, TuiAbstractTextfieldHost, TUI_TEXTFIELD_HOST, TuiPrimitiveTextfieldModule, TuiHostedDropdownModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_VALUE_ACCESSOR_PROVIDER, FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nimport * as ɵngcc3 from '@angular/forms';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nconst TUI_INPUT_PROVIDERS = [TUI_VALUE_ACCESSOR_PROVIDER, FIXED_DROPDOWN_CONTROLLER_PROVIDER, {\n  provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n  useExisting: forwardRef(() => TuiInputComponent)\n}, {\n  provide: AbstractTuiControl,\n  useExisting: forwardRef(() => TuiInputComponent)\n}, {\n  provide: TUI_DATA_LIST_HOST,\n  useExisting: forwardRef(() => TuiInputComponent)\n}];\nlet TuiInputComponent = /*#__PURE__*/(() => {\n  let TuiInputComponent = class TuiInputComponent extends AbstractTuiControl {\n    constructor(control, changeDetectorRef) {\n      super(control, changeDetectorRef);\n      this.icon = null;\n      this.iconAlign = 'left';\n      this.datalist = '';\n      this.open = false;\n    }\n\n    get nativeFocusableElement() {\n      return this.computedDisabled || !this.textfield ? null : this.textfield.nativeFocusableElement;\n    }\n\n    get focused() {\n      return isNativeFocused(this.nativeFocusableElement) || !!this.hostedDropdown && this.hostedDropdown.focused;\n    }\n\n    get canOpen() {\n      return this.interactive && !!this.datalist;\n    }\n\n    onValueChange(value) {\n      this.updateValue(value);\n      this.open = true;\n    }\n\n    onHovered(hovered) {\n      this.updateHovered(hovered);\n    }\n\n    onActiveZone(active) {\n      this.updateFocused(active);\n    }\n\n    handleOption(item) {\n      this.setNativeValue(String(item));\n      this.focusInput();\n      this.updateValue(String(item));\n      this.open = false;\n    }\n\n    getFallbackValue() {\n      return '';\n    }\n\n    focusInput(preventScroll = false) {\n      if (this.nativeFocusableElement) {\n        setNativeFocused(this.nativeFocusableElement, true, preventScroll);\n      }\n    }\n\n    setNativeValue(value) {\n      if (this.nativeFocusableElement) {\n        this.nativeFocusableElement.value = value;\n      }\n    }\n\n  };\n\n  TuiInputComponent.ɵfac = function TuiInputComponent_Factory(t) {\n    return new (t || TuiInputComponent)(ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n  };\n\n  TuiInputComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiInputComponent,\n    selectors: [[\"tui-input\"]],\n    contentQueries: function TuiInputComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TuiDataListDirective, 5, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datalist = _t.first);\n      }\n    },\n    viewQuery: function TuiInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TuiHostedDropdownComponent, 5);\n        ɵngcc0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hostedDropdown = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n      }\n    },\n    inputs: {\n      icon: \"icon\",\n      iconAlign: \"iconAlign\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature(TUI_INPUT_PROVIDERS), ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 13,\n    consts: [[1, \"hosted\", 3, \"canOpen\", \"content\", \"open\", \"openChange\", \"tuiActiveZoneChange\"], [\"automation-id\", \"tui-input__textfield\", 1, \"textfield\", 3, \"pseudoFocused\", \"pseudoHovered\", \"invalid\", \"nativeId\", \"readOnly\", \"iconContent\", \"iconAlign\", \"disabled\", \"focusable\", \"value\", \"valueChange\", \"hoveredChange\"]],\n    template: function TuiInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n        ɵngcc0.ɵɵlistener(\"openChange\", function TuiInputComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n          return ctx.open = $event;\n        })(\"tuiActiveZoneChange\", function TuiInputComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n          return ctx.onActiveZone($event);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"tui-primitive-textfield\", 1);\n        ɵngcc0.ɵɵlistener(\"valueChange\", function TuiInputComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n          return ctx.onValueChange($event);\n        })(\"hoveredChange\", function TuiInputComponent_Template_tui_primitive_textfield_hoveredChange_1_listener($event) {\n          return ctx.onHovered($event);\n        });\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵprojection(3, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"canOpen\", ctx.canOpen)(\"content\", ctx.datalist || \"\")(\"open\", ctx.open);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"pseudoFocused\", ctx.computedFocused)(\"pseudoHovered\", ctx.computedHovered)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"readOnly\", ctx.readOnly)(\"iconContent\", ctx.icon)(\"iconAlign\", ctx.iconAlign)(\"disabled\", ctx.computedDisabled)(\"focusable\", ctx.computedFocusable)(\"value\", ctx.value);\n      }\n    },\n    directives: [ɵngcc1.TuiHostedDropdownComponent, ɵngcc2.TuiActiveZoneDirective, ɵngcc1.TuiPrimitiveTextfieldComponent, ɵngcc1.TuiPrimitiveTextfieldDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}._disabled[_nghost-%COMP%]{pointer-events:none}.hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ViewChild(TuiHostedDropdownComponent)], TuiInputComponent.prototype, \"hostedDropdown\", void 0);\n\n  __decorate([ViewChild(TuiPrimitiveTextfieldComponent)], TuiInputComponent.prototype, \"textfield\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiInputComponent.prototype, \"icon\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiInputComponent.prototype, \"iconAlign\", void 0);\n\n  __decorate([ContentChild(TuiDataListDirective, {\n    read: TemplateRef\n  })], TuiInputComponent.prototype, \"datalist\", void 0);\n\n  TuiInputComponent = __decorate([__param(0, Optional()), __param(0, Self()), __param(0, Inject(NgControl)), __param(1, Inject(ChangeDetectorRef))], TuiInputComponent);\n  return TuiInputComponent;\n})();\nvar TuiInputDirective_1;\nlet TuiInputDirective = TuiInputDirective_1 = class TuiInputDirective extends TuiAbstractTextfieldHost {\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n\n};\n\nTuiInputDirective.ɵfac = /*@__PURE__*/function () {\n  let ɵTuiInputDirective_BaseFactory;\n  return function TuiInputDirective_Factory(t) {\n    return (ɵTuiInputDirective_BaseFactory || (ɵTuiInputDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TuiInputDirective)))(t || TuiInputDirective);\n  };\n}();\n\nTuiInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TuiInputDirective,\n  selectors: [[\"tui-input\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_TEXTFIELD_HOST,\n    useExisting: forwardRef(() => TuiInputDirective_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nlet TuiInputModule = /*#__PURE__*/(() => {\n  let TuiInputModule = class TuiInputModule {};\n\n  TuiInputModule.ɵfac = function TuiInputModule_Factory(t) {\n    return new (t || TuiInputModule)();\n  };\n\n  TuiInputModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiInputModule\n  });\n  TuiInputModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiActiveZoneModule, TuiPrimitiveTextfieldModule, TuiHostedDropdownModule]]\n  });\n  return TuiInputModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiInputModule, {\n    declarations: function () {\n      return [TuiInputComponent, TuiInputDirective];\n    },\n    imports: function () {\n      return [CommonModule, TuiActiveZoneModule, TuiPrimitiveTextfieldModule, TuiHostedDropdownModule];\n    },\n    exports: function () {\n      return [TuiInputComponent, TuiInputDirective, TuiTextfieldComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TUI_INPUT_PROVIDERS, TuiInputComponent, TuiInputDirective, TuiInputModule }; //# sourceMappingURL=taiga-ui-kit-components-input.js.map","map":null,"metadata":{},"sourceType":"module"}