{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { InjectionToken, ElementRef, Inject, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { TuiActiveZoneDirective, tuiDefaultProp, tuiRequiredSetter } from '@taiga-ui/cdk';\nimport { TUI_ABSTRACT_HINT_DEFAULT_OPTIONS, AbstractTuiHint } from '@taiga-ui/core/abstract';\nimport { TuiHintService } from '@taiga-ui/core/services';\n/** Default values for manual hint options */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core/services';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nconst TUI_MANUAL_HINT_DEFAULT_OPTIONS = Object.assign({}, TUI_ABSTRACT_HINT_DEFAULT_OPTIONS);\nconst TUI_MANUAL_HINT_OPTIONS = new InjectionToken('Default parameters for manual hint directive', {\n  factory: () => TUI_MANUAL_HINT_DEFAULT_OPTIONS\n});\n\nconst tuiManualHintOptionsProvider = options => ({\n  provide: TUI_MANUAL_HINT_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_MANUAL_HINT_DEFAULT_OPTIONS), options)\n});\n\nlet TuiManualHintDirective = /*#__PURE__*/(() => {\n  let TuiManualHintDirective = class TuiManualHintDirective extends AbstractTuiHint {\n    constructor(elementRef, hintService, activeZone, options) {\n      super(elementRef, hintService, activeZone, options);\n      this.options = options;\n      this.content = '';\n    }\n\n    set tuiManualHintShow(show) {\n      if (show) {\n        this.showTooltip();\n      } else {\n        this.hideTooltip();\n      }\n    }\n\n    getElementClientRect() {\n      return this.elementRef.nativeElement.getBoundingClientRect();\n    }\n\n  };\n\n  TuiManualHintDirective.ɵfac = function TuiManualHintDirective_Factory(t) {\n    return new (t || TuiManualHintDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TuiHintService), ɵngcc0.ɵɵdirectiveInject(TuiActiveZoneDirective, 8), ɵngcc0.ɵɵdirectiveInject(TUI_MANUAL_HINT_OPTIONS));\n  };\n\n  TuiManualHintDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiManualHintDirective,\n    selectors: [[\"\", \"tuiManualHint\", \"\", 5, \"ng-container\"]],\n    inputs: {\n      content: [\"tuiManualHint\", \"content\"],\n      tuiManualHintShow: \"tuiManualHintShow\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Input('tuiManualHint'), tuiDefaultProp()], TuiManualHintDirective.prototype, \"content\", void 0);\n\n  __decorate([Input(), tuiRequiredSetter()], TuiManualHintDirective.prototype, \"tuiManualHintShow\", null);\n\n  TuiManualHintDirective = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(TuiHintService)), __param(2, Optional()), __param(2, Inject(TuiActiveZoneDirective)), __param(3, Inject(TUI_MANUAL_HINT_OPTIONS))], TuiManualHintDirective);\n  return TuiManualHintDirective;\n})();\nlet TuiManualHintModule = /*#__PURE__*/(() => {\n  let TuiManualHintModule = class TuiManualHintModule {};\n\n  TuiManualHintModule.ɵfac = function TuiManualHintModule_Factory(t) {\n    return new (t || TuiManualHintModule)();\n  };\n\n  TuiManualHintModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiManualHintModule\n  });\n  TuiManualHintModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiManualHintModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiManualHintModule, {\n    declarations: [TuiManualHintDirective],\n    exports: [TuiManualHintDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TUI_MANUAL_HINT_DEFAULT_OPTIONS, TUI_MANUAL_HINT_OPTIONS, TuiManualHintDirective, TuiManualHintModule, tuiManualHintOptionsProvider }; //# sourceMappingURL=taiga-ui-core-directives-manual-hint.js.map","map":null,"metadata":{},"sourceType":"module"}