{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ElementRef, Inject, Input, Component, ChangeDetectionStrategy, NgModule, ɵɵdefineInjectable, ɵɵinject, Injectable } from '@angular/core';\nimport { isNumber, TuiDestroyService, tuiPure, tuiAssert, TuiLetModule } from '@taiga-ui/cdk';\nimport { TUI_NOTIFICATION_OPTIONS, TUI_ANIMATION_OPTIONS } from '@taiga-ui/core/tokens';\nimport { timer, fromEvent, BehaviorSubject, Observable } from 'rxjs';\nimport { takeUntil, repeatWhen } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { TuiNotificationModule } from '@taiga-ui/core/components/notification';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { tuiFadeInList, tuiSlideInRightList, tuiHeightCollapseList } from '@taiga-ui/core/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@taiga-ui/core/components/notification';\nimport * as ɵngcc3 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc4 from '@taiga-ui/cdk';\n\nfunction TuiNotificationAlertComponent_tui_notification_0_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"label\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r3.item.label)(\"context\", ctx_r3.context);\n  }\n}\n\nfunction TuiNotificationAlertComponent_tui_notification_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tui-notification\", 2);\n    ɵngcc0.ɵɵlistener(\"close\", function TuiNotificationAlertComponent_tui_notification_0_Template_tui_notification_close_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.closeNotification();\n    });\n    ɵngcc0.ɵɵtemplate(1, TuiNotificationAlertComponent_tui_notification_0_label_1_Template, 1, 2, \"label\", 3);\n    ɵngcc0.ɵɵelement(2, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"status\", ctx_r0.item.status)(\"hasIcon\", ctx_r0.item.hasIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.item.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r0.item.content)(\"context\", ctx_r0.context);\n  }\n}\n\nfunction TuiNotificationAlertComponent_ng_template_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"label\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r6.item.label)(\"context\", ctx_r6.context);\n  }\n}\n\nfunction TuiNotificationAlertComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tui-notification\", 6);\n    ɵngcc0.ɵɵtemplate(1, TuiNotificationAlertComponent_ng_template_1_label_1_Template, 1, 2, \"label\", 3);\n    ɵngcc0.ɵɵelement(2, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"status\", ctx_r2.item.status)(\"hasIcon\", ctx_r2.item.hasIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.item.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r2.item.content)(\"context\", ctx_r2.context);\n  }\n}\n\nfunction TuiNotificationsHostComponent_ng_container_0_div_1_tui_notification_alert_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-notification-alert\", 4);\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"item\", item_r4);\n  }\n}\n\nfunction TuiNotificationsHostComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, TuiNotificationsHostComponent_ng_container_0_div_1_tui_notification_alert_1_Template, 1, 1, \"tui-notification-alert\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r1 = ɵngcc0.ɵɵnextContext().tuiLet;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@tuiFadeInList\", ctx_r2.getAnimation(items_r1.length))(\"@tuiHeightCollapseList\", ctx_r2.getAnimation(items_r1.length))(\"@tuiSlideInRightList\", ctx_r2.getAnimation(items_r1.length));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", items_r1);\n  }\n}\n\nfunction TuiNotificationsHostComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TuiNotificationsHostComponent_ng_container_0_div_1_Template, 2, 4, \"div\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r1 = ctx.tuiLet;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", items_r1.length);\n  }\n}\n\nclass NotificationAlert {\n  constructor(observer, content, options) {\n    this.observer = observer;\n    this.content = content;\n    this.options = options;\n    this.status = this.options.status;\n    this.hasIcon = this.options.hasIcon;\n    this.hasCloseButton = this.options.hasCloseButton;\n    this.label = this.options.label;\n    this.autoClose = typeof this.options.autoClose === 'function' ? this.options.autoClose(this.options.status) : this.options.autoClose;\n\n    if (options && this.withData(options)) {\n      this.data = options.data;\n    }\n  }\n\n  withData(options) {\n    return 'data' in options;\n  }\n\n}\n\nlet TuiNotificationAlertComponent = /*#__PURE__*/(() => {\n  let TuiNotificationAlertComponent = class TuiNotificationAlertComponent {\n    constructor(elementRef, destroy$, options) {\n      this.elementRef = elementRef;\n      this.destroy$ = destroy$;\n      this.options = options;\n    }\n\n    ngOnInit() {\n      this.initAutoClose();\n    }\n\n    get context() {\n      return this.calculateContext(this.item);\n    }\n\n    closeNotification() {\n      this.item.observer.complete();\n    }\n\n    calculateContext({\n      status,\n      data,\n      label,\n      observer\n    }) {\n      return {\n        $implicit: status,\n        data: data,\n        label: label,\n        closeHook: () => {\n          observer.complete();\n        },\n        emitHook: data => {\n          observer.next(data);\n        },\n        emitAndCloseHook: data => {\n          observer.next(data);\n          observer.complete();\n        }\n      };\n    }\n\n    initAutoClose() {\n      if (!this.item.autoClose) {\n        return;\n      }\n\n      timer(isNumber(this.item.autoClose) ? this.item.autoClose : this.options.defaultAutoCloseTime).pipe(takeUntil(fromEvent(this.elementRef.nativeElement, 'mouseenter')), repeatWhen(() => fromEvent(this.elementRef.nativeElement, 'mouseleave')), takeUntil(this.destroy$)).subscribe(() => this.closeNotification());\n    }\n\n  };\n\n  TuiNotificationAlertComponent.ɵfac = function TuiNotificationAlertComponent_Factory(t) {\n    return new (t || TuiNotificationAlertComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TuiDestroyService), ɵngcc0.ɵɵdirectiveInject(TUI_NOTIFICATION_OPTIONS));\n  };\n\n  TuiNotificationAlertComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiNotificationAlertComponent,\n    selectors: [[\"tui-notification-alert\"]],\n    inputs: {\n      item: \"item\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TuiDestroyService])],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"status\", \"hasIcon\", \"close\", 4, \"ngIf\", \"ngIfElse\"], [\"noClose\", \"\"], [3, \"status\", \"hasIcon\", \"close\"], [\"polymorpheus-outlet\", \"\", \"automation-id\", \"tui-notification-alert__heading\", \"class\", \"heading\", 3, \"content\", \"context\", 4, \"ngIf\"], [\"polymorpheus-outlet\", \"\", \"automation-id\", \"tui-notification-alert__content\", 1, \"content\", 3, \"content\", \"context\"], [\"polymorpheus-outlet\", \"\", \"automation-id\", \"tui-notification-alert__heading\", 1, \"heading\", 3, \"content\", \"context\"], [3, \"status\", \"hasIcon\"]],\n    template: function TuiNotificationAlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiNotificationAlertComponent_tui_notification_0_Template, 3, 5, \"tui-notification\", 0);\n        ɵngcc0.ɵɵtemplate(1, TuiNotificationAlertComponent_ng_template_1_Template, 3, 5, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.item.hasCloseButton)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.TuiNotificationComponent, ɵngcc3.PolymorpheusOutletComponent],\n    styles: [\"[_nghost-%COMP%]{box-shadow:0 .5rem 1rem rgba(0,0,0,.16);display:block;border-radius:var(--tui-radius-m)}.heading[_ngcontent-%COMP%]{font:var(--tui-font-text-m);line-height:1.25rem;font-weight:700;margin:0}.content[_ngcontent-%COMP%]{color:var(--tui-text-01);word-wrap:break-word}.content[_ngcontent-%COMP%]:empty{display:none}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input()], TuiNotificationAlertComponent.prototype, \"item\", void 0);\n\n  __decorate([tuiPure], TuiNotificationAlertComponent.prototype, \"calculateContext\", null);\n\n  TuiNotificationAlertComponent = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(TuiDestroyService)), __param(2, Inject(TUI_NOTIFICATION_OPTIONS))], TuiNotificationAlertComponent);\n  return TuiNotificationAlertComponent;\n})();\nlet TuiNotificationAlertModule = /*#__PURE__*/(() => {\n  let TuiNotificationAlertModule = class TuiNotificationAlertModule {};\n\n  TuiNotificationAlertModule.ɵfac = function TuiNotificationAlertModule_Factory(t) {\n    return new (t || TuiNotificationAlertModule)();\n  };\n\n  TuiNotificationAlertModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiNotificationAlertModule\n  });\n  TuiNotificationAlertModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiNotificationModule]]\n  });\n  return TuiNotificationAlertModule;\n})();\nconst NO_HOST = 'Notifications are disabled, enable support by adding TuiNotificationsModule to your main app module';\nlet TuiNotificationsService = /*#__PURE__*/(() => {\n  let TuiNotificationsService = class TuiNotificationsService {\n    constructor(options) {\n      this.options = options;\n      /** @internal */\n\n      this.items$ = new BehaviorSubject([]);\n    }\n\n    show(content, options = {}) {\n      return new Observable(observer => {\n        tuiAssert.assert(!!this.items$.observers.length, NO_HOST);\n        const notification = new NotificationAlert(observer, content, Object.assign(Object.assign({}, this.options), options));\n        this.items$.next([...this.items$.value, notification]);\n        return () => {\n          this.items$.next(this.items$.value.filter(item => item !== notification));\n        };\n      });\n    }\n\n  };\n\n  TuiNotificationsService.ɵfac = function TuiNotificationsService_Factory(t) {\n    return new (t || TuiNotificationsService)(ɵngcc0.ɵɵinject(TUI_NOTIFICATION_OPTIONS));\n  };\n\n  TuiNotificationsService.ɵprov = ɵɵdefineInjectable({\n    factory: function TuiNotificationsService_Factory() {\n      return new TuiNotificationsService(ɵɵinject(TUI_NOTIFICATION_OPTIONS));\n    },\n    token: TuiNotificationsService,\n    providedIn: \"root\"\n  });\n  TuiNotificationsService = __decorate([__param(0, Inject(TUI_NOTIFICATION_OPTIONS))], TuiNotificationsService);\n  return TuiNotificationsService;\n})();\nlet TuiNotificationsHostComponent = /*#__PURE__*/(() => {\n  let TuiNotificationsHostComponent = class TuiNotificationsHostComponent {\n    constructor(options, service) {\n      this.options = options;\n      this.service = service;\n    }\n\n    getAnimation(value) {\n      return Object.assign({\n        value: String(value)\n      }, this.options);\n    }\n\n  };\n\n  TuiNotificationsHostComponent.ɵfac = function TuiNotificationsHostComponent_Factory(t) {\n    return new (t || TuiNotificationsHostComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_ANIMATION_OPTIONS), ɵngcc0.ɵɵdirectiveInject(TuiNotificationsService));\n  };\n\n  TuiNotificationsHostComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiNotificationsHostComponent,\n    selectors: [[\"tui-notifications-host\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"tuiLet\"], [\"class\", \"t-wrapper\", 4, \"ngIf\"], [1, \"t-wrapper\"], [\"role\", \"alert\", \"class\", \"t-alert\", 3, \"item\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"t-alert\", 3, \"item\"]],\n    template: function TuiNotificationsHostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiNotificationsHostComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"tuiLet\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.service.items$));\n      }\n    },\n    directives: [ɵngcc4.TuiLetDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, TuiNotificationAlertComponent],\n    pipes: [ɵngcc1.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:fixed;top:0;left:0;width:100%;height:0}.t-wrapper[_ngcontent-%COMP%]{width:18rem;margin-left:auto;padding:2rem 3rem 0 0;pointer-events:none}tui-root._mobile[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%], tui-root._mobile   [_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:1rem 1rem 0 0}@media screen and (min-width:80em){.t-wrapper[_ngcontent-%COMP%]{width:23rem}}.t-alert[_ngcontent-%COMP%]{pointer-events:auto}.t-alert[_ngcontent-%COMP%]:not(:first-child){margin-top:.75rem}\"],\n    data: {\n      animation: [tuiFadeInList, tuiSlideInRightList, tuiHeightCollapseList]\n    },\n    changeDetection: 0\n  });\n\n  __decorate([tuiPure], TuiNotificationsHostComponent.prototype, \"getAnimation\", null);\n\n  TuiNotificationsHostComponent = __decorate([__param(0, Inject(TUI_ANIMATION_OPTIONS)), __param(1, Inject(TuiNotificationsService))], TuiNotificationsHostComponent); // TODO: remove in ivy compilation\n\n  return TuiNotificationsHostComponent;\n})();\nconst NOTIFICATIONS_HOST = TuiNotificationsHostComponent;\nlet TuiNotificationsModule = /*#__PURE__*/(() => {\n  let TuiNotificationsModule = class TuiNotificationsModule {};\n\n  TuiNotificationsModule.ɵfac = function TuiNotificationsModule_Factory(t) {\n    return new (t || TuiNotificationsModule)();\n  };\n\n  TuiNotificationsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiNotificationsModule\n  });\n  TuiNotificationsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: TuiNotificationsHostComponent,\n      useValue: NOTIFICATIONS_HOST\n    }],\n    imports: [[CommonModule, TuiNotificationAlertModule, TuiLetModule]]\n  });\n  return TuiNotificationsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiNotificationAlertModule, {\n    declarations: function () {\n      return [TuiNotificationAlertComponent];\n    },\n    imports: function () {\n      return [CommonModule, PolymorpheusModule, TuiNotificationModule];\n    },\n    exports: function () {\n      return [TuiNotificationAlertComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiNotificationsModule, {\n    declarations: function () {\n      return [TuiNotificationsHostComponent];\n    },\n    imports: function () {\n      return [CommonModule, TuiNotificationAlertModule, TuiLetModule];\n    },\n    exports: function () {\n      return [TuiNotificationsHostComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NOTIFICATIONS_HOST, NotificationAlert, TuiNotificationAlertComponent, TuiNotificationAlertModule, TuiNotificationsHostComponent, TuiNotificationsModule, TuiNotificationsService }; //# sourceMappingURL=taiga-ui-core-modules-notifications.js.map","map":null,"metadata":{},"sourceType":"module"}