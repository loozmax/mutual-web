{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { DOCUMENT } from '@angular/common';\nimport { ElementRef, Inject, Input, Directive, NgModule } from '@angular/core';\nimport { tuiCustomEvent, TuiDestroyService, tuiRequiredSetter } from '@taiga-ui/cdk';\nimport { TUI_SCROLL_INTO_VIEW } from '@taiga-ui/core/constants';\nimport { timer, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * Directive scrolls element into view inside tui-scrollbar\n */\n// @dynamic\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nlet TuiScrollIntoViewDirective = /*#__PURE__*/(() => {\n  let TuiScrollIntoViewDirective = class TuiScrollIntoViewDirective {\n    constructor(elementRef, documentRef, destroy$) {\n      this.elementRef = elementRef;\n      this.documentRef = documentRef;\n      this.destroy$ = destroy$;\n    }\n\n    set tuiScrollIntoView(scroll) {\n      if (!scroll) {\n        return;\n      } // Timeout is necessary in order to give element render cycle to get into its final spot\n      // (for example if it is inside dropdown box which has to be positioned first)\n\n\n      timer(0).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.elementRef.nativeElement.dispatchEvent(tuiCustomEvent(TUI_SCROLL_INTO_VIEW, {\n          bubbles: true,\n          detail: this.elementRef.nativeElement\n        }, this.documentRef));\n      });\n    }\n\n  };\n\n  TuiScrollIntoViewDirective.ɵfac = function TuiScrollIntoViewDirective_Factory(t) {\n    return new (t || TuiScrollIntoViewDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(TuiDestroyService));\n  };\n\n  TuiScrollIntoViewDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiScrollIntoViewDirective,\n    selectors: [[\"\", \"tuiScrollIntoView\", \"\"]],\n    inputs: {\n      tuiScrollIntoView: \"tuiScrollIntoView\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TuiDestroyService])]\n  });\n\n  __decorate([Input(), tuiRequiredSetter()], TuiScrollIntoViewDirective.prototype, \"tuiScrollIntoView\", null);\n\n  TuiScrollIntoViewDirective = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(DOCUMENT)), __param(2, Inject(TuiDestroyService))], TuiScrollIntoViewDirective);\n  return TuiScrollIntoViewDirective;\n})();\nlet TuiScrollIntoViewModule = /*#__PURE__*/(() => {\n  let TuiScrollIntoViewModule = class TuiScrollIntoViewModule {};\n\n  TuiScrollIntoViewModule.ɵfac = function TuiScrollIntoViewModule_Factory(t) {\n    return new (t || TuiScrollIntoViewModule)();\n  };\n\n  TuiScrollIntoViewModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiScrollIntoViewModule\n  });\n  TuiScrollIntoViewModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiScrollIntoViewModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiScrollIntoViewModule, {\n    declarations: [TuiScrollIntoViewDirective],\n    exports: [TuiScrollIntoViewDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiScrollIntoViewDirective, TuiScrollIntoViewModule }; //# sourceMappingURL=taiga-ui-core-directives-scroll-into-view.js.map","map":null,"metadata":{},"sourceType":"module"}