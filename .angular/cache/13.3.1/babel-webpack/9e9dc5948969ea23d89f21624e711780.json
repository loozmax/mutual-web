{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { EventEmitter, Optional, Self, Inject, ChangeDetectorRef, ElementRef, Input, HostBinding, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiMultipleControl, TUI_DEFAULT_IDENTITY_MATCHER, ALWAYS_FALSE_HANDLER, TUI_DEFAULT_STRINGIFY, isNativeFocusedIn, tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';\nimport { CommonModule } from '@angular/common';\nimport { TuiModeModule } from '@taiga-ui/core';\nimport { TuiBadgeModule } from '@taiga-ui/kit/components/badge';\nimport { TuiCheckboxBlockModule } from '@taiga-ui/kit/components/checkbox-block';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus'; // @bad TODO: Add active zone to track focus\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@taiga-ui/kit/components/checkbox-block';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc5 from '@taiga-ui/kit/components/badge';\nimport * as ɵngcc6 from '@taiga-ui/core';\n\nfunction TuiFilterComponent_ng_container_0_tui_badge_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-badge\", 5);\n  }\n\n  if (rf & 2) {\n    const badgeValue_r3 = ctx.ngIf;\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"badge_disabled\", ctx_r2.disabledItemHandler(item_r1));\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r2.size)(\"value\", badgeValue_r3);\n  }\n}\n\nfunction TuiFilterComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"tui-checkbox-block\", 1);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function TuiFilterComponent_ng_container_0_Template_tui_checkbox_block_ngModelChange_1_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onCheckbox($event, item_r1);\n    });\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelement(3, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(4, TuiFilterComponent_ng_container_0_tui_badge_4_Template, 1, 4, \"tui-badge\", 4);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabledItemHandler(item_r1))(\"hideCheckbox\", true)(\"ngModel\", ctx_r0.isCheckboxEnabled(item_r1))(\"size\", ctx_r0.size);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r0.content)(\"context\", ctx_r0.getItemContentContext(item_r1));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.badgeHandler(item_r1));\n  }\n}\n\nlet TuiFilterComponent = /*#__PURE__*/(() => {\n  let TuiFilterComponent = class TuiFilterComponent extends AbstractTuiMultipleControl {\n    constructor(control, changeDetectorRef, elementRef) {\n      super(control, changeDetectorRef);\n      this.elementRef = elementRef;\n      this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;\n      this.items = [];\n      this.size = 'm';\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      this.toggledItem = new EventEmitter();\n\n      this.content = ({\n        $implicit\n      }) => TUI_DEFAULT_STRINGIFY($implicit);\n\n      this.badgeHandler = item => Number(item);\n    }\n\n    get focused() {\n      return isNativeFocusedIn(this.elementRef.nativeElement);\n    }\n\n    getItemContentContext($implicit) {\n      return {\n        $implicit\n      };\n    }\n\n    onCheckbox(value, item) {\n      this.toggledItem.emit(item);\n      this.updateValue(value ? [...this.value, item] : this.value.filter(arrItem => !this.identityMatcher(arrItem, item)));\n    }\n\n    isCheckboxEnabled(item) {\n      return this.value.some(arrItem => this.identityMatcher(arrItem, item));\n    }\n\n  };\n\n  TuiFilterComponent.ɵfac = function TuiFilterComponent_Factory(t) {\n    return new (t || TuiFilterComponent)(ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef));\n  };\n\n  TuiFilterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiFilterComponent,\n    selectors: [[\"tui-filter\"]],\n    hostVars: 1,\n    hostBindings: function TuiFilterComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      identityMatcher: \"identityMatcher\",\n      items: \"items\",\n      size: \"size\",\n      disabledItemHandler: \"disabledItemHandler\",\n      content: \"content\",\n      badgeHandler: \"badgeHandler\"\n    },\n    outputs: {\n      toggledItem: \"toggledItem\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"automation-id\", \"tui-filter__checkbox\", 1, \"item\", 3, \"disabled\", \"hideCheckbox\", \"ngModel\", \"size\", \"ngModelChange\"], [\"automation-id\", \"tui-filter__content\", 1, \"content\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\"], [\"automation-id\", \"tui-filter__badge\", \"tuiMode\", \"onLight\", \"class\", \"badge\", 3, \"badge_disabled\", \"size\", \"value\", 4, \"ngIf\"], [\"automation-id\", \"tui-filter__badge\", \"tuiMode\", \"onLight\", 1, \"badge\", 3, \"size\", \"value\"]],\n    template: function TuiFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiFilterComponent_ng_container_0_Template, 5, 7, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc2.TuiCheckboxBlockComponent, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc4.PolymorpheusOutletComponent, ɵngcc1.NgIf, ɵngcc5.TuiBadgeComponent, ɵngcc6.TuiModeDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;margin-bottom:-.25rem}.content[_ngcontent-%COMP%]{display:flex;align-items:center}.item[_ngcontent-%COMP%]{margin-right:.25rem;margin-bottom:.25rem}.item[_ngcontent-%COMP%]:last-child, [data-size='l'][_nghost-%COMP%]   .item[_ngcontent-%COMP%]:last-child{margin-right:0}[data-size='l'][_nghost-%COMP%]   .item[_ngcontent-%COMP%]{margin-right:.5rem;margin-bottom:.5rem}.badge[_ngcontent-%COMP%]{margin-left:.25rem}.badge_disabled[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity)}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input(), tuiDefaultProp()], TuiFilterComponent.prototype, \"identityMatcher\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiFilterComponent.prototype, \"items\", void 0);\n\n  __decorate([Input(), HostBinding('attr.data-size'), tuiDefaultProp()], TuiFilterComponent.prototype, \"size\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiFilterComponent.prototype, \"disabledItemHandler\", void 0);\n\n  __decorate([Output()], TuiFilterComponent.prototype, \"toggledItem\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiFilterComponent.prototype, \"content\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiFilterComponent.prototype, \"badgeHandler\", void 0);\n\n  __decorate([tuiPure], TuiFilterComponent.prototype, \"getItemContentContext\", null);\n\n  TuiFilterComponent = __decorate([__param(0, Optional()), __param(0, Self()), __param(0, Inject(NgControl)), __param(1, Inject(ChangeDetectorRef)), __param(2, Inject(ElementRef))], TuiFilterComponent);\n  return TuiFilterComponent;\n})();\nlet TuiFilterModule = /*#__PURE__*/(() => {\n  let TuiFilterModule = class TuiFilterModule {};\n\n  TuiFilterModule.ɵfac = function TuiFilterModule_Factory(t) {\n    return new (t || TuiFilterModule)();\n  };\n\n  TuiFilterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiFilterModule\n  });\n  TuiFilterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiCheckboxBlockModule, TuiBadgeModule, TuiModeModule]]\n  });\n  return TuiFilterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiFilterModule, {\n    declarations: function () {\n      return [TuiFilterComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, PolymorpheusModule, TuiCheckboxBlockModule, TuiBadgeModule, TuiModeModule];\n    },\n    exports: function () {\n      return [TuiFilterComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiFilterComponent, TuiFilterModule }; //# sourceMappingURL=taiga-ui-kit-components-filter.js.map","map":null,"metadata":{},"sourceType":"module"}