{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Inject, ElementRef, Component, ChangeDetectionStrategy, NgZone, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport { ANIMATION_FRAME, WINDOW } from '@ng-web-apis/common';\nimport { tuiZonefree, px, TuiDestroyService, tuiPure, TuiHoveredModule, TuiActiveZoneModule } from '@taiga-ui/cdk';\nimport { TuiPointerHintDirective } from '@taiga-ui/core/directives/pointer-hint';\nimport { TUI_ANIMATION_OPTIONS, TUI_MEDIA } from '@taiga-ui/core/tokens';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { tuiFadeIn } from '@taiga-ui/core/animations';\nimport { TuiHintDirective } from '@taiga-ui/core/directives/hint';\nimport { TuiHintService } from '@taiga-ui/core/services';\nimport { CommonModule } from '@angular/common';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nimport * as ɵngcc3 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc4 from '@taiga-ui/core/services';\nimport * as ɵngcc5 from 'rxjs';\n\nfunction TuiHintsHostComponent_tui_hint_box_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const text_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(text_r3);\n  }\n}\n\nfunction TuiHintsHostComponent_tui_hint_box_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tui-hint-box\", 1);\n    ɵngcc0.ɵɵlistener(\"tuiHoveredChange\", function TuiHintsHostComponent_tui_hint_box_0_Template_tui_hint_box_tuiHoveredChange_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const hint_r1 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onHovered($event, hint_r1);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(2, TuiHintsHostComponent_tui_hint_box_0_ng_template_2_Template, 2, 1, \"ng-template\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const hint_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@tuiFadeIn\", ctx_r0.animation)(\"hint\", hint_r1)(\"tuiActiveZoneParent\", hint_r1.activeZone);\n    ɵngcc0.ɵɵattribute(\"id\", hint_r1.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"content\", hint_r1.content);\n  }\n}\n\nconst _c0 = [\"arrow\"];\nconst _c1 = [\"hint\", \"\"];\n\nfunction TuiHintBoxComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 2, 3);\n  }\n}\n\nconst _c2 = [\"*\"];\nlet TuiHintsHostComponent = /*#__PURE__*/(() => {\n  let TuiHintsHostComponent = class TuiHintsHostComponent {\n    constructor(options, elementRef, hints$) {\n      this.options = options;\n      this.elementRef = elementRef;\n      this.hints$ = hints$;\n      this.animation = Object.assign({\n        value: ''\n      }, this.options);\n    }\n\n    get clientRect() {\n      return this.elementRef.nativeElement.getBoundingClientRect();\n    }\n\n    onHovered(hovered, directive) {\n      if (directive instanceof TuiHintDirective) {\n        directive.componentHovered$.next(hovered);\n      }\n    }\n\n  };\n\n  TuiHintsHostComponent.ɵfac = function TuiHintsHostComponent_Factory(t) {\n    return new (t || TuiHintsHostComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_ANIMATION_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TuiHintService));\n  };\n\n  TuiHintsHostComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiHintsHostComponent,\n    selectors: [[\"tui-hints-host\"]],\n    hostAttrs: [\"aria-live\", \"polite\"],\n    decls: 2,\n    vars: 3,\n    consts: [[\"role\", \"tooltip\", 3, \"hint\", \"tuiActiveZoneParent\", \"tuiHoveredChange\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tooltip\", 3, \"hint\", \"tuiActiveZoneParent\", \"tuiHoveredChange\"], [\"polymorpheus-outlet\", \"\", 3, \"content\"], [1, \"t-text\"]],\n    template: function TuiHintsHostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TuiHintsHostComponent_tui_hint_box_0_Template, 3, 5, \"tui-hint-box\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.hints$));\n      }\n    },\n    directives: function () {\n      return [ɵngcc1.NgForOf, TuiHintBoxComponent, ɵngcc2.TuiActiveZoneDirective, ɵngcc2.TuiHoveredDirective, ɵngcc3.PolymorpheusOutletComponent];\n    },\n    pipes: function () {\n      return [ɵngcc1.AsyncPipe];\n    },\n    styles: [\"[_nghost-%COMP%]{position:fixed;bottom:0;left:0;width:100%;height:0}.t-text[_ngcontent-%COMP%]{white-space:pre-wrap}\"],\n    data: {\n      animation: [tuiFadeIn]\n    },\n    changeDetection: 0\n  });\n  TuiHintsHostComponent = __decorate([__param(0, Inject(TUI_ANIMATION_OPTIONS)), __param(1, Inject(ElementRef)), __param(2, Inject(TuiHintService))], TuiHintsHostComponent);\n  return TuiHintsHostComponent;\n})();\nconst SPACE = 8;\nconst BORDER_WIDTH = 1;\nconst LEFT_PADDING = 16;\nconst TOP_PADDING = 12;\nconst ARROW_SIZE = 8;\nconst ARROW_OFFSET = 16;\nconst ARROWHEAD_OFFSET = ARROW_OFFSET + ARROW_SIZE * Math.sqrt(2) / 2;\nconst reverseDirectionsVertical = {\n  'top-left': 'bottom-left',\n  'top-right': 'bottom-right',\n  'bottom-left': 'top-left',\n  'bottom-right': 'top-right',\n  left: 'right',\n  right: 'left',\n  'top-middle': 'bottom-middle',\n  'bottom-middle': 'top-middle'\n};\nconst reverseDirectionsHorizontal = {\n  'top-left': 'top-right',\n  'top-right': 'top-left',\n  'bottom-left': 'bottom-right',\n  'bottom-right': 'bottom-left',\n  left: 'right',\n  right: 'left',\n  'top-middle': 'top-middle',\n  'bottom-middle': 'bottom-middle'\n}; // TODO: consider abstracting UI and move to CDK, split hint and overflow\n// Ambient type cannot be used without dynamic https://github.com/angular/angular/issues/23395\n// @dynamic\n\nlet TuiHintBoxComponent = /*#__PURE__*/(() => {\n  let TuiHintBoxComponent = class TuiHintBoxComponent {\n    constructor(animationFrame$, destroy$, ngZone, elementRef, windowRef, media, hintsHost) {\n      this.elementRef = elementRef;\n      this.windowRef = windowRef;\n      this.media = media;\n      this.hintsHost = hintsHost;\n      animationFrame$.pipe(tuiZonefree(ngZone), takeUntil(destroy$)).subscribe(() => this.calculatePosition());\n    }\n\n    get isUntouchable() {\n      return this.hint instanceof TuiPointerHintDirective;\n    }\n\n    get mode() {\n      return this.hint.mode;\n    }\n\n    get isMobile() {\n      return this.windowRef.innerWidth <= this.media.mobile;\n    }\n    /**\n     * Calculates wrapper position.\n     * Styles are set directly to avoid visual shake of element\n     */\n\n\n    calculatePosition() {\n      if (this.mode !== 'overflow') {\n        this.calculateCoordinates();\n      } else {\n        this.setOverflowStyles();\n      }\n    }\n\n    calculateCoordinates() {\n      if (this.isMobile) {\n        this.calculateMobileCoordinates();\n        return;\n      }\n\n      const hostRect = this.hint.getElementClientRect();\n      const portalRect = this.hintsHost.clientRect;\n      const tooltip = this.elementRef.nativeElement;\n      const {\n        style\n      } = tooltip;\n      const tooltipRect = tooltip.getBoundingClientRect();\n      const isHostLong = hostRect.width > ARROWHEAD_OFFSET * 2;\n      const directions = ['left', 'right', 'bottom-left', 'bottom-right', 'bottom-middle', 'top-left', 'top-right', 'top-middle'];\n      let top = 0;\n      let left = 0;\n      let {\n        direction\n      } = this.hint;\n      const horizontalTop = hostRect.top + hostRect.height / 2 - tooltipRect.height / 2 - portalRect.top;\n      const horizontalLeft = hostRect.left - tooltipRect.width - SPACE - portalRect.left;\n      const horizontalRight = hostRect.left + hostRect.width + SPACE - portalRect.left;\n      const verticalBottom = hostRect.bottom + SPACE - portalRect.top;\n      const verticalTop = hostRect.top - tooltipRect.height - SPACE - portalRect.top;\n      const verticalRight = isHostLong ? hostRect.left - portalRect.left : hostRect.left + hostRect.width / 2 - ARROWHEAD_OFFSET - portalRect.left;\n      const verticalLeft = isHostLong ? hostRect.left - tooltipRect.width + hostRect.width - portalRect.left : hostRect.left - tooltipRect.width + hostRect.width / 2 + ARROWHEAD_OFFSET - portalRect.left;\n      const verticalMiddle = hostRect.left - tooltipRect.width / 2 + hostRect.width / 2 - portalRect.left;\n      directions.splice(directions.indexOf(direction), 1); // eslint-disable-next-line no-constant-condition\n\n      while (true) {\n        switch (direction) {\n          case 'left':\n            top = horizontalTop;\n            left = horizontalLeft;\n            break;\n\n          case 'right':\n            top = horizontalTop;\n            left = horizontalRight;\n            break;\n\n          case 'top-right':\n            top = verticalTop;\n            left = verticalRight;\n            break;\n\n          case 'top-left':\n            top = verticalTop;\n            left = verticalLeft;\n            break;\n\n          case 'bottom-right':\n            top = verticalBottom;\n            left = verticalRight;\n            break;\n\n          case 'bottom-left':\n            top = verticalBottom;\n            left = verticalLeft;\n            break;\n\n          case 'bottom-middle':\n            top = verticalBottom;\n            left = verticalMiddle;\n            break;\n\n          case 'top-middle':\n            top = verticalTop;\n            left = verticalMiddle;\n            break;\n        }\n\n        const verticalFit = top + portalRect.top > SPACE && top + tooltipRect.height + SPACE + portalRect.top < this.windowRef.innerHeight;\n        const horizontalFit = left > SPACE && left + tooltipRect.width + SPACE + portalRect.left < portalRect.width;\n\n        if (directions.length === 0 || verticalFit && horizontalFit) {\n          break;\n        }\n\n        direction = verticalFit ? reverseDirectionsHorizontal[direction] : reverseDirectionsVertical[direction];\n        direction = directions.splice(directions.indexOf(direction), 1)[0] || direction;\n      }\n\n      style.top = px(top);\n      style.left = px(left);\n      tooltip.setAttribute('data-tui-host-direction', direction);\n    }\n\n    calculateMobileCoordinates() {\n      const hostRect = this.hint.getElementClientRect();\n      const portalRect = this.hintsHost.clientRect;\n      const tooltip = this.elementRef.nativeElement;\n      const {\n        style\n      } = tooltip;\n      const tooltipRect = tooltip.getBoundingClientRect();\n      const verticalTop = hostRect.top - tooltipRect.height - SPACE - portalRect.top;\n      const verticalBottom = hostRect.bottom + SPACE - portalRect.top;\n      const verticalTopFit = verticalTop + portalRect.top > SPACE && hostRect.top < this.windowRef.innerHeight;\n      const verticalBottomFit = hostRect.bottom > 0 && hostRect.bottom + 2 * SPACE + tooltipRect.height < this.windowRef.innerHeight;\n      const direction = this.hint.direction.includes('top') && verticalTopFit || !verticalBottomFit ? 'top' : 'bottom';\n      const attemptedLeft = portalRect.left + hostRect.left + hostRect.width / 2 - tooltipRect.width / 2;\n      const left = Math.max(attemptedLeft + tooltipRect.width + SPACE > portalRect.right ? portalRect.right - SPACE - tooltipRect.width : attemptedLeft, SPACE * 2);\n      style.left = px(left);\n      style.top = direction === 'top' ? px(verticalTop) : px(verticalBottom);\n\n      if (this.arrow) {\n        this.arrow.nativeElement.style.left = px(hostRect.left <= SPACE * 2 && hostRect.width > ARROW_OFFSET * 2 ? ARROW_OFFSET : hostRect.left + hostRect.width / 2 - left - ARROW_SIZE / 2);\n      }\n\n      tooltip.setAttribute('data-tui-host-direction', direction);\n    }\n\n    setOverflowStyles() {\n      const hostRect = this.hint.getElementClientRect();\n      const {\n        style\n      } = this.elementRef.nativeElement;\n      style.top = px(hostRect.top - window.innerHeight - TOP_PADDING - BORDER_WIDTH);\n      style.left = px(hostRect.left - LEFT_PADDING - BORDER_WIDTH);\n      style.width = px(hostRect.width + LEFT_PADDING * 2 + BORDER_WIDTH * 2);\n    }\n\n  };\n\n  TuiHintBoxComponent.ɵfac = function TuiHintBoxComponent_Factory(t) {\n    return new (t || TuiHintBoxComponent)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_FRAME), ɵngcc0.ɵɵdirectiveInject(TuiDestroyService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(WINDOW), ɵngcc0.ɵɵdirectiveInject(TUI_MEDIA), ɵngcc0.ɵɵdirectiveInject(TuiHintsHostComponent));\n  };\n\n  TuiHintBoxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiHintBoxComponent,\n    selectors: [[\"tui-hint-box\", \"hint\", \"\"]],\n    viewQuery: function TuiHintBoxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.arrow = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function TuiHintBoxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_untouchable\", ctx.isUntouchable);\n      }\n    },\n    inputs: {\n      hint: \"hint\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TuiDestroyService])],\n    attrs: _c1,\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 1,\n    consts: [[\"class\", \"t-arrow\", 4, \"ngIf\"], [\"automation-id\", \"tui-hint-box__tooltip\", 1, \"t-tooltip\"], [1, \"t-arrow\"], [\"arrow\", \"\"]],\n    template: function TuiHintBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TuiHintBoxComponent_div_0_Template, 2, 0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMobile);\n      }\n    },\n    directives: [ɵngcc1.NgIf],\n    styles: [\"[_nghost-%COMP%]{position:absolute;top:0;left:0;max-width:18rem;min-height:var(--tui-height-m);padding:.75rem 1rem;background:var(--tui-primary);border-radius:var(--tui-radius-l);color:var(--tui-primary-text);box-sizing:border-box}[_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%], [_nghost-%COMP%]:not([data-mode=overflow]):before{content:'';position:absolute;width:.5rem;height:.5rem;border-radius:.125rem;box-sizing:border-box;background-color:inherit;transform:rotate(45deg)}[data-tui-host-direction=top][_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%]{bottom:-.25rem}[data-tui-host-direction=bottom][_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%]{top:-.25rem}[data-tui-host-direction=bottom][_nghost-%COMP%]:before, [data-tui-host-direction=top][_nghost-%COMP%]:before{display:none}[data-tui-host-direction=top-left][_nghost-%COMP%]:before, [data-tui-host-direction=top-middle][_nghost-%COMP%]:before, [data-tui-host-direction=top-right][_nghost-%COMP%]:before{bottom:-.25rem}[data-tui-host-direction=bottom-left][_nghost-%COMP%]:before, [data-tui-host-direction=bottom-middle][_nghost-%COMP%]:before, [data-tui-host-direction=bottom-right][_nghost-%COMP%]:before{top:-.25rem}[data-tui-host-direction=bottom-middle][_nghost-%COMP%]:before, [data-tui-host-direction=top-middle][_nghost-%COMP%]:before{left:calc(50% - .2rem)}[data-tui-host-direction=bottom-left][_nghost-%COMP%]:before, [data-tui-host-direction=top-left][_nghost-%COMP%]:before{right:1.075rem}[data-tui-host-direction=bottom-right][_nghost-%COMP%]:before, [data-tui-host-direction=top-right][_nghost-%COMP%]:before{left:1.075rem}[data-tui-host-direction=left][_nghost-%COMP%]:before, [data-tui-host-direction=right][_nghost-%COMP%]:before{top:50%;margin-top:-.25rem}[data-tui-host-direction=left][_nghost-%COMP%]:before{right:-.25rem}[data-tui-host-direction=right][_nghost-%COMP%]:before{left:-.25rem}[data-mode=error][_nghost-%COMP%]{background-color:var(--tui-error-fill)}[data-mode=onDark][_nghost-%COMP%], [data-mode=overflow][_nghost-%COMP%]{box-shadow:0 .5rem 1rem rgba(0,0,0,.16);border:1px solid var(--tui-base-03);background-color:var(--tui-base-01);color:var(--tui-text-01)}[data-mode=onDark][_nghost-%COMP%]:before, [data-mode=overflow][_nghost-%COMP%]:before{border:1px solid var(--tui-base-03)}[data-mode=onDark][data-tui-host-direction=left][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=left][_nghost-%COMP%]:before{border-left-color:transparent;border-bottom-color:transparent}[data-mode=onDark][data-tui-host-direction=right][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=right][_nghost-%COMP%]:before{border-right-color:transparent;border-top-color:transparent}[data-mode=onDark][data-tui-host-direction=top-left][_nghost-%COMP%]:before, [data-mode=onDark][data-tui-host-direction=top-middle][_nghost-%COMP%]:before, [data-mode=onDark][data-tui-host-direction=top-right][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=top-left][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=top-middle][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=top-right][_nghost-%COMP%]:before{border-left-color:transparent;border-top-color:transparent}[data-mode=onDark][data-tui-host-direction=bottom-left][_nghost-%COMP%]:before, [data-mode=onDark][data-tui-host-direction=bottom-middle][_nghost-%COMP%]:before, [data-mode=onDark][data-tui-host-direction=bottom-right][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=bottom-left][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=bottom-middle][_nghost-%COMP%]:before, [data-mode=overflow][data-tui-host-direction=bottom-right][_nghost-%COMP%]:before{border-right-color:transparent;border-bottom-color:transparent}[data-mode=overflow][_nghost-%COMP%]{max-width:none}._untouchable[_nghost-%COMP%]{pointer-events:none}.t-tooltip[_ngcontent-%COMP%]{font:var(--tui-font-text-s);word-wrap:break-word}[data-mode=overflow][_nghost-%COMP%]   .t-tooltip[_ngcontent-%COMP%]{font:inherit}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ViewChild('arrow')], TuiHintBoxComponent.prototype, \"arrow\", void 0);\n\n  __decorate([Input()], TuiHintBoxComponent.prototype, \"hint\", void 0);\n\n  __decorate([tuiPure, HostBinding('class._untouchable')], TuiHintBoxComponent.prototype, \"isUntouchable\", null);\n\n  __decorate([HostBinding('attr.data-mode')], TuiHintBoxComponent.prototype, \"mode\", null);\n\n  TuiHintBoxComponent = __decorate([__param(0, Inject(ANIMATION_FRAME)), __param(1, Inject(TuiDestroyService)), __param(2, Inject(NgZone)), __param(3, Inject(ElementRef)), __param(4, Inject(WINDOW)), __param(5, Inject(TUI_MEDIA)), __param(6, Inject(TuiHintsHostComponent))], TuiHintBoxComponent);\n  return TuiHintBoxComponent;\n})();\nlet TuiHintBoxModule = /*#__PURE__*/(() => {\n  let TuiHintBoxModule = class TuiHintBoxModule {};\n\n  TuiHintBoxModule.ɵfac = function TuiHintBoxModule_Factory(t) {\n    return new (t || TuiHintBoxModule)();\n  };\n\n  TuiHintBoxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiHintBoxModule\n  });\n  TuiHintBoxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TuiHintBoxModule;\n})();\nlet TuiHintsHostModule = /*#__PURE__*/(() => {\n  let TuiHintsHostModule = class TuiHintsHostModule {};\n\n  TuiHintsHostModule.ɵfac = function TuiHintsHostModule_Factory(t) {\n    return new (t || TuiHintsHostModule)();\n  };\n\n  TuiHintsHostModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiHintsHostModule\n  });\n  TuiHintsHostModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiHoveredModule, TuiHintBoxModule, TuiActiveZoneModule]]\n  });\n  return TuiHintsHostModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiHintBoxModule, {\n    declarations: function () {\n      return [TuiHintBoxComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [TuiHintBoxComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiHintsHostModule, {\n    declarations: function () {\n      return [TuiHintsHostComponent];\n    },\n    imports: function () {\n      return [CommonModule, PolymorpheusModule, TuiHoveredModule, TuiHintBoxModule, TuiActiveZoneModule];\n    },\n    exports: function () {\n      return [TuiHintsHostComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiHintBoxComponent, TuiHintBoxModule, TuiHintsHostComponent, TuiHintsHostModule }; //# sourceMappingURL=taiga-ui-core-components-hints-host.js.map","map":null,"metadata":{},"sourceType":"module"}