{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Directive, ChangeDetectorRef, Inject, ViewChild, Input, ContentChild, TemplateRef, HostBinding, HostListener, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { isCurrentTarget, tuiDefaultProp, tuiRequiredSetter } from '@taiga-ui/cdk';\nimport { TUI_EXPAND_LOADED } from '@taiga-ui/core/constants';\nimport { CommonModule } from '@angular/common';\nimport { TuiLoaderModule } from '@taiga-ui/core/components/loader'; // @bad TODO Replace with PolymorpheusContent\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@taiga-ui/core/components/loader';\nconst _c0 = [\"wrapper\"];\n\nfunction TuiExpandComponent_ng_container_2_tui_loader_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TuiExpandComponent_ng_container_2_tui_loader_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tui-loader\", 4);\n    ɵngcc0.ɵɵtemplate(1, TuiExpandComponent_ng_container_2_tui_loader_2_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"overlay\", true)(\"showLoader\", ctx_r2.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.content);\n  }\n}\n\nfunction TuiExpandComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵtemplate(2, TuiExpandComponent_ng_container_2_tui_loader_2_Template, 2, 3, \"tui-loader\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.async)(\"ngIfElse\", ctx_r1.content);\n  }\n}\n\nconst _c1 = [\"*\"];\nlet TuiExpandContentDirective = /*#__PURE__*/(() => {\n  let TuiExpandContentDirective = class TuiExpandContentDirective {};\n\n  TuiExpandContentDirective.ɵfac = function TuiExpandContentDirective_Factory(t) {\n    return new (t || TuiExpandContentDirective)();\n  };\n\n  TuiExpandContentDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiExpandContentDirective,\n    selectors: [[\"\", \"tuiExpandContent\", \"\"]]\n  });\n  return TuiExpandContentDirective;\n})();\nvar State = /*#__PURE__*/(() => {\n  (function (State) {\n    State[State[\"Idle\"] = 0] = \"Idle\";\n    State[State[\"Loading\"] = 1] = \"Loading\";\n    State[State[\"Prepared\"] = 2] = \"Prepared\";\n    State[State[\"Animated\"] = 3] = \"Animated\";\n  })(State || (State = {}));\n\n  return State;\n})();\nconst LOADER_HEIGHT = 48;\nlet TuiExpandComponent = /*#__PURE__*/(() => {\n  let TuiExpandComponent = class TuiExpandComponent {\n    constructor(changeDetectorRef) {\n      this.changeDetectorRef = changeDetectorRef;\n      this.state = State.Idle;\n      this.async = false;\n      this.expanded = null;\n    }\n\n    set expandedSetter(expanded) {\n      if (this.expanded === null) {\n        this.expanded = expanded;\n        return;\n      }\n\n      if (this.state !== State.Idle) {\n        this.expanded = expanded;\n        this.state = State.Animated;\n        return;\n      }\n\n      this.expanded = expanded;\n      this.retrigger(this.async && expanded ? State.Loading : State.Animated);\n    }\n\n    get overflow() {\n      return this.state !== State.Idle;\n    }\n\n    get loading() {\n      return !!this.expanded && this.async && this.state === State.Loading;\n    }\n\n    get height() {\n      const {\n        expanded,\n        state,\n        contentWrapper\n      } = this;\n\n      if (expanded && state === State.Prepared || !expanded && state === State.Animated) {\n        return 0;\n      }\n\n      if (contentWrapper && (!expanded && state === State.Prepared || expanded && state === State.Animated)) {\n        return contentWrapper.nativeElement.offsetHeight;\n      }\n\n      if (contentWrapper && expanded && state === State.Loading) {\n        return Math.max(contentWrapper.nativeElement.offsetHeight, LOADER_HEIGHT);\n      }\n\n      return null;\n    }\n\n    get contentVisible() {\n      return this.expanded || this.state !== State.Idle;\n    }\n\n    onTransitionEnd(event) {\n      if (isCurrentTarget(event) && event.propertyName === 'opacity' && this.state === State.Animated) {\n        this.state = State.Idle;\n      }\n    }\n\n    onExpandLoaded(event) {\n      event.stopPropagation();\n\n      if (this.state === State.Loading) {\n        this.retrigger(State.Animated);\n      }\n    }\n\n    retrigger(state) {\n      this.state = State.Prepared; // We need delay to retrigger CSS height transition from the correct number\n\n      setTimeout(() => {\n        if (this.state !== State.Prepared) {\n          return;\n        }\n\n        this.state = state;\n        this.changeDetectorRef.markForCheck();\n      });\n    }\n\n  };\n\n  TuiExpandComponent.ɵfac = function TuiExpandComponent_Factory(t) {\n    return new (t || TuiExpandComponent)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n  };\n\n  TuiExpandComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiExpandComponent,\n    selectors: [[\"tui-expand\"]],\n    contentQueries: function TuiExpandComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TuiExpandContentDirective, 5, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    viewQuery: function TuiExpandComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentWrapper = _t.first);\n      }\n    },\n    hostVars: 9,\n    hostBindings: function TuiExpandComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"transitionend\", function TuiExpandComponent_transitionend_HostBindingHandler($event) {\n          return ctx.onTransitionEnd($event);\n        })(\"tui-expand-loaded\", function TuiExpandComponent_tui_expand_loaded_HostBindingHandler($event) {\n          return ctx.onExpandLoaded($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.expanded);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.height, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_expanded\", ctx.expanded)(\"_overflow\", ctx.overflow)(\"_loading\", ctx.loading);\n      }\n    },\n    inputs: {\n      async: \"async\",\n      expandedSetter: [\"expanded\", \"expandedSetter\"]\n    },\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"wrapper\"], [\"wrapper\", \"\"], [4, \"ngIf\"], [\"size\", \"l\", 3, \"overlay\", \"showLoader\", 4, \"ngIf\", \"ngIfElse\"], [\"size\", \"l\", 3, \"overlay\", \"showLoader\"], [4, \"ngTemplateOutlet\"]],\n    template: function TuiExpandComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, TuiExpandComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentVisible);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.TuiLoaderComponent, ɵngcc1.NgTemplateOutlet],\n    styles: [\"[_nghost-%COMP%]{display:block;transition-property:opacity,height,visibility;transition-duration:var(--tui-duration,300ms);opacity:0}._overflow[_nghost-%COMP%]{overflow:hidden}._expanded[_nghost-%COMP%]{opacity:1;transform:translate3d(0,0,0)}._loading[_nghost-%COMP%]{opacity:.99}.wrapper[_ngcontent-%COMP%]:after, .wrapper[_ngcontent-%COMP%]:before{content:'';display:table}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ViewChild('wrapper')], TuiExpandComponent.prototype, \"contentWrapper\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiExpandComponent.prototype, \"async\", void 0);\n\n  __decorate([Input('expanded'), tuiRequiredSetter()], TuiExpandComponent.prototype, \"expandedSetter\", null);\n\n  __decorate([ContentChild(TuiExpandContentDirective, {\n    read: TemplateRef\n  })], TuiExpandComponent.prototype, \"content\", void 0);\n\n  __decorate([HostBinding('class._expanded'), HostBinding('attr.aria-expanded')], TuiExpandComponent.prototype, \"expanded\", void 0);\n\n  __decorate([HostBinding('class._overflow')], TuiExpandComponent.prototype, \"overflow\", null);\n\n  __decorate([HostBinding('class._loading')], TuiExpandComponent.prototype, \"loading\", null);\n\n  __decorate([HostBinding('style.height.px')], TuiExpandComponent.prototype, \"height\", null);\n\n  __decorate([HostListener('transitionend', ['$event'])], TuiExpandComponent.prototype, \"onTransitionEnd\", null);\n\n  __decorate([HostListener(TUI_EXPAND_LOADED, ['$event'])], TuiExpandComponent.prototype, \"onExpandLoaded\", null);\n\n  TuiExpandComponent = __decorate([__param(0, Inject(ChangeDetectorRef))], TuiExpandComponent);\n  return TuiExpandComponent;\n})();\nlet TuiExpandModule = /*#__PURE__*/(() => {\n  let TuiExpandModule = class TuiExpandModule {};\n\n  TuiExpandModule.ɵfac = function TuiExpandModule_Factory(t) {\n    return new (t || TuiExpandModule)();\n  };\n\n  TuiExpandModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiExpandModule\n  });\n  TuiExpandModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiLoaderModule]]\n  });\n  return TuiExpandModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiExpandModule, {\n    declarations: function () {\n      return [TuiExpandComponent, TuiExpandContentDirective];\n    },\n    imports: function () {\n      return [CommonModule, TuiLoaderModule];\n    },\n    exports: function () {\n      return [TuiExpandComponent, TuiExpandContentDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiExpandComponent, TuiExpandContentDirective, TuiExpandModule }; //# sourceMappingURL=taiga-ui-core-components-expand.js.map","map":null,"metadata":{},"sourceType":"module"}