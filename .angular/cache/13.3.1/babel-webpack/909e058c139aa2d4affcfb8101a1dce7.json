{"ast":null,"code":"import { filter, Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.base.service\";\nimport * as i2 from \"@angular/router\";\nexport let CanActivateCabinet = /*#__PURE__*/(() => {\n  class CanActivateCabinet {\n    constructor(_userBaseSerice, _router) {\n      this._userBaseSerice = _userBaseSerice;\n      this._router = _router;\n    }\n\n    canActivate() {\n      return new Observable(observer => {\n        this._userBaseSerice.getUser().pipe(filter(data => data !== null)).subscribe({\n          next: user => {\n            if (user) {\n              observer.next(true);\n            } else {\n              this._router.navigate(['login', 'student']);\n            }\n          }\n        });\n      });\n    }\n\n  }\n\n  CanActivateCabinet.ɵfac = function CanActivateCabinet_Factory(t) {\n    return new (t || CanActivateCabinet)(i0.ɵɵinject(i1.UserBaseService), i0.ɵɵinject(i2.Router));\n  };\n\n  CanActivateCabinet.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CanActivateCabinet,\n    factory: CanActivateCabinet.ɵfac\n  });\n  return CanActivateCabinet;\n})();","map":null,"metadata":{},"sourceType":"module"}