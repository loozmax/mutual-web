{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { InjectionToken, Optional, Self, Inject, ChangeDetectorRef, ViewChild, Input, HostBinding, Component, ChangeDetectionStrategy, forwardRef, NgModule } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AbstractTuiControl, isNativeFocused, tuiDefaultProp, TUI_FOCUSABLE_ITEM_ACCESSOR, TuiFocusedModule, TuiFocusableModule, TuiHoveredModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule } from '@taiga-ui/cdk';\nimport { TuiModeDirective, TuiWrapperModule, TuiSvgModule, TuiLoaderModule } from '@taiga-ui/core';\nimport { CommonModule } from '@angular/common';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n/** Default values for the toggle options. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc4 from '@taiga-ui/cdk';\nimport * as ɵngcc5 from '@angular/forms';\nconst _c0 = [\"focusableElement\"];\n\nfunction TuiToggleComponent_tui_loader_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-loader\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r0.loaderSize)(\"inheritColor\", true)(\"showLoader\", ctx_r0.checked);\n  }\n}\n\nfunction TuiToggleComponent_ng_template_4_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-svg\", 9);\n  }\n\n  if (rf & 2) {\n    const icon_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", icon_r5);\n  }\n}\n\nfunction TuiToggleComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TuiToggleComponent_ng_template_4_tui_svg_0_Template, 1, 1, \"tui-svg\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showIcons && !ctx_r1.showLoader);\n  }\n}\n\nfunction TuiToggleComponent_tui_loader_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-loader\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r2.loaderSize)(\"inheritColor\", true)(\"showLoader\", !ctx_r2.checked);\n  }\n}\n\nfunction TuiToggleComponent_ng_template_8_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-svg\", 11);\n  }\n\n  if (rf & 2) {\n    const icon_r8 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", icon_r8);\n  }\n}\n\nfunction TuiToggleComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TuiToggleComponent_ng_template_8_tui_svg_0_Template, 1, 1, \"tui-svg\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.showIcons && !ctx_r3.showLoader);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst TUI_TOGGLE_DEFAULT_OPTIONS = {\n  icons: {\n    toggleOff({\n      $implicit\n    }) {\n      return $implicit === 'm' ? 'tuiIconToggleOff' : 'tuiIconToggleOffLarge';\n    },\n\n    toggleOn({\n      $implicit\n    }) {\n      return $implicit === 'm' ? 'tuiIconToggleOn' : 'tuiIconToggleOnLarge';\n    }\n\n  },\n  singleColor: false,\n  showIcons: false,\n  size: 'm'\n};\nconst TUI_TOGGLE_OPTIONS = new InjectionToken('Default parameters for toggle component', {\n  factory: () => TUI_TOGGLE_DEFAULT_OPTIONS\n});\n\nconst tuiToggleOptionsProvider = options => ({\n  provide: TUI_TOGGLE_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_TOGGLE_DEFAULT_OPTIONS), options)\n});\n\nvar TuiToggleComponent_1;\nlet TuiToggleComponent = TuiToggleComponent_1 = class TuiToggleComponent extends AbstractTuiControl {\n  constructor(control, changeDetectorRef, modeDirective, options) {\n    super(control, changeDetectorRef);\n    this.modeDirective = modeDirective;\n    this.options = options;\n    this.singleColor = this.options.singleColor;\n    this.showIcons = this.options.showIcons;\n    this.showLoader = false;\n    this.size = this.options.size;\n  }\n\n  get iconOn() {\n    return this.options.icons.toggleOn;\n  }\n\n  get iconOff() {\n    return this.options.icons.toggleOff;\n  }\n\n  get nativeFocusableElement() {\n    return this.focusableElement ? this.focusableElement.nativeElement : null;\n  }\n\n  get focused() {\n    return isNativeFocused(this.nativeFocusableElement);\n  }\n\n  get appearance() {\n    return this.singleColor || this.checked ? \"primary\"\n    /* Primary */\n    : \"secondary\"\n    /* Secondary */\n    ;\n  }\n\n  get sizeM() {\n    return this.size === 'm';\n  }\n\n  get checked() {\n    return this.value;\n  }\n\n  get loaderSize() {\n    return this.sizeM ? 'xs' : 's';\n  }\n\n  get hostMode() {\n    return this.modeDirective ? this.modeDirective.mode : null;\n  }\n\n  onChecked(checked) {\n    this.updateValue(checked);\n  }\n\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n\n  onHovered(hovered) {\n    this.updateHovered(hovered);\n  }\n\n  onPressed(pressed) {\n    this.updatePressed(pressed);\n  }\n\n  onFocusVisible(focusVisible) {\n    this.updateFocusVisible(focusVisible);\n  }\n\n  getFallbackValue() {\n    return false;\n  }\n\n};\n\nTuiToggleComponent.ɵfac = function TuiToggleComponent_Factory(t) {\n  return new (t || TuiToggleComponent)(ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TuiModeDirective, 8), ɵngcc0.ɵɵdirectiveInject(TUI_TOGGLE_OPTIONS));\n};\n\nTuiToggleComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiToggleComponent,\n  selectors: [[\"tui-toggle\"]],\n  viewQuery: function TuiToggleComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function TuiToggleComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"data-size\", ctx.size)(\"data-mode\", ctx.hostMode);\n      ɵngcc0.ɵɵclassProp(\"_checked\", ctx.checked);\n    }\n  },\n  inputs: {\n    singleColor: \"singleColor\",\n    showIcons: \"showIcons\",\n    showLoader: \"showLoader\",\n    size: \"size\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => TuiToggleComponent_1)\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 22,\n  consts: [[3, \"appearance\", \"readOnly\", \"disabled\", \"focused\", \"hovered\", \"pressed\", \"invalid\"], [1, \"toggle\"], [\"class\", \"loader\", 3, \"size\", \"inheritColor\", \"showLoader\", 4, \"ngIf\"], [\"polymorpheus-outlet\", \"\", 1, \"icon-wrapper\", 3, \"content\", \"context\"], [1, \"circle\"], [\"type\", \"checkbox\", \"role\", \"switch\", \"automation-id\", \"tui-toggle__checkbox\", 1, \"checkbox\", 3, \"id\", \"disabled\", \"tuiChecked\", \"tuiFocusable\", \"tuiCheckedChange\", \"tuiFocusedChange\", \"tuiHoveredChange\", \"tuiPressedChange\", \"tuiFocusVisibleChange\"], [\"focusableElement\", \"\"], [1, \"loader\", 3, \"size\", \"inheritColor\", \"showLoader\"], [\"automation-id\", \"tui-toggle__check-icon\", \"class\", \"icon\", 3, \"src\", 4, \"ngIf\"], [\"automation-id\", \"tui-toggle__check-icon\", 1, \"icon\", 3, \"src\"], [\"automation-id\", \"tui-toggle__cancel-icon\", \"class\", \"icon icon_off\", 3, \"src\", 4, \"ngIf\"], [\"automation-id\", \"tui-toggle__cancel-icon\", 1, \"icon\", \"icon_off\", 3, \"src\"]],\n  template: function TuiToggleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"tui-wrapper\", 0)(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, TuiToggleComponent_tui_loader_2_Template, 1, 3, \"tui-loader\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(4, TuiToggleComponent_ng_template_4_Template, 1, 1, \"ng-template\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(5, \"div\", 4);\n      ɵngcc0.ɵɵtemplate(6, TuiToggleComponent_tui_loader_6_Template, 1, 3, \"tui-loader\", 2);\n      ɵngcc0.ɵɵelementStart(7, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(8, TuiToggleComponent_ng_template_8_Template, 1, 1, \"ng-template\");\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(9, \"input\", 5, 6);\n      ɵngcc0.ɵɵlistener(\"tuiCheckedChange\", function TuiToggleComponent_Template_input_tuiCheckedChange_9_listener($event) {\n        return ctx.onChecked($event);\n      })(\"tuiFocusedChange\", function TuiToggleComponent_Template_input_tuiFocusedChange_9_listener($event) {\n        return ctx.onFocused($event);\n      })(\"tuiHoveredChange\", function TuiToggleComponent_Template_input_tuiHoveredChange_9_listener($event) {\n        return ctx.onHovered($event);\n      })(\"tuiPressedChange\", function TuiToggleComponent_Template_input_tuiPressedChange_9_listener($event) {\n        return ctx.onPressed($event);\n      })(\"tuiFocusVisibleChange\", function TuiToggleComponent_Template_input_tuiFocusVisibleChange_9_listener($event) {\n        return ctx.onFocusVisible($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"appearance\", ctx.appearance)(\"readOnly\", ctx.readOnly)(\"disabled\", ctx.computedDisabled)(\"focused\", ctx.computedFocusVisible)(\"hovered\", ctx.computedHovered)(\"pressed\", ctx.computedPressed)(\"invalid\", ctx.computedInvalid);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"content\", ctx.iconOn)(\"context\", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx.size));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"content\", ctx.iconOff)(\"context\", ɵngcc0.ɵɵpureFunction1(20, _c1, ctx.size));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"tuiChecked\", ctx.checked)(\"tuiFocusable\", ctx.focusable);\n      ɵngcc0.ɵɵattribute(\"aria-checked\", ctx.value);\n    }\n  },\n  directives: [ɵngcc1.TuiWrapperDirective, ɵngcc2.NgIf, ɵngcc1.TuiLoaderComponent, ɵngcc3.PolymorpheusOutletComponent, ɵngcc1.TuiSvgComponent, ɵngcc4.TuiCheckedDirective, ɵngcc4.TuiFocusableDirective, ɵngcc4.TuiFocusedDirective, ɵngcc4.TuiHoveredDirective, ɵngcc4.TuiPressedDirective, ɵngcc4.TuiFocusVisibleDirective],\n  styles: [\"[_nghost-%COMP%]{position:relative;display:inline-block;vertical-align:middle;overflow:hidden;border-radius:6.25rem}[data-size='m'][_nghost-%COMP%]{width:2rem;height:1rem}[data-size='l'][_nghost-%COMP%]{width:3rem;height:1.5rem}.checkbox[_ngcontent-%COMP%]{padding:0;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.checkbox[_ngcontent-%COMP%]:-webkit-autofill, .checkbox[_ngcontent-%COMP%]:-webkit-autofill:focus, .checkbox[_ngcontent-%COMP%]:-webkit-autofill:hover{border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 1000px var(--tui-autofill) inset!important}._disabled[_nghost-%COMP%]   .checkbox[_ngcontent-%COMP%]{pointer-events:none;cursor:default}.toggle[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;align-items:center;justify-content:center}[data-size='m'][_nghost-%COMP%]   .toggle[_ngcontent-%COMP%]{width:3rem;height:1rem;transform:translateX(-1rem)}[data-size='l'][_nghost-%COMP%]   .toggle[_ngcontent-%COMP%]{width:4.5rem;height:1.5rem;transform:translateX(-1.5rem)}._checked[_nghost-%COMP%]   .toggle[_ngcontent-%COMP%]{transform:translateX(0)}.circle[_ngcontent-%COMP%]{margin:.125rem 0;flex-shrink:0;border-radius:100%;background-color:var(--tui-base-01)}._disabled[_nghost-%COMP%]   .circle_light[_ngcontent-%COMP%]{opacity:.24}[data-size='m'][_nghost-%COMP%]   .circle[_ngcontent-%COMP%]{width:.75rem;height:.75rem}[data-size='l'][_nghost-%COMP%]   .circle[_ngcontent-%COMP%]{width:1rem;height:1rem}._disabled[_nghost-%COMP%]   .circle[_ngcontent-%COMP%]{background-color:var(--tui-base-01)}[_nghost-%COMP%]:not(._checked)   .loader[_ngcontent-%COMP%]{color:var(--tui-base-06)}[_nghost-%COMP%]:not(._checked)._disabled   .loader[_ngcontent-%COMP%]{color:var(--tui-base-05)}[_nghost-%COMP%]:not(._checked)[data-mode=onDark]   .loader[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[_nghost-%COMP%]:not(._checked)[data-mode=onDark]._disabled   .loader[_ngcontent-%COMP%]{color:var(--tui-clear-inverse-active)}[_nghost-%COMP%]:not(._checked)[data-mode=onLight]   .loader[_ngcontent-%COMP%]{color:var(--tui-text-03)}[_nghost-%COMP%]:not(._checked)[data-mode=onLight]._disabled   .loader[_ngcontent-%COMP%]{color:var(--tui-clear-active)}[data-size='m'][_nghost-%COMP%]   .loader[_ngcontent-%COMP%]{width:.75rem;margin:0 .2rem;transform:scale(.75)}[data-size='l'][_nghost-%COMP%]   .loader[_ngcontent-%COMP%]{width:1rem;margin:0 .25rem}.icon-wrapper[_ngcontent-%COMP%]{display:flex}.icon[_ngcontent-%COMP%]{opacity:.8}.icon_off[_ngcontent-%COMP%]{color:var(--tui-base-06)}._disabled[_nghost-%COMP%]   .icon_off[_ngcontent-%COMP%]{color:var(--tui-base-05)}[data-mode=onDark][_nghost-%COMP%]   .icon_off[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[data-mode=onDark]._disabled[_nghost-%COMP%]   .icon_off[_ngcontent-%COMP%]{color:var(--tui-clear-inverse-active)}[data-mode=onLight][_nghost-%COMP%]   .icon_off[_ngcontent-%COMP%]{color:var(--tui-text-03)}[data-mode=onLight]._disabled[_nghost-%COMP%]   .icon_off[_ngcontent-%COMP%]{color:var(--tui-clear-active)}[data-size='m'][_nghost-%COMP%]   .icon[_ngcontent-%COMP%]{width:1rem;height:1rem;transform:scale(.75)}[data-size='l'][_nghost-%COMP%]   .icon[_ngcontent-%COMP%]{margin:0 .125rem;width:1.5rem;height:1.5rem}[_nghost-%COMP%]:hover   .icon[_ngcontent-%COMP%]{opacity:1}\"],\n  changeDetection: 0\n});\n\nTuiToggleComponent.ctorParameters = () => [{\n  type: NgControl,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }, {\n    type: Inject,\n    args: [NgControl]\n  }]\n}, {\n  type: ChangeDetectorRef,\n  decorators: [{\n    type: Inject,\n    args: [ChangeDetectorRef]\n  }]\n}, {\n  type: TuiModeDirective,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [TuiModeDirective]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [TUI_TOGGLE_OPTIONS]\n  }]\n}];\n\n__decorate([ViewChild('focusableElement')], TuiToggleComponent.prototype, \"focusableElement\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiToggleComponent.prototype, \"singleColor\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiToggleComponent.prototype, \"showIcons\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiToggleComponent.prototype, \"showLoader\", void 0);\n\n__decorate([Input(), HostBinding('attr.data-size'), tuiDefaultProp()], TuiToggleComponent.prototype, \"size\", void 0);\n\n__decorate([HostBinding('class._checked')], TuiToggleComponent.prototype, \"checked\", null);\n\n__decorate([HostBinding('attr.data-mode')], TuiToggleComponent.prototype, \"hostMode\", null);\n\nTuiToggleComponent = TuiToggleComponent_1 = __decorate([__param(0, Optional()), __param(0, Self()), __param(0, Inject(NgControl)), __param(1, Inject(ChangeDetectorRef)), __param(2, Optional()), __param(2, Inject(TuiModeDirective)), __param(3, Inject(TUI_TOGGLE_OPTIONS))], TuiToggleComponent);\nlet TuiToggleModule = /*#__PURE__*/(() => {\n  let TuiToggleModule = class TuiToggleModule {};\n\n  TuiToggleModule.ɵfac = function TuiToggleModule_Factory(t) {\n    return new (t || TuiToggleModule)();\n  };\n\n  TuiToggleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiToggleModule\n  });\n  TuiToggleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiFocusedModule, TuiFocusableModule, TuiHoveredModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule, TuiWrapperModule, TuiSvgModule, TuiLoaderModule, PolymorpheusModule]]\n  });\n  return TuiToggleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiToggleModule, {\n    declarations: function () {\n      return [TuiToggleComponent];\n    },\n    imports: function () {\n      return [CommonModule, TuiFocusedModule, TuiFocusableModule, TuiHoveredModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule, TuiWrapperModule, TuiSvgModule, TuiLoaderModule, PolymorpheusModule];\n    },\n    exports: function () {\n      return [TuiToggleComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TUI_TOGGLE_DEFAULT_OPTIONS, TUI_TOGGLE_OPTIONS, TuiToggleComponent, TuiToggleModule, tuiToggleOptionsProvider }; //# sourceMappingURL=taiga-ui-kit-components-toggle.js.map","map":null,"metadata":{},"sourceType":"module"}