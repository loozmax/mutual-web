{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Optional, Inject, forwardRef, ElementRef, Self, Input, HostBinding, HostListener, Component, ChangeDetectionStrategy, ContentChildren, ViewEncapsulation, Directive, NgModule } from '@angular/core';\nimport { isNativeFocused, setNativeFocused, tuiDefaultProp, EMPTY_QUERY, itemsQueryListObservable, moveFocus, isNativeFocusedIn, setNativeMouseFocused, isPresent, tuiPure, typedFromEvent, preventDefault, getClosestKeyboardFocusable } from '@taiga-ui/cdk';\nimport { TUI_OPTION_CONTENT, TUI_DATA_LIST_HOST, TUI_NOTHING_FOUND_MESSAGE, TUI_DATA_LIST_ACCESSOR } from '@taiga-ui/core/tokens';\nimport { Observable, merge, EMPTY } from 'rxjs';\nimport { map, switchMap, take, filter, tap, shareReplay, mapTo, debounceTime } from 'rxjs/operators';\nimport { TuiDropdownDirective } from '@taiga-ui/core/directives/dropdown';\nimport { shouldCall } from '@tinkoff/ng-event-plugins';\nimport { CommonModule } from '@angular/common';\nimport { TuiSvgModule } from '@taiga-ui/core/components/svg';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc3 from '@taiga-ui/core/components/svg';\nimport * as ɵngcc4 from '@taiga-ui/core/directives/dropdown';\nimport * as ɵngcc5 from 'rxjs';\nconst _c0 = [\"tuiOption\", \"\"];\n\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction TuiOptionComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n\n    const _r1 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r0.content)(\"context\", ɵngcc0.ɵɵpureFunction1(2, _c1, _r1));\n  }\n}\n\nfunction TuiOptionComponent_ng_template_1_tui_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-svg\", 4);\n  }\n}\n\nfunction TuiOptionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n    ɵngcc0.ɵɵtemplate(1, TuiOptionComponent_ng_template_1_tui_svg_1_Template, 1, 0, \"tui-svg\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.dropdown);\n  }\n}\n\nconst _c2 = [\"*\"];\n\nfunction TuiDataListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 2);\n    ɵngcc0.ɵɵpipe(1, \"async\");\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r0.emptyContent || ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.defaultEmptyContent$));\n  }\n}\n\nfunction shouldFocus({\n  currentTarget\n}) {\n  return !isNativeFocused(currentTarget);\n} // TODO: Consider all use cases for aria roles\n\n\nlet TuiOptionComponent = /*#__PURE__*/(() => {\n  let TuiOptionComponent = class TuiOptionComponent {\n    // TODO: Fix dataList type when updated to Ivy and compilation drops metadata\n    constructor(content, dataList, elementRef, host, dropdown) {\n      this.content = content;\n      this.dataList = dataList;\n      this.elementRef = elementRef;\n      this.host = host;\n      this.dropdown = dropdown;\n      this.size = 'm';\n      this.role = 'option';\n      this.disabled = false;\n    }\n\n    get active() {\n      return !!this.dropdown && !!this.dropdown.dropdownBoxRef;\n    }\n\n    onClick() {\n      if (this.host && this.value !== undefined) {\n        this.host.handleOption(this.value);\n      }\n    } // @bad TODO: Consider aria-activedescendant for proper accessibility implementation\n\n\n    onMouseMove({\n      currentTarget\n    }) {\n      setNativeFocused(currentTarget, true, true);\n    } // Preventing focus loss upon focused option removal\n\n\n    ngOnDestroy() {\n      this.dataList.handleFocusLossIfNecessary(this.elementRef.nativeElement);\n    }\n\n  };\n\n  TuiOptionComponent.ɵfac = function TuiOptionComponent_Factory(t) {\n    return new (t || TuiOptionComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_OPTION_CONTENT, 8), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => TuiDataListComponent)), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TUI_DATA_LIST_HOST, 8), ɵngcc0.ɵɵdirectiveInject(TuiDropdownDirective, 10));\n  };\n\n  TuiOptionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiOptionComponent,\n    selectors: [[\"button\", \"tuiOption\", \"\"], [\"a\", \"tuiOption\", \"\"]],\n    hostAttrs: [\"tabIndex\", \"-1\", \"type\", \"button\"],\n    hostVars: 5,\n    hostBindings: function TuiOptionComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TuiOptionComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        })(\"mousemove.init\", function TuiOptionComponent_mousemove_init_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        })(\"mousemove.silent\", function TuiOptionComponent_mousemove_silent_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"data-size\", ctx.size)(\"role\", ctx.role);\n        ɵngcc0.ɵɵclassProp(\"_with-dropdown\", ctx.active);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      role: \"role\",\n      disabled: \"disabled\",\n      value: \"value\"\n    },\n    attrs: _c0,\n    ngContentSelectors: _c2,\n    decls: 3,\n    vars: 2,\n    consts: [[\"polymorpheus-outlet\", \"\", \"class\", \"content\", 3, \"content\", \"context\", 4, \"ngIf\", \"ngIfElse\"], [\"base\", \"\"], [\"polymorpheus-outlet\", \"\", 1, \"content\", 3, \"content\", \"context\"], [\"src\", \"tuiIconChevronRight\", \"class\", \"arrow\", 4, \"ngIf\"], [\"src\", \"tuiIconChevronRight\", 1, \"arrow\"]],\n    template: function TuiOptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TuiOptionComponent_span_0_Template, 1, 4, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, TuiOptionComponent_ng_template_1_Template, 2, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.content)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.PolymorpheusOutletComponent, ɵngcc3.TuiSvgComponent],\n    styles: [\"[_nghost-%COMP%]{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0 1rem;border:0;background:padding-box;font-size:inherit;line-height:inherit;transition-property:background;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;font:var(--tui-font-text-m);width:100%;align-items:center;justify-content:space-between;text-align:left;box-sizing:border-box;color:var(--tui-text-01);outline:0;text-decoration:none;cursor:pointer;border-top:8px solid transparent;border-bottom:8px solid transparent;margin:-.5rem 0}[_nghost-%COMP%]:disabled{opacity:var(--tui-disabled-opacity);cursor:default}._with-dropdown[_nghost-%COMP%], [_nghost-%COMP%]:focus{background-color:var(--tui-base-02)}[data-size=xs][_nghost-%COMP%]{font:var(--tui-font-text-s);min-height:3rem}[data-size='s'][_nghost-%COMP%]{min-height:3rem}[data-size='m'][_nghost-%COMP%]{min-height:3.75rem}[data-size='l'][_nghost-%COMP%]{min-height:4.5rem}.content[_ngcontent-%COMP%]{display:flex;flex:1;max-width:100%}.arrow[_ngcontent-%COMP%]{margin:0 -.5rem 0 .75rem}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input(), HostBinding('attr.data-size'), tuiDefaultProp()], TuiOptionComponent.prototype, \"size\", void 0);\n\n  __decorate([Input(), HostBinding('attr.role'), tuiDefaultProp()], TuiOptionComponent.prototype, \"role\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiOptionComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Input()], TuiOptionComponent.prototype, \"value\", void 0);\n\n  __decorate([HostBinding('class._with-dropdown')], TuiOptionComponent.prototype, \"active\", null);\n\n  __decorate([HostListener('click')], TuiOptionComponent.prototype, \"onClick\", null);\n\n  __decorate([shouldCall(shouldFocus), HostListener('mousemove.init', ['$event']), HostListener('mousemove.silent', ['$event'])], TuiOptionComponent.prototype, \"onMouseMove\", null);\n\n  TuiOptionComponent = __decorate([__param(0, Optional()), __param(0, Inject(TUI_OPTION_CONTENT)), __param(1, Inject(forwardRef(() => TuiDataListComponent))), __param(2, Inject(ElementRef)), __param(3, Optional()), __param(3, Inject(TUI_DATA_LIST_HOST)), __param(4, Optional()), __param(4, Self()), __param(4, Inject(TuiDropdownDirective))], TuiOptionComponent);\n  return TuiOptionComponent;\n})();\nvar TuiDataListComponent_1; // TODO: Consider aria-activedescendant for proper accessibility implementation\n// @dynamic\n\nlet TuiDataListComponent = TuiDataListComponent_1 = class TuiDataListComponent {\n  constructor(elementRef, defaultEmptyContent$) {\n    this.elementRef = elementRef;\n    this.defaultEmptyContent$ = defaultEmptyContent$;\n    this.options = EMPTY_QUERY;\n    this.role = 'listbox';\n    this.emptyContent = '';\n  }\n\n  get empty$() {\n    return itemsQueryListObservable(this.options).pipe(map(({\n      length\n    }) => !length));\n  }\n\n  onFocusIn(relatedTarget, currentTarget) {\n    if (!currentTarget.contains(relatedTarget) && !this.origin) {\n      this.origin = relatedTarget;\n    }\n  }\n\n  noop() {}\n\n  onKeyDownArrow(current, step) {\n    const {\n      elements\n    } = this;\n    moveFocus(elements.indexOf(current), elements, step);\n  } // TODO: Consider aria-activedescendant for proper accessibility implementation\n\n\n  handleFocusLossIfNecessary(element) {\n    if (this.origin && isNativeFocusedIn(element)) {\n      setNativeMouseFocused(this.origin, true, true);\n    }\n  }\n\n  getOptions(includeDisabled = false) {\n    return this.options.toArray().filter(({\n      disabled\n    }) => includeDisabled || !disabled).map(({\n      value\n    }) => value).filter(isPresent);\n  }\n\n  onFocus(element, top) {\n    const {\n      elements\n    } = this;\n    moveFocus(top ? -1 : elements.length, elements, top ? 1 : -1);\n    this.handleFocusLossIfNecessary(element);\n  }\n\n  get elements() {\n    return Array.from(this.elementRef.nativeElement.querySelectorAll('[tuiOption]'));\n  }\n\n};\n\nTuiDataListComponent.ɵfac = function TuiDataListComponent_Factory(t) {\n  return new (t || TuiDataListComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TUI_NOTHING_FOUND_MESSAGE));\n};\n\nTuiDataListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiDataListComponent,\n  selectors: [[\"tui-data-list\"]],\n  contentQueries: function TuiDataListComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TuiOptionComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function TuiDataListComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focusin\", function TuiDataListComponent_focusin_HostBindingHandler($event) {\n        return ctx.onFocusIn($event.relatedTarget, $event.currentTarget);\n      })(\"mousedown.prevent\", function TuiDataListComponent_mousedown_prevent_HostBindingHandler() {\n        return ctx.noop();\n      })(\"keydown.arrowDown.prevent\", function TuiDataListComponent_keydown_arrowDown_prevent_HostBindingHandler($event) {\n        return ctx.onKeyDownArrow($event.target, 1);\n      })(\"keydown.arrowUp.prevent\", function TuiDataListComponent_keydown_arrowUp_prevent_HostBindingHandler($event) {\n        return ctx.onKeyDownArrow($event.target, -1);\n      })(\"wheel.silent.passive\", function TuiDataListComponent_wheel_silent_passive_HostBindingHandler($event) {\n        return ctx.handleFocusLossIfNecessary($event.currentTarget);\n      })(\"mouseleave\", function TuiDataListComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.handleFocusLossIfNecessary($event.target);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role);\n    }\n  },\n  inputs: {\n    role: \"role\",\n    emptyContent: \"emptyContent\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_DATA_LIST_ACCESSOR,\n    useExisting: forwardRef(() => TuiDataListComponent_1)\n  }])],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 3,\n  consts: [[\"tabindex\", \"0\", 1, \"trap\", 3, \"focusin\"], [\"polymorpheus-outlet\", \"\", \"class\", \"empty\", 3, \"content\", 4, \"ngIf\"], [\"polymorpheus-outlet\", \"\", 1, \"empty\", 3, \"content\"]],\n  template: function TuiDataListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"focusin\", function TuiDataListComponent_Template_div_focusin_0_listener($event) {\n        return ctx.onFocus($event.target, true);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵtemplate(2, TuiDataListComponent_div_2_Template, 2, 3, \"div\", 1);\n      ɵngcc0.ɵɵpipe(3, \"async\");\n      ɵngcc0.ɵɵelementStart(4, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"focusin\", function TuiDataListComponent_Template_div_focusin_4_listener($event) {\n        return ctx.onFocus($event.target, false);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(3, 1, ctx.empty$));\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc2.PolymorpheusOutletComponent],\n  pipes: [ɵngcc1.AsyncPipe],\n  styles: [\"tui-data-list{display:flex;font:var(--tui-font-text-m);flex-direction:column;padding:.5rem 0;color:var(--tui-text-03)}tui-data-list:focus-within .trap{display:none}tui-data-list:focus-within [tuiOption]._with-dropdown:not(:focus){background-color:transparent}tui-data-list>.empty{margin:.75rem 1rem}tui-opt-group{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;display:flex;font:var(--tui-font-text-xs);flex-direction:column;line-height:2rem;padding:.5rem 0;margin:-.5rem 0}tui-opt-group:empty:after,tui-opt-group:empty:before{display:none}tui-opt-group:before{content:attr(data-label);padding:0 1rem;color:var(--tui-text-02)}tui-opt-group:not(:empty)~tui-opt-group:before{padding-top:1rem}tui-opt-group:not(:empty)~tui-opt-group:after{content:'';position:absolute;left:0;right:0;top:.4375rem;height:1px;background:var(--tui-base-03)}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nTuiDataListComponent.ctorParameters = () => [{\n  type: ElementRef,\n  decorators: [{\n    type: Inject,\n    args: [ElementRef]\n  }]\n}, {\n  type: Observable,\n  decorators: [{\n    type: Inject,\n    args: [TUI_NOTHING_FOUND_MESSAGE]\n  }]\n}];\n\n__decorate([ContentChildren(forwardRef(() => TuiOptionComponent), {\n  descendants: true\n})], TuiDataListComponent.prototype, \"options\", void 0);\n\n__decorate([Input(), HostBinding('attr.role'), tuiDefaultProp()], TuiDataListComponent.prototype, \"role\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiDataListComponent.prototype, \"emptyContent\", void 0);\n\n__decorate([tuiPure], TuiDataListComponent.prototype, \"empty$\", null);\n\n__decorate([HostListener('focusin', ['$event.relatedTarget', '$event.currentTarget'])], TuiDataListComponent.prototype, \"onFocusIn\", null);\n\n__decorate([HostListener('mousedown.prevent')], TuiDataListComponent.prototype, \"noop\", null);\n\n__decorate([HostListener('keydown.arrowDown.prevent', ['$event.target', '1']), HostListener('keydown.arrowUp.prevent', ['$event.target', '-1'])], TuiDataListComponent.prototype, \"onKeyDownArrow\", null);\n\n__decorate([HostListener('wheel.silent.passive', ['$event.currentTarget']), HostListener('mouseleave', ['$event.target'])], TuiDataListComponent.prototype, \"handleFocusLossIfNecessary\", null);\n\nTuiDataListComponent = TuiDataListComponent_1 = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(TUI_NOTHING_FOUND_MESSAGE))], TuiDataListComponent);\nlet TuiDataListDirective = /*#__PURE__*/(() => {\n  let TuiDataListDirective = class TuiDataListDirective {};\n\n  TuiDataListDirective.ɵfac = function TuiDataListDirective_Factory(t) {\n    return new (t || TuiDataListDirective)();\n  };\n\n  TuiDataListDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiDataListDirective,\n    selectors: [[\"ng-template\", \"tuiDataList\", \"\"]]\n  }); // TODO: Move into separate module in 3.0\n\n  return TuiDataListDirective;\n})();\nlet TuiDataListDropdownManagerDirective = /*#__PURE__*/(() => {\n  let TuiDataListDropdownManagerDirective = class TuiDataListDropdownManagerDirective {\n    constructor() {\n      this.dropdowns = EMPTY_QUERY;\n      this.elements = EMPTY_QUERY;\n    }\n\n    ngAfterViewInit() {\n      this.right$.subscribe(index => {\n        this.tryToFocus(index);\n      });\n      merge(this.immediate$, this.debounce$).pipe(switchMap(active => {\n        this.dropdowns.forEach((dropdown, index) => {\n          dropdown.open = index === active;\n        });\n        const element = this.elements.toArray()[active];\n        const dropdown = this.dropdowns.toArray()[active];\n\n        if (!element || !dropdown || !dropdown.dropdownBoxRef) {\n          return EMPTY;\n        }\n\n        const {\n          nativeElement\n        } = dropdown.dropdownBoxRef.location;\n        const mouseEnter$ = typedFromEvent(nativeElement, 'mouseenter').pipe(take(1));\n        const esc$ = merge(typedFromEvent(element.nativeElement, 'keydown'), typedFromEvent(nativeElement, 'keydown')).pipe(filter(({\n          keyCode\n        }) => keyCode === 27));\n        return merge(mouseEnter$, esc$).pipe(tap(event => {\n          if (dropdown.dropdownBoxRef) {\n            event.stopPropagation();\n          }\n\n          setNativeFocused(element.nativeElement); // TODO: iframe warning\n\n          dropdown.open = event instanceof MouseEvent;\n        }));\n      })).subscribe();\n    }\n\n    get elements$() {\n      return itemsQueryListObservable(this.elements).pipe(map(array => array.map(({\n        nativeElement\n      }) => nativeElement)), shareReplay(1));\n    }\n\n    get right$() {\n      return this.elements$.pipe(switchMap(elements => merge(...elements.map((element, index) => typedFromEvent(element, 'keydown').pipe(filter(({\n        keyCode\n      }) => keyCode === 39), preventDefault(), mapTo(index))))));\n    }\n\n    get immediate$() {\n      return this.elements$.pipe(switchMap(elements => merge(...elements.map((element, index) => typedFromEvent(element, 'click').pipe(mapTo(index))))));\n    }\n\n    get debounce$() {\n      return this.elements$.pipe(switchMap(elements => merge(...elements.map((element, index) => merge(typedFromEvent(element, 'focus'), typedFromEvent(element, 'blur')).pipe(filter(({\n        relatedTarget\n      }) => this.notInDropdown(relatedTarget, index)), map(({\n        type\n      }) => type === 'focus' ? index : NaN))))), debounceTime(300));\n    }\n\n    notInDropdown(element, index) {\n      const dropdown = this.dropdowns.toArray()[index];\n      return !dropdown || !dropdown.dropdownBoxRef || !dropdown.dropdownBoxRef.location.nativeElement.contains(element);\n    }\n\n    tryToFocus(index) {\n      const dropdown = this.dropdowns.toArray()[index];\n      const content = dropdown && dropdown.dropdownBoxRef && dropdown.dropdownBoxRef.instance.contentElementRef;\n\n      if (!content) {\n        return;\n      }\n\n      const item = getClosestKeyboardFocusable(content.nativeElement, false, content.nativeElement);\n\n      if (item) {\n        setNativeFocused(item);\n      }\n    }\n\n  };\n\n  TuiDataListDropdownManagerDirective.ɵfac = function TuiDataListDropdownManagerDirective_Factory(t) {\n    return new (t || TuiDataListDropdownManagerDirective)();\n  };\n\n  TuiDataListDropdownManagerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiDataListDropdownManagerDirective,\n    selectors: [[\"tui-data-list\", \"tuiDataListDropdownManager\", \"\"]],\n    contentQueries: function TuiDataListDropdownManagerDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TuiDropdownDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TuiDropdownDirective, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdowns = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.elements = _t);\n      }\n    }\n  });\n\n  __decorate([ContentChildren(TuiDropdownDirective, {\n    descendants: true\n  })], TuiDataListDropdownManagerDirective.prototype, \"dropdowns\", void 0);\n\n  __decorate([ContentChildren(TuiDropdownDirective, {\n    read: ElementRef,\n    descendants: true\n  })], TuiDataListDropdownManagerDirective.prototype, \"elements\", void 0);\n\n  __decorate([tuiPure], TuiDataListDropdownManagerDirective.prototype, \"elements$\", null);\n\n  __decorate([tuiPure], TuiDataListDropdownManagerDirective.prototype, \"right$\", null);\n\n  __decorate([tuiPure], TuiDataListDropdownManagerDirective.prototype, \"immediate$\", null);\n\n  __decorate([tuiPure], TuiDataListDropdownManagerDirective.prototype, \"debounce$\", null);\n\n  return TuiDataListDropdownManagerDirective;\n})();\nlet TuiOptGroupDirective = /*#__PURE__*/(() => {\n  let TuiOptGroupDirective = class TuiOptGroupDirective {\n    constructor() {\n      this.label = '';\n    }\n\n  };\n\n  TuiOptGroupDirective.ɵfac = function TuiOptGroupDirective_Factory(t) {\n    return new (t || TuiOptGroupDirective)();\n  };\n\n  TuiOptGroupDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiOptGroupDirective,\n    selectors: [[\"tui-opt-group\"]],\n    hostAttrs: [\"role\", \"group\"],\n    hostVars: 1,\n    hostBindings: function TuiOptGroupDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-label\", ctx.label);\n      }\n    },\n    inputs: {\n      label: \"label\"\n    }\n  });\n\n  __decorate([Input(), HostBinding('attr.data-label'), tuiDefaultProp()], TuiOptGroupDirective.prototype, \"label\", void 0);\n\n  return TuiOptGroupDirective;\n})();\nlet TuiDataListModule = /*#__PURE__*/(() => {\n  let TuiDataListModule = class TuiDataListModule {};\n\n  TuiDataListModule.ɵfac = function TuiDataListModule_Factory(t) {\n    return new (t || TuiDataListModule)();\n  };\n\n  TuiDataListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiDataListModule\n  });\n  TuiDataListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiSvgModule, PolymorpheusModule]]\n  });\n  return TuiDataListModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiDataListModule, {\n    declarations: function () {\n      return [TuiDataListComponent, TuiOptionComponent, TuiOptGroupDirective, TuiDataListDirective, TuiDataListDropdownManagerDirective];\n    },\n    imports: function () {\n      return [CommonModule, TuiSvgModule, PolymorpheusModule];\n    },\n    exports: function () {\n      return [TuiDataListComponent, TuiOptionComponent, TuiOptGroupDirective, TuiDataListDirective, TuiDataListDropdownManagerDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiDataListComponent, TuiDataListDirective, TuiDataListDropdownManagerDirective, TuiDataListModule, TuiOptGroupDirective, TuiOptionComponent, shouldFocus }; //# sourceMappingURL=taiga-ui-core-components-data-list.js.map","map":null,"metadata":{},"sourceType":"module"}