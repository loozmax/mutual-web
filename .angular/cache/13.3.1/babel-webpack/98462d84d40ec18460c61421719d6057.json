{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ChangeDetectorRef, Inject, Injectable, ElementRef, Input, HostBinding, HostListener, Directive, NgModule } from '@angular/core';\nimport { IntersectionObserverService } from '@ng-web-apis/intersection-observer';\nimport { watch, TuiDestroyService } from '@taiga-ui/cdk';\nimport { Observable, of, Subject } from 'rxjs';\nimport { switchMap, filter, mapTo, catchError, take, takeUntil } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nlet TuiLazyLoadingService = /*#__PURE__*/(() => {\n  let TuiLazyLoadingService = class TuiLazyLoadingService extends Observable {\n    constructor(changeDetectorRef, destroy$, intersections$) {\n      super(subscriber => this.src$.pipe(switchMap(src => intersections$.pipe(filter(([{\n        isIntersecting\n      }]) => isIntersecting), mapTo(src), catchError(() => of(src)), watch(changeDetectorRef), take(1))), takeUntil(destroy$)).subscribe(subscriber));\n      this.src$ = new Subject();\n    }\n\n    next(src) {\n      this.src$.next(src);\n    }\n\n  };\n\n  TuiLazyLoadingService.ɵfac = function TuiLazyLoadingService_Factory(t) {\n    return new (t || TuiLazyLoadingService)(ɵngcc0.ɵɵinject(ChangeDetectorRef), ɵngcc0.ɵɵinject(TuiDestroyService), ɵngcc0.ɵɵinject(IntersectionObserverService));\n  };\n\n  TuiLazyLoadingService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: TuiLazyLoadingService,\n    factory: function (t) {\n      return TuiLazyLoadingService.ɵfac(t);\n    }\n  });\n  TuiLazyLoadingService = __decorate([__param(0, Inject(ChangeDetectorRef)), __param(1, Inject(TuiDestroyService)), __param(2, Inject(IntersectionObserverService))], TuiLazyLoadingService);\n  return TuiLazyLoadingService;\n})();\nlet TuiLazyLoadingDirective = /*#__PURE__*/(() => {\n  let TuiLazyLoadingDirective = class TuiLazyLoadingDirective {\n    constructor(src$, elementRef) {\n      this.src$ = src$;\n      this.elementRef = elementRef;\n      this.animation = 'tuiSkeletonVibe ease-in-out 1s infinite alternate';\n      this.background = 'rgba(0, 0, 0, .16)';\n      this.src = null;\n\n      if (!this.supported) {\n        this.src$.subscribe(src => {\n          this.src = src;\n        });\n      }\n    }\n\n    set srcSetter(src) {\n      this.src = this.supported ? src : null;\n      this.src$.next(src);\n    }\n\n    get supported() {\n      return 'loading' in this.elementRef.nativeElement;\n    }\n\n    onLoad() {\n      this.background = '';\n      this.animation = '';\n    }\n\n  };\n\n  TuiLazyLoadingDirective.ɵfac = function TuiLazyLoadingDirective_Factory(t) {\n    return new (t || TuiLazyLoadingDirective)(ɵngcc0.ɵɵdirectiveInject(TuiLazyLoadingService), ɵngcc0.ɵɵdirectiveInject(ElementRef));\n  };\n\n  TuiLazyLoadingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiLazyLoadingDirective,\n    selectors: [[\"img\", \"loading\", \"lazy\"]],\n    hostVars: 5,\n    hostBindings: function TuiLazyLoadingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"load\", function TuiLazyLoadingDirective_load_HostBindingHandler() {\n          return ctx.onLoad();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"src\", ctx.src, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵstyleProp(\"animation\", ctx.animation)(\"background\", ctx.background);\n      }\n    },\n    inputs: {\n      srcSetter: [\"src\", \"srcSetter\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TuiLazyLoadingService, IntersectionObserverService, TuiDestroyService])]\n  });\n\n  __decorate([Input('src')], TuiLazyLoadingDirective.prototype, \"srcSetter\", null);\n\n  __decorate([HostBinding('style.animation')], TuiLazyLoadingDirective.prototype, \"animation\", void 0);\n\n  __decorate([HostBinding('style.background')], TuiLazyLoadingDirective.prototype, \"background\", void 0);\n\n  __decorate([HostBinding('attr.src')], TuiLazyLoadingDirective.prototype, \"src\", void 0);\n\n  __decorate([HostListener('load')], TuiLazyLoadingDirective.prototype, \"onLoad\", null);\n\n  TuiLazyLoadingDirective = __decorate([__param(0, Inject(TuiLazyLoadingService)), __param(1, Inject(ElementRef))], TuiLazyLoadingDirective);\n  return TuiLazyLoadingDirective;\n})();\nlet TuiLazyLoadingModule = /*#__PURE__*/(() => {\n  let TuiLazyLoadingModule = class TuiLazyLoadingModule {};\n\n  TuiLazyLoadingModule.ɵfac = function TuiLazyLoadingModule_Factory(t) {\n    return new (t || TuiLazyLoadingModule)();\n  };\n\n  TuiLazyLoadingModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiLazyLoadingModule\n  });\n  TuiLazyLoadingModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiLazyLoadingModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiLazyLoadingModule, {\n    declarations: [TuiLazyLoadingDirective],\n    exports: [TuiLazyLoadingDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiLazyLoadingDirective, TuiLazyLoadingModule, TuiLazyLoadingService }; //# sourceMappingURL=taiga-ui-kit-directives-lazy-loading.js.map","map":null,"metadata":{},"sourceType":"module"}