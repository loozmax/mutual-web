{"ast":null,"code":"import { tuiAssert } from '@taiga-ui/cdk/classes';\n/**\n * Pads a string with symbols in the beginning\n *\n * @param sourceString\n * @param minResultLength\n * @param padString string to pad with\n *\n * @deprecated use String.prototype.padStart in 3.0 (after Chrome 49 support is dropped)\n */\n\nfunction padStart(sourceString, minResultLength, padString = ' ') {\n  const padSize = minResultLength - sourceString.length;\n\n  if (padSize <= 0) {\n    return sourceString;\n  }\n\n  return padString.repeat(padSize / padString.length).slice(0, padSize) + sourceString;\n}\n/**\n * Adds 'px' to the number and turns it into a string\n */\n\n\nfunction px(value) {\n  tuiAssert.assert(Number.isFinite(value), 'Value must be finite number');\n  return `${value}px`;\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { padStart, px }; //# sourceMappingURL=taiga-ui-cdk-utils-format.js.map","map":null,"metadata":{},"sourceType":"module"}