{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { InjectionToken, Attribute, Directive, ElementRef, EventEmitter, Inject, Output, Injectable, NgModule } from '@angular/core';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nconst MUTATION_OBSERVER_INIT = new InjectionToken('MutationObserver config');\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} element\r\n * @param {?} attribute\r\n * @return {?}\r\n */\n\nfunction booleanAttribute(element, attribute) {\n  return element.getAttribute(attribute) !== null || undefined;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} __0\r\n * @return {?}\r\n */\n\n\nfunction mutationObserverInitFactory({\n  nativeElement\n}) {\n  /** @type {?} */\n  const attributeFilterAttr = nativeElement.getAttribute('attributeFilter');\n  /** @type {?} */\n\n  const attributeFilter = attributeFilterAttr ? attributeFilterAttr.split(',').map(attr => attr.trim()) : undefined;\n  return {\n    attributeFilter,\n    attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),\n    attributes: booleanAttribute(nativeElement, 'attributes'),\n    characterData: booleanAttribute(nativeElement, 'characterData'),\n    characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),\n    childList: booleanAttribute(nativeElement, 'childList'),\n    subtree: booleanAttribute(nativeElement, 'subtree')\n  };\n}\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nconst ɵ0 = mutationObserverInitFactory; // @dynamic\n\nlet MutationObserverDirective = /*#__PURE__*/(() => {\n  class MutationObserverDirective extends MutationObserver {\n    /**\r\n     * @param {?} __0\r\n     * @param {?} config\r\n     * @param {?} _1\r\n     * @param {?} _2\r\n     * @param {?} _3\r\n     * @param {?} _4\r\n     * @param {?} _5\r\n     * @param {?} _6\r\n     * @param {?} _7\r\n     */\n    constructor({\n      nativeElement\n    }, config, _1, _2, _3, _4, _5, _6, _7) {\n      super(records => {\n        this.waMutationObserver.emit(records);\n      });\n      this.waMutationObserver = new EventEmitter();\n      this.observe(nativeElement, config);\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    ngOnDestroy() {\n      this.disconnect();\n    }\n\n  }\n\n  MutationObserverDirective.ɵfac = function MutationObserverDirective_Factory(t) {\n    return new (t || MutationObserverDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(MUTATION_OBSERVER_INIT), ɵngcc0.ɵɵinjectAttribute('attributeFilter'), ɵngcc0.ɵɵinjectAttribute('attributeOldValue'), ɵngcc0.ɵɵinjectAttribute('attributes'), ɵngcc0.ɵɵinjectAttribute('characterData'), ɵngcc0.ɵɵinjectAttribute('characterDataOldValue'), ɵngcc0.ɵɵinjectAttribute('childList'), ɵngcc0.ɵɵinjectAttribute('subtree'));\n  };\n\n  MutationObserverDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MutationObserverDirective,\n    selectors: [[\"\", \"waMutationObserver\", \"\"]],\n    outputs: {\n      waMutationObserver: \"waMutationObserver\"\n    },\n    exportAs: [\"MutationObserver\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: MUTATION_OBSERVER_INIT,\n      deps: [ElementRef],\n      useFactory: ɵ0\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /** @nocollapse */\n\n  return MutationObserverDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n// @dynamic\n\n\nlet MutationObserverService = /*#__PURE__*/(() => {\n  class MutationObserverService extends Observable {\n    /**\r\n     * @param {?} __0\r\n     * @param {?} config\r\n     */\n    constructor({\n      nativeElement\n    }, config) {\n      super(subscriber => {\n        /** @type {?} */\n        const observer = new MutationObserver(records => {\n          subscriber.next(records);\n        });\n        observer.observe(nativeElement, config);\n        return () => {\n          observer.disconnect();\n        };\n      });\n    }\n\n  }\n\n  MutationObserverService.ɵfac = function MutationObserverService_Factory(t) {\n    return new (t || MutationObserverService)(ɵngcc0.ɵɵinject(ElementRef), ɵngcc0.ɵɵinject(MUTATION_OBSERVER_INIT));\n  };\n\n  MutationObserverService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MutationObserverService,\n    factory: MutationObserverService.ɵfac\n  });\n  /** @nocollapse */\n\n  return MutationObserverService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nlet MutationObserverModule = /*#__PURE__*/(() => {\n  class MutationObserverModule {}\n\n  MutationObserverModule.ɵfac = function MutationObserverModule_Factory(t) {\n    return new (t || MutationObserverModule)();\n  };\n\n  MutationObserverModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MutationObserverModule\n  });\n  MutationObserverModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return MutationObserverModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MutationObserverModule, {\n    declarations: [MutationObserverDirective],\n    exports: [MutationObserverDirective]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { MutationObserverDirective, MutationObserverService, MUTATION_OBSERVER_INIT, MutationObserverModule, mutationObserverInitFactory as ɵa }; //# sourceMappingURL=ng-web-apis-mutation-observer.js.map","map":null,"metadata":{},"sourceType":"module"}