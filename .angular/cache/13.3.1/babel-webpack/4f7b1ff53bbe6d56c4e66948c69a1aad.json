{"ast":null,"code":"import { TuiXmlParsingException } from '@taiga-ui/cdk';\n/**\n * @internal\n */\n\nfunction innerHTML(documentRef) {\n  const svg = documentRef.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  if (svg.innerHTML !== undefined) {\n    return;\n  }\n\n  const serializer = new XMLSerializer();\n  const parser = new DOMParser();\n  Object.defineProperty(SVGElement.prototype, 'innerHTML', {\n    get: function () {\n      const result = [];\n      let childNode = this.firstChild;\n\n      while (childNode) {\n        result.push(serializer.serializeToString(childNode));\n        childNode = childNode.nextSibling;\n      }\n\n      return result.join('');\n    },\n    set: function (text) {\n      while (this.firstChild) {\n        this.removeChild(this.firstChild);\n      }\n\n      try {\n        const svgDocElement = parser.parseFromString(text, 'image/svg+xml').documentElement;\n\n        if (this.ownerDocument) {\n          this.appendChild(this.ownerDocument.importNode(svgDocElement, true));\n        }\n      } catch (e) {\n        throw new TuiXmlParsingException();\n      }\n    }\n  });\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { innerHTML }; //# sourceMappingURL=taiga-ui-core-utils-polyfills.js.map","map":null,"metadata":{},"sourceType":"module"}