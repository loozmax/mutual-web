{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { InjectionToken, EventEmitter, Optional, Self, Inject, ChangeDetectorRef, ContentChild, ViewChild, Input, HostBinding, Output, TemplateRef, Component, ChangeDetectionStrategy, forwardRef, Pipe, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { AbstractTuiMultipleControl, EMPTY_ARRAY, isNativeFocused, setNativeFocused, tuiDefaultProp, tuiPure, TUI_FOCUSABLE_ITEM_ACCESSOR, EMPTY_QUERY, itemsQueryListObservable, getOriginalArrayFromQueryList, TUI_DEFAULT_IDENTITY_MATCHER, isPresent, tuiReplayedValueChangesFrom, EMPTY_FUNCTION, TuiPreventDefaultModule, TuiActiveZoneModule, TuiLetModule, TuiMapperPipeModule, TuiHoveredModule } from '@taiga-ui/cdk';\nimport { isFlat } from '@taiga-ui/kit/utils';\nimport { NgControl, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { TuiSvgService, TuiTextfieldController, TUI_TEXTFIELD_WATCHED_CONTROLLER, TUI_DATA_LIST_ACCESSOR, TuiHostedDropdownComponent, TuiDataListDirective, TUI_DATA_LIST_HOST, TEXTFIELD_CONTROLLER_PROVIDER, sizeBigger, TuiOptionComponent, TUI_OPTION_CONTENT, TuiSvgModule, TuiHostedDropdownModule, TuiPrimitiveCheckboxModule, TuiDataListModule } from '@taiga-ui/core';\nimport { TuiStringifiableItem } from '@taiga-ui/kit/classes';\nimport { TUI_ARROW_MODE, TuiArrowModule } from '@taiga-ui/kit/components/arrow';\nimport { TuiInputTagComponent, TuiInputTagModule } from '@taiga-ui/kit/components/input-tag';\nimport { iconBlank } from '@taiga-ui/kit/constants';\nimport { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';\nimport { CommonModule } from '@angular/common';\nimport { TuiMultiSelectOptionComponent, TuiMultiSelectOptionModule } from '@taiga-ui/kit/components/multi-select-option';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nimport * as ɵngcc3 from '@taiga-ui/kit/components/input-tag';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/common';\nimport * as ɵngcc6 from '@tinkoff/ng-polymorpheus';\n\nfunction TuiMultiSelectComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n\n    const _r0 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵclassProp(\"t-group_fullsize\", _r0.labelOutside);\n    ɵngcc0.ɵɵproperty(\"context\", ctx_r1.context)(\"content\", ctx_r1.valueContent);\n  }\n}\n\nfunction TuiMultiSelectComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"click.prevent\", function TuiMultiSelectComponent_div_8_Template_div_click_prevent_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onArrowClick();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r2.arrow);\n  }\n}\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"tuiMultiSelectGroup\", \"\"];\n\nfunction TuiMultiSelectGroupComponent_ng_container_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function TuiMultiSelectGroupComponent_ng_container_0_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const value_r1 = ɵngcc0.ɵɵnextContext().tuiLet;\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onClick(value_r1);\n    });\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵelement(2, \"tui-primitive-checkbox\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"span\", 4);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const value_r1 = ɵngcc0.ɵɵnextContext().tuiLet;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r2.size)(\"disabled\", ɵngcc0.ɵɵpipeBind1(1, 5, ctx_r2.disabled$));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r2.checkboxSize)(\"value\", value_r1);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.label);\n  }\n}\n\nfunction TuiMultiSelectGroupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TuiMultiSelectGroupComponent_ng_container_0_button_1_Template, 5, 7, \"button\", 1);\n    ɵngcc0.ɵɵpipe(2, \"async\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.label && !ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.empty$));\n  }\n}\n\nconst TUI_MULTI_SELECT_DEFAULT_OPTIONS = {\n  expandable: true,\n  valueContent: ''\n};\nconst TUI_MULTI_SELECT_OPTIONS = new InjectionToken('Default parameters for multi select component', {\n  factory: () => TUI_MULTI_SELECT_DEFAULT_OPTIONS\n});\n\nconst tuiMultiSelectOptionsProvider = options => ({\n  provide: TUI_MULTI_SELECT_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_MULTI_SELECT_DEFAULT_OPTIONS), options)\n});\n\nvar TuiMultiSelectComponent_1;\nlet TuiMultiSelectComponent = TuiMultiSelectComponent_1 = class TuiMultiSelectComponent extends AbstractTuiMultipleControl {\n  constructor(control, changeDetectorRef, svgService, arrowMode, itemsHandlers, options, controller) {\n    super(control, changeDetectorRef);\n    this.arrowMode = arrowMode;\n    this.itemsHandlers = itemsHandlers;\n    this.options = options;\n    this.controller = controller;\n    this.stringify = this.itemsHandlers.stringify;\n    this.identityMatcher = this.itemsHandlers.identityMatcher;\n    this.expandable = this.options.expandable;\n    this.search = '';\n    this.editable = true;\n    this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n    this.valueContent = this.options.valueContent;\n    this.searchChange = new EventEmitter();\n    this.datalist = '';\n    this.open = false;\n\n    this.valueMapper = (value, stringify, group) => group ? EMPTY_ARRAY : value.map(item => new TuiStringifiableItem(item, stringify));\n\n    this.disabledItemHandlerWrapper = handler => stringifiable => typeof stringifiable === 'string' || handler(stringifiable.item);\n\n    svgService.define({\n      iconBlank\n    });\n  }\n\n  get size() {\n    return this.controller.size;\n  }\n\n  get arrow() {\n    return !this.interactive ? this.arrowMode.disabled : this.arrowMode.interactive;\n  }\n\n  get nativeFocusableElement() {\n    return this.input ? this.input.nativeFocusableElement : null;\n  }\n\n  get focused() {\n    return !!this.input && this.input.focused || !!this.hostedDropdown && this.hostedDropdown.focused;\n  }\n\n  get computedValue() {\n    return this.computedGroup ? EMPTY_ARRAY : this.value;\n  } // @bad TODO: think of a better way\n\n\n  get searchOrSpace() {\n    return this.computedGroup ? ' ' : this.searchString;\n  }\n\n  get searchString() {\n    return this.search === null ? '' : this.search;\n  }\n  /**\n   * Pass empty icon to InputTag (inside this component)\n   * to prevent overflow of arrow icon by many tags\n   */\n\n\n  get tagIcon() {\n    return this.interactive ? 'iconBlank' : '';\n  }\n\n  get inputHidden() {\n    return !this.editable && !this.computedGroup;\n  }\n\n  get computedGroup() {\n    return !!this.valueContent && this.value.length > 0 && (!this.focused || !this.editable);\n  }\n\n  get context() {\n    return this.getContext(this.value);\n  }\n\n  getStringifier(stringify) {\n    return ({\n      $implicit\n    }) => stringify($implicit);\n  }\n\n  onHoveredChange(hovered) {\n    this.updateHovered(hovered);\n  }\n\n  onSpace(event) {\n    if (!this.editable) {\n      event.preventDefault();\n    }\n\n    if (!this.readOnly) {\n      this.open = true;\n    }\n  }\n\n  handleOption(option) {\n    const {\n      value,\n      identityMatcher\n    } = this;\n    const index = value.findIndex(item => identityMatcher(item, option));\n    this.updateValue(index === -1 ? [...value, option] : value.filter((_, i) => i !== index));\n    this.updateSearch(null);\n  }\n\n  onEnter(event) {\n    const {\n      value\n    } = this;\n    const options = this.accessor ? this.accessor.getOptions() : [];\n\n    if (options.length !== 1) {\n      return;\n    }\n\n    const index = value.indexOf(options[0]);\n    event.preventDefault();\n    this.updateValue(index === -1 ? [...value, options[0]] : [...value.slice(0, index), ...value.slice(index + 1)]);\n    this.updateSearch(null);\n  }\n\n  onClick({\n    nativeFocusableElement\n  }) {\n    var _a;\n\n    if (this.editable && this.interactive && nativeFocusableElement && isNativeFocused(nativeFocusableElement)) {\n      (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(!this.open);\n    }\n  }\n\n  onArrowClick() {\n    var _a;\n\n    (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(!this.open);\n    this.focusInput();\n  }\n\n  onInput(value) {\n    this.updateValue(value.map(({\n      item\n    }) => item));\n  }\n\n  onSearch(search) {\n    this.open = true;\n    this.updateSearch(search);\n  }\n\n  onActiveZone(active) {\n    this.updateFocused(active);\n  }\n\n  setDisabledState() {\n    super.setDisabledState();\n    this.open = false;\n  }\n\n  getContext($implicit) {\n    return {\n      $implicit\n    };\n  }\n\n  updateSearch(search) {\n    if (this.search === search) {\n      return;\n    }\n\n    this.search = search;\n    this.searchChange.emit(search);\n  }\n\n  focusInput(preventScroll = false) {\n    if (this.nativeFocusableElement) {\n      setNativeFocused(this.nativeFocusableElement, true, preventScroll);\n    }\n  }\n\n};\n\nTuiMultiSelectComponent.ɵfac = function TuiMultiSelectComponent_Factory(t) {\n  return new (t || TuiMultiSelectComponent)(ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TuiSvgService), ɵngcc0.ɵɵdirectiveInject(TUI_ARROW_MODE), ɵngcc0.ɵɵdirectiveInject(TUI_ITEMS_HANDLERS), ɵngcc0.ɵɵdirectiveInject(TUI_MULTI_SELECT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(TUI_TEXTFIELD_WATCHED_CONTROLLER));\n};\n\nTuiMultiSelectComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiMultiSelectComponent,\n  selectors: [[\"tui-multi-select\"]],\n  contentQueries: function TuiMultiSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TuiDataListDirective, 5, TemplateRef);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TUI_DATA_LIST_ACCESSOR, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.datalist = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accessor = _t.first);\n    }\n  },\n  viewQuery: function TuiMultiSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TuiHostedDropdownComponent, 5);\n      ɵngcc0.ɵɵviewQuery(TuiInputTagComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.hostedDropdown = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function TuiMultiSelectComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"data-size\", ctx.size);\n      ɵngcc0.ɵɵclassProp(\"_editable\", ctx.editable);\n    }\n  },\n  inputs: {\n    stringify: \"stringify\",\n    identityMatcher: \"identityMatcher\",\n    expandable: \"expandable\",\n    search: \"search\",\n    editable: \"editable\",\n    disabledItemHandler: \"disabledItemHandler\",\n    valueContent: \"valueContent\"\n  },\n  outputs: {\n    searchChange: \"searchChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => TuiMultiSelectComponent_1)\n  }, {\n    provide: TUI_DATA_LIST_HOST,\n    useExisting: forwardRef(() => TuiMultiSelectComponent_1)\n  }, FIXED_DROPDOWN_CONTROLLER_PROVIDER, TEXTFIELD_CONTROLLER_PROVIDER]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 9,\n  vars: 27,\n  consts: [[1, \"t-hosted\", 3, \"canOpen\", \"content\", \"open\", \"openChange\", \"tuiHoveredChange\", \"tuiActiveZoneChange\"], [\"tuiHostedDropdownHost\", \"\", \"automation-id\", \"tui-multi-select__input\", 1, \"input\", 3, \"nativeId\", \"icon\", \"disabled\", \"disabledItemHandler\", \"readOnly\", \"inputHidden\", \"pseudoHovered\", \"pseudoFocused\", \"pseudoInvalid\", \"editable\", \"expandable\", \"search\", \"ngModel\", \"ngModelChange\", \"searchChange\", \"keydown.space\", \"keydown.enter\", \"click.prevent\"], [\"inputTag\", \"\"], [1, \"t-wrapper\"], [\"polymorpheus-outlet\", \"\", \"class\", \"t-group\", 3, \"t-group_fullsize\", \"context\", \"content\", 4, \"ngIf\"], [\"polymorpheus-outlet\", \"\", \"automation-id\", \"tui-multi-select__arrow\", \"tuiPreventDefault\", \"mousedown\", \"class\", \"t-arrow\", 3, \"content\", \"click.prevent\", 4, \"ngIf\"], [\"polymorpheus-outlet\", \"\", 1, \"t-group\", 3, \"context\", \"content\"], [\"polymorpheus-outlet\", \"\", \"automation-id\", \"tui-multi-select__arrow\", \"tuiPreventDefault\", \"mousedown\", 1, \"t-arrow\", 3, \"content\", \"click.prevent\"]],\n  template: function TuiMultiSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n      ɵngcc0.ɵɵlistener(\"openChange\", function TuiMultiSelectComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n        return ctx.open = $event;\n      })(\"tuiHoveredChange\", function TuiMultiSelectComponent_Template_tui_hosted_dropdown_tuiHoveredChange_0_listener($event) {\n        return ctx.onHoveredChange($event);\n      })(\"tuiActiveZoneChange\", function TuiMultiSelectComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n        return ctx.onActiveZone($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"tui-input-tag\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function TuiMultiSelectComponent_Template_tui_input_tag_ngModelChange_1_listener($event) {\n        return ctx.onInput($event);\n      })(\"searchChange\", function TuiMultiSelectComponent_Template_tui_input_tag_searchChange_1_listener($event) {\n        return ctx.onSearch($event);\n      })(\"keydown.space\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_space_1_listener($event) {\n        return ctx.onSpace($event);\n      })(\"keydown.enter\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_enter_1_listener($event) {\n        return ctx.onEnter($event);\n      })(\"click.prevent\", function TuiMultiSelectComponent_Template_tui_input_tag_click_prevent_1_listener() {\n        ɵngcc0.ɵɵrestoreView(_r5);\n\n        const _r0 = ɵngcc0.ɵɵreference(2);\n\n        return ctx.onClick(_r0);\n      });\n      ɵngcc0.ɵɵpipe(3, \"tuiMapper\");\n      ɵngcc0.ɵɵpipe(4, \"tuiMapper\");\n      ɵngcc0.ɵɵprojection(5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 3);\n      ɵngcc0.ɵɵtemplate(7, TuiMultiSelectComponent_div_7_Template, 1, 4, \"div\", 4);\n      ɵngcc0.ɵɵtemplate(8, TuiMultiSelectComponent_div_8_Template, 1, 1, \"div\", 5);\n      ɵngcc0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"canOpen\", ctx.interactive)(\"content\", ctx.datalist || \"\")(\"open\", ctx.open);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nativeId\", ctx.nativeId)(\"icon\", ctx.tagIcon)(\"disabled\", ctx.disabled)(\"disabledItemHandler\", ɵngcc0.ɵɵpipeBind2(3, 20, ctx.disabledItemHandler, ctx.disabledItemHandlerWrapper))(\"readOnly\", ctx.readOnly)(\"inputHidden\", !ctx.editable)(\"pseudoHovered\", ctx.computedHovered)(\"pseudoFocused\", ctx.computedFocused)(\"pseudoInvalid\", ctx.computedInvalid)(\"editable\", false)(\"expandable\", ctx.expandable)(\"search\", ctx.searchOrSpace)(\"ngModel\", ɵngcc0.ɵɵpipeBind3(4, 23, ctx.computedValue, ctx.valueMapper, ctx.stringify));\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵclassProp(\"t-wrapper_disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.computedGroup);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.arrow);\n    }\n  },\n  directives: [ɵngcc1.TuiHostedDropdownComponent, ɵngcc2.TuiHoveredDirective, ɵngcc2.TuiActiveZoneDirective, ɵngcc3.TuiInputTagComponent, ɵngcc1.TuiHostedDropdownConnectorDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc5.NgIf, ɵngcc6.PolymorpheusOutletComponent, ɵngcc2.TuiPreventDefaultDirective],\n  pipes: [ɵngcc2.TuiMapperPipe],\n  styles: [\"[_nghost-%COMP%]{position:relative;display:block}._disabled[_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block}[_nghost-%COMP%]:not(._editable):not(._readonly)   .input[_ngcontent-%COMP%]{cursor:pointer}.t-wrapper[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;pointer-events:none;justify-content:flex-end}.t-wrapper_disabled[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity)}[data-size='s'][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%], [data-size='s']   [_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{height:var(--tui-height-s)}[data-size='m'][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%], [data-size='m']   [_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{height:var(--tui-height-m)}[data-size='l'][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%], [data-size='l']   [_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{height:var(--tui-height-l)}.t-group[_ngcontent-%COMP%]{display:flex;flex:1;align-items:center;padding:1.6875rem 1rem .5625rem}.t-group_fullsize[_ngcontent-%COMP%]{padding-top:.0625rem;padding-bottom:0}[data-size='m'][_nghost-%COMP%]   .t-group_fullsize.t-group_fullsize[_ngcontent-%COMP%]{padding-top:0}[data-size='m'][_nghost-%COMP%]   .t-group[_ngcontent-%COMP%]{padding:1.1875rem .75rem 0;font-size:.8125rem}.t-arrow[_ngcontent-%COMP%]{transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;align-items:center;justify-content:center;color:var(--tui-text-03);position:relative;box-sizing:border-box;transition-property:color,transform;width:1.5rem;height:auto;margin:0 .75rem;pointer-events:auto;cursor:pointer}.t-arrow[_ngcontent-%COMP%]:hover{color:var(--tui-text-02)}._disabled[_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%], ._readonly[_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%]{pointer-events:none}[data-mode=onDark][_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[data-mode=onDark][_nghost-%COMP%]   .t-arrow[_ngcontent-%COMP%]:hover{color:var(--tui-text-01-night)}\"],\n  changeDetection: 0\n});\n\nTuiMultiSelectComponent.ctorParameters = () => [{\n  type: NgControl,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }, {\n    type: Inject,\n    args: [NgControl]\n  }]\n}, {\n  type: ChangeDetectorRef,\n  decorators: [{\n    type: Inject,\n    args: [ChangeDetectorRef]\n  }]\n}, {\n  type: TuiSvgService,\n  decorators: [{\n    type: Inject,\n    args: [TuiSvgService]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [TUI_ARROW_MODE]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [TUI_ITEMS_HANDLERS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [TUI_MULTI_SELECT_OPTIONS]\n  }]\n}, {\n  type: TuiTextfieldController,\n  decorators: [{\n    type: Inject,\n    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]\n  }]\n}];\n\n__decorate([ContentChild(TUI_DATA_LIST_ACCESSOR)], TuiMultiSelectComponent.prototype, \"accessor\", void 0);\n\n__decorate([ViewChild(TuiHostedDropdownComponent)], TuiMultiSelectComponent.prototype, \"hostedDropdown\", void 0);\n\n__decorate([ViewChild(TuiInputTagComponent)], TuiMultiSelectComponent.prototype, \"input\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"stringify\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"identityMatcher\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"expandable\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"search\", void 0);\n\n__decorate([Input(), HostBinding('class._editable'), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"editable\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"disabledItemHandler\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiMultiSelectComponent.prototype, \"valueContent\", void 0);\n\n__decorate([Output()], TuiMultiSelectComponent.prototype, \"searchChange\", void 0);\n\n__decorate([ContentChild(TuiDataListDirective, {\n  read: TemplateRef\n})], TuiMultiSelectComponent.prototype, \"datalist\", void 0);\n\n__decorate([HostBinding('attr.data-size')], TuiMultiSelectComponent.prototype, \"size\", null);\n\n__decorate([tuiPure], TuiMultiSelectComponent.prototype, \"getStringifier\", null);\n\n__decorate([tuiPure], TuiMultiSelectComponent.prototype, \"getContext\", null);\n\nTuiMultiSelectComponent = TuiMultiSelectComponent_1 = __decorate([__param(0, Optional()), __param(0, Self()), __param(0, Inject(NgControl)), __param(1, Inject(ChangeDetectorRef)), __param(2, Inject(TuiSvgService)), __param(3, Inject(TUI_ARROW_MODE)), __param(4, Inject(TUI_ITEMS_HANDLERS)), __param(5, Inject(TUI_MULTI_SELECT_OPTIONS)), __param(6, Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER))], TuiMultiSelectComponent);\nlet TuiHideSelectedPipe = /*#__PURE__*/(() => {\n  let TuiHideSelectedPipe = class TuiHideSelectedPipe {\n    constructor(component) {\n      this.component = component;\n    }\n\n    transform(items, component) {\n      const {\n        value,\n        identityMatcher\n      } = component !== null && component !== void 0 ? component : this.component;\n\n      if (!items) {\n        return null;\n      }\n\n      return isFlat(items) ? this.filter(items, value, identityMatcher) : this.filter2d(items, value, identityMatcher);\n    }\n\n    filter2d(items, value, matcher) {\n      return items.map(subItems => this.filter(subItems, value, matcher));\n    }\n\n    filter(items, value, matcher) {\n      return items.filter(item => value.every(selected => !matcher(selected, item)));\n    }\n\n  };\n\n  TuiHideSelectedPipe.ɵfac = function TuiHideSelectedPipe_Factory(t) {\n    return new (t || TuiHideSelectedPipe)(ɵngcc0.ɵɵdirectiveInject(TuiMultiSelectComponent, 16));\n  };\n\n  TuiHideSelectedPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"tuiHideSelected\",\n    type: TuiHideSelectedPipe,\n    pure: false\n  });\n\n  __decorate([tuiPure], TuiHideSelectedPipe.prototype, \"filter2d\", null);\n\n  __decorate([tuiPure], TuiHideSelectedPipe.prototype, \"filter\", null);\n\n  TuiHideSelectedPipe = __decorate([__param(0, Inject(TuiMultiSelectComponent))], TuiHideSelectedPipe);\n  return TuiHideSelectedPipe;\n})();\nlet TuiMultiSelectGroupComponent = /*#__PURE__*/(() => {\n  let TuiMultiSelectGroupComponent = class TuiMultiSelectGroupComponent {\n    constructor(host, control) {\n      this.host = host;\n      this.control = control;\n      this.options = EMPTY_QUERY;\n      this.label = '';\n    }\n\n    get size() {\n      return this.options.first && this.options.first.size || 'm';\n    }\n\n    get checkboxSize() {\n      return this.options.first && sizeBigger(this.options.first.size) ? 'l' : 'm';\n    }\n\n    get empty$() {\n      return itemsQueryListObservable(this.options).pipe(map(({\n        length\n      }) => !length));\n    }\n\n    get disabled$() {\n      return itemsQueryListObservable(this.options).pipe(map(items => items.every(({\n        disabled\n      }) => disabled)));\n    }\n\n    get value$() {\n      return combineLatest(this.items$, this.valueChanges$).pipe(map(([items, current]) => {\n        let result = false;\n\n        for (let i = 0; i < items.length; i++) {\n          const selected = current.some(selected => this.matcher(selected, items[i]));\n\n          if (!selected && result || selected && !result && i) {\n            return null;\n          }\n\n          result = selected;\n        }\n\n        return result;\n      }));\n    }\n\n    onClick(checked) {\n      if (!this.control.control) {\n        return;\n      }\n\n      const controlValue = this.control.value || [];\n      const {\n        values\n      } = this;\n      const filtered = controlValue.filter(current => values.every(item => !this.matcher(current, item)));\n      this.control.control.setValue(checked ? filtered : [...filtered, ...values]);\n    }\n\n    get values() {\n      return this.filter(getOriginalArrayFromQueryList(this.options));\n    }\n\n    get matcher() {\n      return this.host.identityMatcher || TUI_DEFAULT_IDENTITY_MATCHER;\n    }\n\n    get items$() {\n      return itemsQueryListObservable(this.options).pipe(map(options => options.map(({\n        value\n      }) => value).filter(isPresent)));\n    }\n\n    get valueChanges$() {\n      return tuiReplayedValueChangesFrom(this.control).pipe(map(value => value || []));\n    }\n\n    filter(items) {\n      return items.map(({\n        value\n      }) => value).filter(isPresent);\n    }\n\n  };\n\n  TuiMultiSelectGroupComponent.ɵfac = function TuiMultiSelectGroupComponent_Factory(t) {\n    return new (t || TuiMultiSelectGroupComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_DATA_LIST_HOST), ɵngcc0.ɵɵdirectiveInject(NgControl));\n  };\n\n  TuiMultiSelectGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiMultiSelectGroupComponent,\n    selectors: [[\"tui-opt-group\", \"tuiMultiSelectGroup\", \"\"]],\n    contentQueries: function TuiMultiSelectGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TuiOptionComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    inputs: {\n      label: \"label\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([], [{\n      provide: TUI_OPTION_CONTENT,\n      useValue: null\n    }])],\n    attrs: _c1,\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"tuiLet\"], [\"tuiOption\", \"\", 3, \"size\", \"disabled\", \"click\", 4, \"ngIf\"], [\"tuiOption\", \"\", 3, \"size\", \"disabled\", \"click\"], [1, \"t-checkbox\", 3, \"size\", \"value\"], [1, \"t-label\"]],\n    template: function TuiMultiSelectGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TuiMultiSelectGroupComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵprojection(2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"tuiLet\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));\n      }\n    },\n    directives: [ɵngcc2.TuiLetDirective, ɵngcc5.NgIf, ɵngcc1.TuiOptionComponent, ɵngcc1.TuiPrimitiveCheckboxComponent],\n    pipes: [ɵngcc5.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column}[_nghost-%COMP%]:before{content:''}.t-label[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font:var(--tui-font-text-xs);flex:1;color:var(--tui-text-02)}.t-checkbox[_ngcontent-%COMP%]{margin-right:.75rem}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ContentChildren(TuiOptionComponent)], TuiMultiSelectGroupComponent.prototype, \"options\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiMultiSelectGroupComponent.prototype, \"label\", void 0);\n\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"empty$\", null);\n\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"disabled$\", null);\n\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"value$\", null);\n\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"items$\", null);\n\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"valueChanges$\", null);\n\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"filter\", null);\n\n  TuiMultiSelectGroupComponent = __decorate([__param(0, Inject(TUI_DATA_LIST_HOST)), __param(1, Inject(NgControl))], TuiMultiSelectGroupComponent);\n  return TuiMultiSelectGroupComponent;\n})();\n\nfunction hostFallbackFactory(control, host) {\n  return host || {\n    handleOption: option => {\n      if (!control.control) {\n        return;\n      }\n\n      const value = control.value || [];\n      const index = value.indexOf(option);\n      control.control.setValue(index === -1 ? [...value, option] : [...value.slice(0, index), ...value.slice(index + 1)]);\n    }\n  };\n}\n\nconst TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent); // TODO: remove in ivy compilation\n\nconst MULTI_SELECT_ACCESSOR = {\n  writeValue: EMPTY_FUNCTION,\n  registerOnChange: EMPTY_FUNCTION,\n  registerOnTouched: EMPTY_FUNCTION\n};\nlet TuiMultiSelectGroupDirective = /*#__PURE__*/(() => {\n  let TuiMultiSelectGroupDirective = class TuiMultiSelectGroupDirective {};\n\n  TuiMultiSelectGroupDirective.ɵfac = function TuiMultiSelectGroupDirective_Factory(t) {\n    return new (t || TuiMultiSelectGroupDirective)();\n  };\n\n  TuiMultiSelectGroupDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiMultiSelectGroupDirective,\n    selectors: [[\"\", \"tuiMultiSelectGroup\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: TUI_OPTION_CONTENT,\n      useValue: TUI_MULTI_SELECT_OPTION\n    }, {\n      provide: TUI_DATA_LIST_HOST,\n      deps: [NgControl, [new Optional(), forwardRef(() => TuiMultiSelectComponent)]],\n      useFactory: hostFallbackFactory\n    }, {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useValue: MULTI_SELECT_ACCESSOR\n    }])]\n  });\n  return TuiMultiSelectGroupDirective;\n})();\nlet TuiMultiSelectModule = /*#__PURE__*/(() => {\n  let TuiMultiSelectModule = class TuiMultiSelectModule {};\n\n  TuiMultiSelectModule.ɵfac = function TuiMultiSelectModule_Factory(t) {\n    return new (t || TuiMultiSelectModule)();\n  };\n\n  TuiMultiSelectModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiMultiSelectModule\n  });\n  TuiMultiSelectModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiPreventDefaultModule, TuiActiveZoneModule, TuiArrowModule, TuiLetModule, TuiMapperPipeModule, TuiHoveredModule, TuiSvgModule, TuiHostedDropdownModule, TuiInputTagModule, TuiMultiSelectOptionModule, TuiPrimitiveCheckboxModule, TuiDataListModule]]\n  });\n  return TuiMultiSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiMultiSelectModule, {\n    declarations: function () {\n      return [TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiHideSelectedPipe];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, PolymorpheusModule, TuiPreventDefaultModule, TuiActiveZoneModule, TuiArrowModule, TuiLetModule, TuiMapperPipeModule, TuiHoveredModule, TuiSvgModule, TuiHostedDropdownModule, TuiInputTagModule, TuiMultiSelectOptionModule, TuiPrimitiveCheckboxModule, TuiDataListModule];\n    },\n    exports: function () {\n      return [TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiHideSelectedPipe];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MULTI_SELECT_ACCESSOR, TUI_MULTI_SELECT_DEFAULT_OPTIONS, TUI_MULTI_SELECT_OPTION, TUI_MULTI_SELECT_OPTIONS, TuiHideSelectedPipe, TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiMultiSelectModule, hostFallbackFactory, tuiMultiSelectOptionsProvider }; //# sourceMappingURL=taiga-ui-kit-components-multi-select.js.map","map":null,"metadata":{},"sourceType":"module"}