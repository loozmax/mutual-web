{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { EventEmitter, ElementRef, Inject, Renderer2, Input, Output, HostListener, Directive, NgModule } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nlet TuiCheckedDirective = /*#__PURE__*/(() => {\n  let TuiCheckedDirective = class TuiCheckedDirective {\n    constructor(element, renderer) {\n      this.element = element;\n      this.renderer = renderer;\n      this.tuiCheckedChange = new EventEmitter();\n      this.updateProperty('checked', false);\n    }\n\n    set tuiChecked(checked) {\n      this.updateProperty('checked', checked || false);\n      this.updateProperty('indeterminate', checked === null);\n    }\n\n    onChange({\n      checked\n    }) {\n      this.updateProperty('indeterminate', false);\n      this.tuiCheckedChange.emit(checked);\n    }\n\n    updateProperty(property, value) {\n      this.renderer.setProperty(this.element.nativeElement, property, value);\n    }\n\n  };\n\n  TuiCheckedDirective.ɵfac = function TuiCheckedDirective_Factory(t) {\n    return new (t || TuiCheckedDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n  };\n\n  TuiCheckedDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiCheckedDirective,\n    selectors: [[\"input\", \"tuiChecked\", \"\"], [\"input\", \"tuiCheckedChange\", \"\"]],\n    hostBindings: function TuiCheckedDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function TuiCheckedDirective_change_HostBindingHandler($event) {\n          return ctx.onChange($event.target);\n        });\n      }\n    },\n    inputs: {\n      tuiChecked: \"tuiChecked\"\n    },\n    outputs: {\n      tuiCheckedChange: \"tuiCheckedChange\"\n    }\n  });\n\n  __decorate([Input()], TuiCheckedDirective.prototype, \"tuiChecked\", null);\n\n  __decorate([Output()], TuiCheckedDirective.prototype, \"tuiCheckedChange\", void 0);\n\n  __decorate([HostListener('change', ['$event.target'])], TuiCheckedDirective.prototype, \"onChange\", null);\n\n  TuiCheckedDirective = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(Renderer2))], TuiCheckedDirective);\n  return TuiCheckedDirective;\n})();\nlet TuiCheckedModule = /*#__PURE__*/(() => {\n  let TuiCheckedModule = class TuiCheckedModule {};\n\n  TuiCheckedModule.ɵfac = function TuiCheckedModule_Factory(t) {\n    return new (t || TuiCheckedModule)();\n  };\n\n  TuiCheckedModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiCheckedModule\n  });\n  TuiCheckedModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiCheckedModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiCheckedModule, {\n    declarations: [TuiCheckedDirective],\n    exports: [TuiCheckedDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiCheckedDirective, TuiCheckedModule }; //# sourceMappingURL=taiga-ui-cdk-directives-checked.js.map","map":null,"metadata":{},"sourceType":"module"}