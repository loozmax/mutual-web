{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ViewContainerRef, Inject, TemplateRef, Input, Directive, NgModule } from '@angular/core';\nimport { tuiRequiredSetter } from '@taiga-ui/cdk/decorators';\nimport { clamp } from '@taiga-ui/cdk/utils/math';\nimport * as ɵngcc0 from '@angular/core';\nconst MAX_VALUE = 0x10000;\n\nclass TuiRepeatTimesContext {\n  constructor($implicit) {\n    this.$implicit = $implicit;\n  }\n\n}\n/**\n * Directive similar to ngFor but using a number of repetitions rather than an array\n *\n * {@link TuiRepeatTimesDirective.tuiRepeatTimesOf requested number of times}.\n * {@link TuiRepeatTimesContext context} for every instance of the template inherits outer context and stores\n * {@link TuiRepeatTimesContext.$implicit index} of a template instance.\n */\n\n\nlet TuiRepeatTimesDirective = /*#__PURE__*/(() => {\n  let TuiRepeatTimesDirective = class TuiRepeatTimesDirective {\n    constructor(viewContainer, templateRef) {\n      this.viewContainer = viewContainer;\n      this.templateRef = templateRef;\n    }\n\n    set tuiRepeatTimesOf(count) {\n      const safeCount = Math.floor(clamp(count, 0, MAX_VALUE));\n      const {\n        length\n      } = this.viewContainer;\n\n      if (count < length) {\n        this.removeContainers(length - count);\n      } else {\n        this.addContainers(safeCount);\n      }\n    }\n\n    addContainers(count) {\n      for (let index = this.viewContainer.length; index < count; index++) {\n        this.viewContainer.createEmbeddedView(this.templateRef, new TuiRepeatTimesContext(index));\n      }\n    }\n\n    removeContainers(amount) {\n      for (let index = 0; index < amount; index++) {\n        this.viewContainer.remove();\n      }\n    }\n\n  };\n\n  TuiRepeatTimesDirective.ɵfac = function TuiRepeatTimesDirective_Factory(t) {\n    return new (t || TuiRepeatTimesDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n  };\n\n  TuiRepeatTimesDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiRepeatTimesDirective,\n    selectors: [[\"\", \"tuiRepeatTimes\", \"\", \"tuiRepeatTimesOf\", \"\"]],\n    inputs: {\n      tuiRepeatTimesOf: \"tuiRepeatTimesOf\"\n    }\n  });\n\n  __decorate([Input(), tuiRequiredSetter()], TuiRepeatTimesDirective.prototype, \"tuiRepeatTimesOf\", null);\n\n  TuiRepeatTimesDirective = __decorate([__param(0, Inject(ViewContainerRef)), __param(1, Inject(TemplateRef))], TuiRepeatTimesDirective);\n  return TuiRepeatTimesDirective;\n})();\nlet TuiRepeatTimesModule = /*#__PURE__*/(() => {\n  let TuiRepeatTimesModule = class TuiRepeatTimesModule {};\n\n  TuiRepeatTimesModule.ɵfac = function TuiRepeatTimesModule_Factory(t) {\n    return new (t || TuiRepeatTimesModule)();\n  };\n\n  TuiRepeatTimesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiRepeatTimesModule\n  });\n  TuiRepeatTimesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiRepeatTimesModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiRepeatTimesModule, {\n    declarations: [TuiRepeatTimesDirective],\n    exports: [TuiRepeatTimesDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiRepeatTimesContext, TuiRepeatTimesDirective, TuiRepeatTimesModule }; //# sourceMappingURL=taiga-ui-cdk-directives-repeat-times.js.map","map":null,"metadata":{},"sourceType":"module"}