{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Attribute, Inject, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';\n/**\n * Abstraction over `inputMode` attribute\n */\n\nimport * as ɵngcc0 from '@angular/core';\nlet TuiInputModeDirective = /*#__PURE__*/(() => {\n  let TuiInputModeDirective = class TuiInputModeDirective {\n    constructor(pattern, isIOS) {\n      this.pattern = pattern;\n      this.isIOS = isIOS;\n      this.mode = 'text';\n    }\n\n    get patternAttribute() {\n      return this.mode === 'numeric' && this.isIOS && !this.pattern ? '[0-9]*' : this.pattern;\n    }\n\n  };\n\n  TuiInputModeDirective.ɵfac = function TuiInputModeDirective_Factory(t) {\n    return new (t || TuiInputModeDirective)(ɵngcc0.ɵɵinjectAttribute('pattern'), ɵngcc0.ɵɵdirectiveInject(TUI_IS_IOS));\n  };\n\n  TuiInputModeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiInputModeDirective,\n    selectors: [[\"input\", \"tuiInputMode\", \"\"]],\n    hostVars: 3,\n    hostBindings: function TuiInputModeDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"inputmode\", ctx.mode)(\"x-inputmode\", ctx.mode)(\"pattern\", ctx.patternAttribute);\n      }\n    },\n    inputs: {\n      mode: [\"tuiInputMode\", \"mode\"]\n    }\n  });\n\n  __decorate([Input('tuiInputMode'), HostBinding('attr.inputmode'), HostBinding('attr.x-inputmode')], TuiInputModeDirective.prototype, \"mode\", void 0);\n\n  __decorate([HostBinding('attr.pattern')], TuiInputModeDirective.prototype, \"patternAttribute\", null);\n\n  TuiInputModeDirective = __decorate([__param(0, Attribute('pattern')), __param(1, Inject(TUI_IS_IOS))], TuiInputModeDirective);\n  return TuiInputModeDirective;\n})();\nlet TuiInputModeModule = /*#__PURE__*/(() => {\n  let TuiInputModeModule = class TuiInputModeModule {};\n\n  TuiInputModeModule.ɵfac = function TuiInputModeModule_Factory(t) {\n    return new (t || TuiInputModeModule)();\n  };\n\n  TuiInputModeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiInputModeModule\n  });\n  TuiInputModeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiInputModeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiInputModeModule, {\n    declarations: [TuiInputModeDirective],\n    exports: [TuiInputModeDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiInputModeDirective, TuiInputModeModule }; //# sourceMappingURL=taiga-ui-cdk-directives-input-mode.js.map","map":null,"metadata":{},"sourceType":"module"}