{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { EventEmitter, Inject, ViewChild, Input, Output, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { AbstractTuiInteractive, isNativeFocused, tuiDefaultProp, TuiFocusVisibleModule, TuiFocusedModule, TuiFocusableModule, TuiPreventDefaultModule } from '@taiga-ui/cdk';\nimport { TUI_SPIN_TEXTS } from '@taiga-ui/core/tokens';\nimport { Observable } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { TuiButtonModule } from '@taiga-ui/core/components/button'; // @dynamic\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nimport * as ɵngcc3 from '@taiga-ui/core/components/button';\nimport * as ɵngcc4 from 'rxjs';\nconst _c0 = [\"wrapper\"];\n\nfunction TuiPrimitiveSpinButtonComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1, 2);\n    ɵngcc0.ɵɵlistener(\"tuiFocusedChange\", function TuiPrimitiveSpinButtonComponent_div_0_Template_div_tuiFocusedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onFocused($event);\n    })(\"tuiFocusVisibleChange\", function TuiPrimitiveSpinButtonComponent_div_0_Template_div_tuiFocusVisibleChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onFocusVisible($event);\n    })(\"keydown.arrowLeft\", function TuiPrimitiveSpinButtonComponent_div_0_Template_div_keydown_arrowLeft_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onLeftClick();\n    })(\"keydown.arrowRight\", function TuiPrimitiveSpinButtonComponent_div_0_Template_div_keydown_arrowRight_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onRightClick();\n    });\n    ɵngcc0.ɵɵelementStart(2, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TuiPrimitiveSpinButtonComponent_div_0_Template_button_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onLeftClick();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\", 4);\n    ɵngcc0.ɵɵprojection(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function TuiPrimitiveSpinButtonComponent_div_0_Template_button_click_5_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onRightClick();\n    });\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const texts_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"tuiFocusable\", ctx_r0.computedFocusable);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"arrow_hidden\", ctx_r0.leftComputedDisabled);\n    ɵngcc0.ɵɵproperty(\"title\", texts_r1[0])(\"focusable\", false);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassProp(\"arrow_hidden\", ctx_r0.rightComputedDisabled);\n    ɵngcc0.ɵɵproperty(\"title\", texts_r1[1])(\"focusable\", false);\n  }\n}\n\nconst _c1 = [\"*\"];\nlet TuiPrimitiveSpinButtonComponent = /*#__PURE__*/(() => {\n  let TuiPrimitiveSpinButtonComponent = class TuiPrimitiveSpinButtonComponent extends AbstractTuiInteractive {\n    constructor(spinTexts$) {\n      super();\n      this.spinTexts$ = spinTexts$;\n      this.disabled = false;\n      this.mode = \"flat\"\n      /* Flat */\n      ;\n      this.leftDisabled = false;\n      this.rightDisabled = false;\n      this.leftClick = new EventEmitter();\n      this.rightClick = new EventEmitter();\n    }\n\n    get focused() {\n      return !!this.wrapper && isNativeFocused(this.wrapper.nativeElement);\n    }\n\n    get leftComputedDisabled() {\n      return this.computedDisabled || this.leftDisabled;\n    }\n\n    get rightComputedDisabled() {\n      return this.computedDisabled || this.rightDisabled;\n    }\n\n    onLeftClick() {\n      if (!this.leftComputedDisabled) {\n        this.leftClick.emit();\n      }\n    }\n\n    onRightClick() {\n      if (!this.rightComputedDisabled) {\n        this.rightClick.emit();\n      }\n    }\n\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n\n    onFocusVisible(focusVisible) {\n      this.updateFocusVisible(focusVisible);\n    }\n\n  };\n\n  TuiPrimitiveSpinButtonComponent.ɵfac = function TuiPrimitiveSpinButtonComponent_Factory(t) {\n    return new (t || TuiPrimitiveSpinButtonComponent)(ɵngcc0.ɵɵdirectiveInject(TUI_SPIN_TEXTS));\n  };\n\n  TuiPrimitiveSpinButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiPrimitiveSpinButtonComponent,\n    selectors: [[\"tui-primitive-spin-button\"]],\n    viewQuery: function TuiPrimitiveSpinButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      mode: \"mode\",\n      leftDisabled: \"leftDisabled\",\n      rightDisabled: \"rightDisabled\"\n    },\n    outputs: {\n      leftClick: \"leftClick\",\n      rightClick: \"rightClick\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 3,\n    consts: [[\"tuiPreventDefault\", \"mousedown\", \"class\", \"wrapper\", 3, \"tuiFocusable\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\", \"keydown.arrowLeft\", \"keydown.arrowRight\", 4, \"ngIf\"], [\"tuiPreventDefault\", \"mousedown\", 1, \"wrapper\", 3, \"tuiFocusable\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\", \"keydown.arrowLeft\", \"keydown.arrowRight\"], [\"wrapper\", \"\"], [\"tuiIconButton\", \"\", \"type\", \"button\", \"size\", \"xs\", \"appearance\", \"\", \"automation-id\", \"tui-primitive-spin-button__left\", \"icon\", \"tuiIconChevronLeftLarge\", 1, \"arrow\", 3, \"title\", \"focusable\", \"click\"], [1, \"content\"], [\"tuiIconButton\", \"\", \"type\", \"button\", \"size\", \"xs\", \"appearance\", \"\", \"automation-id\", \"tui-primitive-spin-button__right\", \"icon\", \"tuiIconChevronRightLarge\", 1, \"arrow\", 3, \"title\", \"focusable\", \"click\"]],\n    template: function TuiPrimitiveSpinButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TuiPrimitiveSpinButtonComponent_div_0_Template, 6, 9, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.spinTexts$));\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.TuiPreventDefaultDirective, ɵngcc2.TuiFocusableDirective, ɵngcc2.TuiFocusedDirective, ɵngcc2.TuiFocusVisibleDirective, ɵngcc3.TuiButtonComponent],\n    pipes: [ɵngcc1.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;font:var(--tui-font-text-l);text-align:center;font-weight:700}.wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;outline:0}.arrow[_ngcontent-%COMP%]{margin:0 .25rem}.arrow_hidden[_ngcontent-%COMP%]{visibility:hidden}.content[_ngcontent-%COMP%]{padding:0 .5rem}._focus-visible[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{box-shadow:0 0 0 1px var(--tui-focus)}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ViewChild('wrapper')], TuiPrimitiveSpinButtonComponent.prototype, \"wrapper\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveSpinButtonComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveSpinButtonComponent.prototype, \"mode\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveSpinButtonComponent.prototype, \"leftDisabled\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiPrimitiveSpinButtonComponent.prototype, \"rightDisabled\", void 0);\n\n  __decorate([Output()], TuiPrimitiveSpinButtonComponent.prototype, \"leftClick\", void 0);\n\n  __decorate([Output()], TuiPrimitiveSpinButtonComponent.prototype, \"rightClick\", void 0);\n\n  TuiPrimitiveSpinButtonComponent = __decorate([__param(0, Inject(TUI_SPIN_TEXTS))], TuiPrimitiveSpinButtonComponent);\n  return TuiPrimitiveSpinButtonComponent;\n})();\nlet TuiPrimitiveSpinButtonModule = /*#__PURE__*/(() => {\n  let TuiPrimitiveSpinButtonModule = class TuiPrimitiveSpinButtonModule {};\n\n  TuiPrimitiveSpinButtonModule.ɵfac = function TuiPrimitiveSpinButtonModule_Factory(t) {\n    return new (t || TuiPrimitiveSpinButtonModule)();\n  };\n\n  TuiPrimitiveSpinButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiPrimitiveSpinButtonModule\n  });\n  TuiPrimitiveSpinButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiFocusVisibleModule, TuiFocusedModule, TuiFocusableModule, TuiPreventDefaultModule, TuiButtonModule]]\n  });\n  return TuiPrimitiveSpinButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiPrimitiveSpinButtonModule, {\n    declarations: function () {\n      return [TuiPrimitiveSpinButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, TuiFocusVisibleModule, TuiFocusedModule, TuiFocusableModule, TuiPreventDefaultModule, TuiButtonModule];\n    },\n    exports: function () {\n      return [TuiPrimitiveSpinButtonComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiPrimitiveSpinButtonComponent, TuiPrimitiveSpinButtonModule }; //# sourceMappingURL=taiga-ui-core-components-primitive-spin-button.js.map","map":null,"metadata":{},"sourceType":"module"}