{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { InjectionToken, Inject, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { sizeBigger, TuiHostedDropdownComponent, TuiTextfieldSizeDirective, TUI_TEXTFIELD_SIZE, TuiSvgModule } from '@taiga-ui/core';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { CommonModule } from '@angular/common'; // TODO: remove in ivy compilation\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc2 from '@taiga-ui/core';\nimport * as ɵngcc3 from '@angular/common';\n\nfunction TuiArrowComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tui-svg\", 1);\n  }\n\n  if (rf & 2) {\n    const icon_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"src\", icon_r1);\n  }\n}\n\nconst TUI_ARROW_ICON_SMALL = 'tuiIconChevronDown';\nconst TUI_ARROW_ICON_LARGE = 'tuiIconChevronDownLarge';\n/** Default values for arrow options */\n\nconst TUI_ARROW_DEFAULT_OPTIONS = {\n  iconSmall: TUI_ARROW_ICON_SMALL,\n  iconLarge: TUI_ARROW_ICON_LARGE\n};\nconst TUI_ARROW_OPTIONS = new InjectionToken('Default parameters for arrow component', {\n  factory: () => TUI_ARROW_DEFAULT_OPTIONS\n});\n\nconst tuiArrowOptionsProvider = options => ({\n  provide: TUI_ARROW_OPTIONS,\n  useValue: Object.assign(Object.assign({}, TUI_ARROW_DEFAULT_OPTIONS), options)\n});\n\nconst TUI_ARROW_MODE = new InjectionToken('Type of icon in dropdowns for interactive or disable mode', {\n  factory: () => ({\n    interactive: TUI_ARROW,\n    disabled: TUI_ARROW\n  })\n});\n\nconst tuiArrowModeProvider = options => ({\n  provide: TUI_ARROW_MODE,\n  useValue: Object.assign({\n    interactive: TUI_ARROW,\n    disabled: TUI_ARROW\n  }, options)\n});\n\nlet TuiArrowComponent = /*#__PURE__*/(() => {\n  let TuiArrowComponent = class TuiArrowComponent {\n    constructor(dropdown, textfieldSize, options) {\n      this.dropdown = dropdown;\n      this.textfieldSize = textfieldSize;\n      this.options = options;\n    }\n\n    get arrowIcon() {\n      return sizeBigger(this.textfieldSize.size) ? this.options.iconLarge : this.options.iconSmall;\n    }\n\n  };\n\n  TuiArrowComponent.ɵfac = function TuiArrowComponent_Factory(t) {\n    return new (t || TuiArrowComponent)(ɵngcc0.ɵɵdirectiveInject(TuiHostedDropdownComponent), ɵngcc0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), ɵngcc0.ɵɵdirectiveInject(TUI_ARROW_OPTIONS));\n  };\n\n  TuiArrowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiArrowComponent,\n    selectors: [[\"tui-arrow\"]],\n    decls: 3,\n    vars: 5,\n    consts: [[\"polymorpheus-outlet\", \"\", 1, \"t-icon\", 3, \"content\"], [3, \"src\"]],\n    template: function TuiArrowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtemplate(2, TuiArrowComponent_ng_template_2_Template, 1, 1, \"ng-template\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"t-icon_rotated\", ɵngcc0.ɵɵpipeBind1(1, 3, ctx.dropdown.openChange));\n        ɵngcc0.ɵɵproperty(\"content\", ctx.arrowIcon);\n      }\n    },\n    directives: [ɵngcc1.PolymorpheusOutletComponent, ɵngcc2.TuiSvgComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    styles: [\".t-icon[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:block;cursor:pointer;pointer-events:none}.t-icon_rotated[_ngcontent-%COMP%]{transform:rotate(180deg)}\"],\n    changeDetection: 0\n  });\n  TuiArrowComponent = __decorate([__param(0, Inject(TuiHostedDropdownComponent)), __param(1, Inject(TUI_TEXTFIELD_SIZE)), __param(2, Inject(TUI_ARROW_OPTIONS))], TuiArrowComponent);\n  return TuiArrowComponent;\n})();\nconst TUI_ARROW = new PolymorpheusComponent(TuiArrowComponent);\nlet TuiArrowModule = /*#__PURE__*/(() => {\n  let TuiArrowModule = class TuiArrowModule {};\n\n  TuiArrowModule.ɵfac = function TuiArrowModule_Factory(t) {\n    return new (t || TuiArrowModule)();\n  };\n\n  TuiArrowModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiArrowModule\n  });\n  TuiArrowModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiSvgModule, PolymorpheusModule]]\n  });\n  return TuiArrowModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiArrowModule, {\n    declarations: function () {\n      return [TuiArrowComponent];\n    },\n    imports: function () {\n      return [CommonModule, TuiSvgModule, PolymorpheusModule];\n    },\n    exports: function () {\n      return [TuiArrowComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TUI_ARROW, TUI_ARROW_DEFAULT_OPTIONS, TUI_ARROW_ICON_LARGE, TUI_ARROW_ICON_SMALL, TUI_ARROW_MODE, TUI_ARROW_OPTIONS, TuiArrowComponent, TuiArrowModule, tuiArrowModeProvider, tuiArrowOptionsProvider }; //# sourceMappingURL=taiga-ui-kit-components-arrow.js.map","map":null,"metadata":{},"sourceType":"module"}