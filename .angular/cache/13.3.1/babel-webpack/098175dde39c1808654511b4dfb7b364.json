{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { InjectionToken, ElementRef, Inject, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport { TuiDestroyService, TuiFocusVisibleService, typedFromEvent, stopPropagation, tuiDefaultProp } from '@taiga-ui/cdk';\nimport { TuiHintService } from '@taiga-ui/core/services';\nimport { timer, merge, Observable } from 'rxjs';\nimport { filter, switchMapTo, mapTo, takeUntil, take, startWith, distinctUntilChanged } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core/services';\nimport * as ɵngcc2 from 'rxjs';\nconst DELAY = 1000;\nconst TUI_DESCRIBED_BY_SHOW = new InjectionToken('Accessible tooltip visibility stream');\nconst TUI_DESCRIBED_BY_PROVIDERS = [TuiDestroyService, TuiFocusVisibleService, {\n  provide: TUI_DESCRIBED_BY_SHOW,\n  deps: [TuiFocusVisibleService, ElementRef],\n  useFactory: describedByFactory\n}];\n\nfunction describedByFactory(focusVisible$, {\n  nativeElement\n}) {\n  return focusVisible$.pipe(filter(Boolean), switchMapTo(timer(DELAY).pipe(mapTo(true), takeUntil(merge(typedFromEvent(nativeElement, 'keydown'), typedFromEvent(nativeElement, 'blur'))))), switchMapTo(merge(typedFromEvent(nativeElement, 'keydown').pipe(filter(({\n    key\n  }) => key === 'Escape'), take(1), stopPropagation(), mapTo(false), startWith(true)), typedFromEvent(nativeElement, 'blur').pipe(mapTo(false))))).pipe(distinctUntilChanged());\n}\n\nconst DESCRIBED_BY = '_described-by';\n/**\n * A directive linking focusable elements and hints for accessibility\n */\n\nlet TuiDescribedByDirective = /*#__PURE__*/(() => {\n  let TuiDescribedByDirective = class TuiDescribedByDirective {\n    constructor(hintService, visibility$) {\n      this.tuiDescribedBy = '';\n      visibility$.subscribe(visible => {\n        if (!this.tuiDescribedBy) {\n          return;\n        }\n\n        if (visible) {\n          hintService.showHintForId(this.tuiDescribedBy);\n        } else {\n          hintService.hideHintForId(this.tuiDescribedBy);\n        }\n      });\n    }\n\n    get computedDescribedBy() {\n      return this.tuiDescribedBy ? this.tuiDescribedBy + DESCRIBED_BY : null;\n    }\n\n  };\n\n  TuiDescribedByDirective.ɵfac = function TuiDescribedByDirective_Factory(t) {\n    return new (t || TuiDescribedByDirective)(ɵngcc0.ɵɵdirectiveInject(TuiHintService), ɵngcc0.ɵɵdirectiveInject(TUI_DESCRIBED_BY_SHOW));\n  };\n\n  TuiDescribedByDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiDescribedByDirective,\n    selectors: [[\"\", \"tuiDescribedBy\", \"\", 5, \"ng-container\"]],\n    hostVars: 1,\n    hostBindings: function TuiDescribedByDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-describedby\", ctx.computedDescribedBy);\n      }\n    },\n    inputs: {\n      tuiDescribedBy: \"tuiDescribedBy\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature(TUI_DESCRIBED_BY_PROVIDERS)]\n  });\n\n  __decorate([Input(), tuiDefaultProp()], TuiDescribedByDirective.prototype, \"tuiDescribedBy\", void 0);\n\n  __decorate([HostBinding('attr.aria-describedby')], TuiDescribedByDirective.prototype, \"computedDescribedBy\", null);\n\n  TuiDescribedByDirective = __decorate([__param(0, Inject(TuiHintService)), __param(1, Inject(TUI_DESCRIBED_BY_SHOW))], TuiDescribedByDirective);\n  return TuiDescribedByDirective;\n})();\nlet TuiDescribedByModule = /*#__PURE__*/(() => {\n  let TuiDescribedByModule = class TuiDescribedByModule {};\n\n  TuiDescribedByModule.ɵfac = function TuiDescribedByModule_Factory(t) {\n    return new (t || TuiDescribedByModule)();\n  };\n\n  TuiDescribedByModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiDescribedByModule\n  });\n  TuiDescribedByModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiDescribedByModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiDescribedByModule, {\n    declarations: [TuiDescribedByDirective],\n    exports: [TuiDescribedByDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DESCRIBED_BY, TUI_DESCRIBED_BY_PROVIDERS, TUI_DESCRIBED_BY_SHOW, TuiDescribedByDirective, TuiDescribedByModule, describedByFactory }; //# sourceMappingURL=taiga-ui-core-directives-described-by.js.map","map":null,"metadata":{},"sourceType":"module"}