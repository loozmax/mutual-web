{"ast":null,"code":"import { BehaviorSubject, map, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserBaseService = /*#__PURE__*/(() => {\n  class UserBaseService {\n    constructor(_httpRequestService) {\n      this._httpRequestService = _httpRequestService;\n      this._getUser$ = new BehaviorSubject(null);\n    }\n    /**\n     * метод для регистрации пользователя в системе\n     * @param user данные юзера\n     * @returns юзера при успешной регистрации\n     */\n\n\n    registerStudent(user) {\n      return this._httpRequestService.post('/api/registration/student', user).pipe(tap(data => this.setUser(data)));\n    }\n    /**\n     * метод для регистрации пользователя в системе\n     * @param user данные юзера\n     * @returns юзера при успешной регистрации\n     */\n\n\n    registerTeacher(user) {\n      return this._httpRequestService.post('/api/registration/teacher', user).pipe(tap(data => this.setUser(data)));\n    }\n    /**\n     * метод для логина. запрашиваем всех пользователей и ищем совпадение\n     * при успешном поиске сохраняем юзера и авторизовываем в системе\n     * @param user\n     * @returns результат поиска в булевом представлении\n     */\n\n\n    login(user, role) {\n      const formData = new FormData();\n      formData.append(\"username\", role);\n      formData.append(\"password\", user.password);\n      return this._httpRequestService.post('/api/login', formData).pipe(map(data => {\n        if (data) {\n          this.setUser(data);\n          return data;\n        }\n      }));\n    }\n\n    setUser(user) {\n      this._getUser$.next(user);\n    }\n\n    getUser() {\n      return this._getUser$;\n    }\n\n    logout() {\n      this._httpRequestService.get(`/api/logout`).subscribe();\n    }\n\n  }\n\n  UserBaseService.ɵfac = function UserBaseService_Factory(t) {\n    return new (t || UserBaseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserBaseService,\n    factory: UserBaseService.ɵfac\n  });\n  return UserBaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}