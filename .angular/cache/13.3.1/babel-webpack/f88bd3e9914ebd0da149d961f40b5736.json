{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Inject, Pipe, NgModule } from '@angular/core';\nimport { DAYS_IN_WEEK, tuiAssert, inRange, TuiDay } from '@taiga-ui/cdk';\nimport { TUI_FIRST_DAY_OF_WEEK } from '@taiga-ui/core/tokens'; // TODO: Remove export in ivy compiation\n\n/**\n * Computes day of week offset of the beginning of the month\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst getMonthStartDaysOffset = (month, firstDayOfWeek) => {\n  const startMonthOffsetFromSunday = new Date(month.year, month.month, 1).getDay();\n  return startMonthOffsetFromSunday >= firstDayOfWeek ? startMonthOffsetFromSunday - firstDayOfWeek : DAYS_IN_WEEK - (firstDayOfWeek - startMonthOffsetFromSunday);\n};\n/*\nTODO: delete in v3.0:\n * TuiDay.getDayFromMonthRowCol\n * TuiMonth.monthStartDaysOffset\n * TuiMonth.weeksRowsCount\n * TuiYear.yearStartDaysOffset\n * TuiYear.getYearStartDaysOffset\n */\n\n/**\n * Calculated day on a calendar grid\n * @return resulting day on these coordinates (could exceed passed month)\n */\n\n\nconst getDayFromMonthRowCol = ({\n  month,\n  rowIndex,\n  colIndex,\n  firstDayOfWeek\n}) => {\n  tuiAssert.assert(Number.isInteger(rowIndex));\n  tuiAssert.assert(inRange(rowIndex, 0, 6));\n  tuiAssert.assert(Number.isInteger(colIndex));\n  tuiAssert.assert(inRange(colIndex, 0, DAYS_IN_WEEK));\n  let day = rowIndex * DAYS_IN_WEEK + colIndex - getMonthStartDaysOffset(month, firstDayOfWeek) + 1;\n\n  if (day > month.daysCount) {\n    day = day - month.daysCount;\n    month = month.append({\n      month: 1\n    });\n  }\n\n  if (day <= 0) {\n    month = month.append({\n      month: -1\n    });\n    day = month.daysCount + day;\n  }\n\n  return new TuiDay(month.year, month.month, day);\n};\n\nconst CALENDAR_ROWS_COUNT = 6;\nlet TuiCalendarSheetPipe = /*#__PURE__*/(() => {\n  let TuiCalendarSheetPipe = class TuiCalendarSheetPipe {\n    constructor(firstDayOfWeek) {\n      this.firstDayOfWeek = firstDayOfWeek;\n      this.currentMonth = null;\n      this.currentSheet = [];\n    }\n\n    transform(month, showAdjacentDays = false) {\n      if (this.currentMonth && this.currentMonth.monthSame(month)) {\n        return this.currentSheet;\n      }\n\n      const sheet = [];\n\n      for (let rowIndex = 0; rowIndex < CALENDAR_ROWS_COUNT; rowIndex++) {\n        const row = [];\n\n        for (let colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {\n          const day = getDayFromMonthRowCol({\n            month,\n            rowIndex,\n            colIndex,\n            firstDayOfWeek: this.firstDayOfWeek\n          });\n\n          const isPrevMonthDay = (day, relativeToMonth = month) => day.year < relativeToMonth.year || day.month < relativeToMonth.month;\n\n          const isNextMonthDay = (day, relativeToMonth = month) => day.year > relativeToMonth.year || day.month > relativeToMonth.month;\n\n          if (isPrevMonthDay(day) && !showAdjacentDays) {\n            continue;\n          }\n\n          if (isNextMonthDay(day) && !showAdjacentDays) {\n            break;\n          }\n\n          row.push(day);\n        }\n\n        sheet.push(row);\n      }\n\n      this.currentSheet = sheet.filter(row => row.length);\n      this.currentMonth = month;\n      return this.currentSheet;\n    }\n\n  };\n\n  TuiCalendarSheetPipe.ɵfac = function TuiCalendarSheetPipe_Factory(t) {\n    return new (t || TuiCalendarSheetPipe)(ɵngcc0.ɵɵdirectiveInject(TUI_FIRST_DAY_OF_WEEK, 16));\n  };\n\n  TuiCalendarSheetPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"tuiCalendarSheet\",\n    type: TuiCalendarSheetPipe,\n    pure: true\n  });\n  TuiCalendarSheetPipe = __decorate([__param(0, Inject(TUI_FIRST_DAY_OF_WEEK))], TuiCalendarSheetPipe);\n  return TuiCalendarSheetPipe;\n})();\nlet TuiCalendarSheetPipeModule = /*#__PURE__*/(() => {\n  let TuiCalendarSheetPipeModule = class TuiCalendarSheetPipeModule {};\n\n  TuiCalendarSheetPipeModule.ɵfac = function TuiCalendarSheetPipeModule_Factory(t) {\n    return new (t || TuiCalendarSheetPipeModule)();\n  };\n\n  TuiCalendarSheetPipeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiCalendarSheetPipeModule\n  });\n  TuiCalendarSheetPipeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TuiCalendarSheetPipeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiCalendarSheetPipeModule, {\n    declarations: [TuiCalendarSheetPipe],\n    exports: [TuiCalendarSheetPipe]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiCalendarSheetPipe, TuiCalendarSheetPipeModule }; //# sourceMappingURL=taiga-ui-core-pipes-calendar-sheet.js.map","map":null,"metadata":{},"sourceType":"module"}